<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\_build\nrf51422_xxac_s110.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\_build\nrf51422_xxac_s110.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050169: Last Updated: Tue Mar 21 14:41:27 2017
<BR><P>
<H3>Maximum Stack Usage =       1316 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; CheckUpdateKl17 &rArr; do_update &rArr; READ_OTA_INFO &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[100]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[100]">__asm___11_nrf_delay_c_532987f3__nrf_delay_us</a><BR>
 <LI><a href="#[103]">__asm___10_protocol_c_KL17_VER__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[103]">__asm___10_protocol_c_KL17_VER__nrf_delay_us</a><BR>
 <LI><a href="#[104]">__asm___16_KL17CmdPackage_c_80624e7e__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[104]">__asm___16_KL17CmdPackage_c_80624e7e__nrf_delay_us</a><BR>
 <LI><a href="#[105]">__asm___13_ExtSpiFlash_c_u_Delay__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[105]">__asm___13_ExtSpiFlash_c_u_Delay__nrf_delay_us</a><BR>
 <LI><a href="#[102]">__asm___8_HwTask_c_e0b1165f__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[102]">__asm___8_HwTask_c_e0b1165f__nrf_delay_us</a><BR>
 <LI><a href="#[106]">__asm___12_AS7000_I2c_c_ee77214a__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[106]">__asm___12_AS7000_I2c_c_ee77214a__nrf_delay_us</a><BR>
 <LI><a href="#[101]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[101]">__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</a><BR>
 <LI><a href="#[423]">app_notify_error_state_transit</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[425]">sm_state_change</a><BR>
 <LI><a href="#[425]">sm_state_change</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[492]">cmd_process</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[c]">ADC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[cb]">AndroidCallCB</a> from neul18cmdpackage.o(i.AndroidCallCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[cc]">AndroidSmsCallCB</a> from neul18cmdpackage.o(i.AndroidSmsCallCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[ce]">AndroidSocialCB</a> from neul18cmdpackage.o(i.AndroidSocialCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[cf]">AndroideEmailCB</a> from neul18cmdpackage.o(i.AndroideEmailCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[d0]">AndroideScheduleCB</a> from neul18cmdpackage.o(i.AndroideScheduleCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[7b]">AppEventHandler</a> from apphandler.o(i.AppEventHandler) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[7c]">AppInitTask</a> from apphandler.o(i.AppInitTask) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[2c]">AppsBoxHandler</a> from alarmhandler.o(i.AppsBoxHandler) referenced from alarmhandler.o(i.AppsMmenuHandler)
 <LI><a href="#[3b]">AppsMmenuHandler</a> from alarmhandler.o(i.AppsMmenuHandler) referenced from standbyhandler.o(i.LoadMenuHandler)
 <LI><a href="#[c4]">AutoHeartRateCB</a> from neul18cmdpackage.o(i.AutoHeartRateCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[ac]">BacklightSettingCmdCB</a> from neul18cmdpackage.o(i.BacklightSettingCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[c7]">BaseKcalTypeCB</a> from neul18cmdpackage.o(i.BaseKcalTypeCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[4c]">BatteryHandler</a> from alarmhandler.o(i.BatteryHandler) referenced from alarmhandler.o(i.SettingHandler)
 <LI><a href="#[66]">BatteryStatusHandler</a> from batterystatushandler.o(i.BatteryStatusHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[d4]">BindingBeginCmdCB</a> from neul18cmdpackage.o(i.BindingBeginCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[d5]">BindingEndCmdCB</a> from neul18cmdpackage.o(i.BindingEndCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[67]">BleBondChooseHandler</a> from alarmhandler.o(i.BleBondChooseHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[7f]">BleEventHandler</a> from bletask.o(i.BleEventHandler) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[80]">BleInitTask</a> from bletask.o(i.BleInitTask) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[2a]">BrightnessHandler</a> from alarmhandler.o(i.BrightnessHandler) referenced from alarmhandler.o(i.AppsBoxHandler)
 <LI><a href="#[68]">BtBleDisconnectHandler</a> from alarmhandler.o(i.BtBleDisconnectHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[14]">CCM_AAR_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[db]">CameraControlCmdCB</a> from neul18cmdpackage.o(i.CameraControlCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[24]">CameraHandler</a> from alarmhandler.o(i.CameraHandler) referenced from alarmhandler.o(i.AppsBoxHandler)
 <LI><a href="#[69]">ClearAllHandler</a> from alarmhandler.o(i.ClearAllHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[c2]">ClearHeartRateDataCB</a> from neul18cmdpackage.o(i.ClearHeartRateDataCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[ca]">ClearRecordWorkDataCB</a> from neul18cmdpackage.o(i.ClearRecordWorkDataCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[bd]">ClearSleepDataCB</a> from neul18cmdpackage.o(i.ClearSleepDataCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[bb]">ClearSportDataCB</a> from neul18cmdpackage.o(i.ClearSportDataCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[89]">ClockEventHandler</a> from clocktask.o(i.ClockEventHandler) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[8a]">ClockInitTask</a> from clocktask.o(i.ClockInitTask) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[31]">Clock_second_handle</a> from clockdriver.o(i.Clock_second_handle) referenced from clockdriver.o(i.Clock_init)
 <LI><a href="#[b8]">DailyGoalSettingCmdCB</a> from neul18cmdpackage.o(i.DailyGoalSettingCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[32]">DailyScheduleHandler</a> from alarmhandler.o(i.DailyScheduleHandler) referenced from alarmhandler.o(i.DailyScheduleHomePageHandler)
 <LI><a href="#[32]">DailyScheduleHandler</a> from alarmhandler.o(i.DailyScheduleHandler) referenced from alarmhandler.o(i.NotificationBoxHandler)
 <LI><a href="#[64]">DailyScheduleHomePageHandler</a> from alarmhandler.o(i.DailyScheduleHomePageHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[a9]">DateTimeSettingCmdCB</a> from neul18cmdpackage.o(i.DateTimeSettingCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[44]">DeleteAncsHandler</a> from alarmhandler.o(i.DeleteAncsHandler) referenced from alarmhandler.o(i.NotificationBoxHandler)
 <LI><a href="#[dd]">DeviceCommIDCmdCB</a> from neul18cmdpackage.o(i.DeviceCommIDCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[7d]">DisplayEventHandler</a> from displaytask.o(i.DisplayEventHandler) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[7e]">DisplayInitTask</a> from displaytask.o(i.DisplayInitTask) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[13]">ECB_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[33]">E_MailHandler</a> from alarmhandler.o(i.E_MailHandler) referenced from alarmhandler.o(i.E_MailHomePageHandler)
 <LI><a href="#[33]">E_MailHandler</a> from alarmhandler.o(i.E_MailHandler) referenced from alarmhandler.o(i.NotificationBoxHandler)
 <LI><a href="#[63]">E_MailHomePageHandler</a> from alarmhandler.o(i.E_MailHomePageHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[48]">ExitRecordWorkOutsHandler</a> from alarmhandler.o(i.ExitRecordWorkOutsHandler) referenced from alarmhandler.o(i.RecordWorkHandler)
 <LI><a href="#[53]">ExitSleep_Handler</a> from sleephandler.o(i.ExitSleep_Handler) referenced from sleephandler.o(i.SleepMonitor_Handler)
 <LI><a href="#[51]">ExitsleepmodeHandler</a> from alarmhandler.o(i.ExitsleepmodeHandler) referenced from sleephandler.o(i.SleepMonitor_Handler)
 <LI><a href="#[b2]">FactorySettingCmdCB</a> from neul18cmdpackage.o(i.FactorySettingCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[b]">GPIOTE_IRQHandler</a> from hwtask.o(i.GPIOTE_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[ee]">GetBC5AudioVolCB</a> from bc5cmdpackage.o(i.GetBC5AudioVolCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[e5]">GetBT4AddrTest</a> from neul18cmdpackage.o(i.GetBT4AddrTest) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[ad]">GetBatValueCmdCB</a> from neul18cmdpackage.o(i.GetBatValueCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[a6]">GetCmdRespond</a> from neul18cmdpackage.o(i.GetCmdRespond) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[e7]">GetDateTimeTest</a> from neul18cmdpackage.o(i.GetDateTimeTest) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[bf]">GetDisplaySportDataCmdCB</a> from neul18cmdpackage.o(i.GetDisplaySportDataCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[c3]">GetHeartRateDataCB</a> from neul18cmdpackage.o(i.GetHeartRateDataCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[c1]">GetHeartRateTotalCntCB</a> from neul18cmdpackage.o(i.GetHeartRateTotalCntCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[c8]">GetRecordWorkTotalCntCB</a> from neul18cmdpackage.o(i.GetRecordWorkTotalCntCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[be]">GetSleepAwakeDataCB</a> from neul18cmdpackage.o(i.GetSleepAwakeDataCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[b9]">GetSportModeCB</a> from neul18cmdpackage.o(i.GetSportModeCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[ba]">GetSportTotalCntCB</a> from neul18cmdpackage.o(i.GetSportTotalCntCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[a8]">GetVersionMsgCmdCB</a> from neul18cmdpackage.o(i.GetVersionMsgCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[a7]">GetWatchIdCmdCB</a> from neul18cmdpackage.o(i.GetWatchIdCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[e3]">Get_CSN</a> from neul18cmdpackage.o(i.Get_CSN) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[5d]">GoalOver_Handler</a> from sporthandler.o(i.GoalOver_Handler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[37]">HRMmenuHandler</a> from alarmhandler.o(i.HRMmenuHandler) referenced from standbyhandler.o(i.LoadMenuHandler)
 <LI><a href="#[2]">HardFault_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[c5]">HeartRateAlarmCB</a> from neul18cmdpackage.o(i.HeartRateAlarmCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[79]">HrEventHandler</a> from heartratetask.o(i.HrEventHandler) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[7a]">HrInitTask</a> from heartratetask.o(i.HrInitTask) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[5f]">HrRemindHandler</a> from alarmhandler.o(i.HrRemindHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[87]">HwEventHandler</a> from hwtask.o(i.HwEventHandler) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[88]">HwInitTask</a> from hwtask.o(i.HwInitTask) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[62]">IncomingCallHandler</a> from alarmhandler.o(i.IncomingCallHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[e6]">KeypadTest</a> from neul18cmdpackage.o(i.KeypadTest) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[ec]">LCDTest</a> from neul18cmdpackage.o(i.LCDTest) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[e1]">LEDTest</a> from neul18cmdpackage.o(i.LEDTest) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[18]">LPCOMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[b5]">MedalCB</a> from neul18cmdpackage.o(i.MedalCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[6a]">MedalHandler</a> from alarmhandler.o(i.MedalHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[ab]">MenuOrderCmdCB</a> from neul18cmdpackage.o(i.MenuOrderCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[40]">MissedCallAlertHandler</a> from alarmhandler.o(i.MissedCallAlertHandler) referenced from alarmhandler.o(i.MissedCallHomePageHandler)
 <LI><a href="#[40]">MissedCallAlertHandler</a> from alarmhandler.o(i.MissedCallAlertHandler) referenced from alarmhandler.o(i.NotificationBoxHandler)
 <LI><a href="#[61]">MissedCallHomePageHandler</a> from alarmhandler.o(i.MissedCallHomePageHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[af]">MotoOrderValueCB</a> from neul18cmdpackage.o(i.MotoOrderValueCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[b4]">MotoVibrationIntensityCB</a> from neul18cmdpackage.o(i.MotoVibrationIntensityCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[e9]">MotorTest</a> from neul18cmdpackage.o(i.MotorTest) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[23]">MusicHandler</a> from alarmhandler.o(i.MusicHandler) referenced from alarmhandler.o(i.AppsBoxHandler)
 <LI><a href="#[da]">MusicSettingsCmdCB</a> from neul18cmdpackage.o(i.MusicSettingsCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[e2]">NFCTest</a> from neul18cmdpackage.o(i.NFCTest) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[1]">NMI_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[43]">NoNewNotificationHandler</a> from alarmhandler.o(i.NoNewNotificationHandler) referenced from alarmhandler.o(i.NotificationBoxHandler)
 <LI><a href="#[28]">NoReminderHandler</a> from alarmhandler.o(i.NoReminderHandler) referenced from alarmhandler.o(i.AppsBoxHandler)
 <LI><a href="#[cd]">NoticeNumberCB</a> from neul18cmdpackage.o(i.NoticeNumberCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[45]">NotificationBoxHandler</a> from alarmhandler.o(i.NotificationBoxHandler) referenced from alarmhandler.o(i.NotificationMmenuHandler)
 <LI><a href="#[3a]">NotificationMmenuHandler</a> from alarmhandler.o(i.NotificationMmenuHandler) referenced from standbyhandler.o(i.LoadMenuHandler)
 <LI><a href="#[f9]">NotifyBc5BtInfoCB</a> from bc5cmdpackage.o(i.NotifyBc5BtInfoCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[fb]">NotifyBc5CallerInfoCB</a> from bc5cmdpackage.o(i.NotifyBc5CallerInfoCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[fa]">NotifyBc5PhoneInfoCB</a> from bc5cmdpackage.o(i.NotifyBc5PhoneInfoCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[fc]">NotifyBc5SiriInfoCB</a> from bc5cmdpackage.o(i.NotifyBc5SiriInfoCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[5a]">OtaHandler</a> from alarmhandler.o(i.OtaHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[6]">POWER_CLOCK_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[46]">PWM_ready_callback</a> from pwm.o(i.PWM_ready_callback) referenced from pwm.o(i.PWM_init)
 <LI><a href="#[d9]">PayPassthroughFromApp</a> from neul18cmdpackage.o(i.PayPassthroughFromApp) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[4]">PendSV_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[b6]">PersonInitCmdCB</a> from neul18cmdpackage.o(i.PersonInitCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[de]">PhoneBookCB</a> from neul18cmdpackage.o(i.PhoneBookCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[3c]">PhoneCallOut_Handler</a> from phonehandler.o(i.PhoneCallOut_Handler) referenced from phonehandler.o(i.LoadPhoneHandler)
 <LI><a href="#[3d]">PhoneCall_Handler</a> from phonehandler.o(i.PhoneCall_Handler) referenced from phonehandler.o(i.LoadPhoneHandler)
 <LI><a href="#[47]">PhoneDialInCall_Handler</a> from phonehandler.o(i.PhoneDialInCall_Handler) referenced from phonehandler.o(i.PhoneCall_Handler)
 <LI><a href="#[3e]">PhoneRing_Handler</a> from phonehandler.o(i.PhoneRing_Handler) referenced from phonehandler.o(i.LoadPhoneHandler)
 <LI><a href="#[e8]">PowOFFSystemTest</a> from neul18cmdpackage.o(i.PowOFFSystemTest) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[17]">QDEC_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[7]">RADIO_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[12]">RNG_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[10]">RTC0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[16]">RTC1_IRQHandler</a> from app_timer.o(i.RTC1_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[d6]">ReadPayAID</a> from neul18cmdpackage.o(i.ReadPayAID) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[d7]">ReadPayBalance</a> from neul18cmdpackage.o(i.ReadPayBalance) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[d8]">ReadPayRecords</a> from neul18cmdpackage.o(i.ReadPayRecords) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[49]">RecordWorkDetailHandler</a> from alarmhandler.o(i.RecordWorkDetailHandler) referenced from alarmhandler.o(i.RecordWorkHandler)
 <LI><a href="#[4a]">RecordWorkHandler</a> from alarmhandler.o(i.RecordWorkHandler) referenced from alarmhandler.o(i.RecordWorkoutsMmenuHandler)
 <LI><a href="#[38]">RecordWorkoutsMmenuHandler</a> from alarmhandler.o(i.RecordWorkoutsMmenuHandler) referenced from standbyhandler.o(i.LoadMenuHandler)
 <LI><a href="#[5b]">RemindHandler</a> from alarmhandler.o(i.RemindHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[27]">RemindViewHandler</a> from alarmhandler.o(i.RemindViewHandler) referenced from alarmhandler.o(i.AppsBoxHandler)
 <LI><a href="#[d3]">ReminderCmdCB</a> from neul18cmdpackage.o(i.ReminderCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[d2]">ReminderNumberCmdCB</a> from neul18cmdpackage.o(i.ReminderNumberCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[4d]">ResetHandler</a> from alarmhandler.o(i.ResetHandler) referenced from alarmhandler.o(i.SettingHandler)
 <LI><a href="#[0]">Reset_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[4e]">RestartHandler</a> from alarmhandler.o(i.RestartHandler) referenced from alarmhandler.o(i.SettingHandler)
 <LI><a href="#[41]">SMSHandler</a> from alarmhandler.o(i.SMSHandler) referenced from alarmhandler.o(i.NotificationBoxHandler)
 <LI><a href="#[41]">SMSHandler</a> from alarmhandler.o(i.SMSHandler) referenced from alarmhandler.o(i.SMSHomePageHandler)
 <LI><a href="#[60]">SMSHomePageHandler</a> from alarmhandler.o(i.SMSHomePageHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[9]">SPI0_TWI0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[a]">SPI1_TWI1_IRQHandler</a> from spi_slave.o(i.SPI1_TWI1_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[19]">SWI0_IRQHandler</a> from app_timer.o(i.SWI0_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1a]">SWI1_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1b]">SWI2_IRQHandler</a> from softdevice_handler.o(i.SWI2_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1c]">SWI3_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1d]">SWI4_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[1e]">SWI5_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[dc]">SearchForMobilePhonesCmdCB</a> from neul18cmdpackage.o(i.SearchForMobilePhonesCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[26]">SearchHandler</a> from alarmhandler.o(i.SearchHandler) referenced from alarmhandler.o(i.AppsBoxHandler)
 <LI><a href="#[4b]">SearchingHandler</a> from alarmhandler.o(i.SearchingHandler) referenced from alarmhandler.o(i.SearchHandler)
 <LI><a href="#[c6]">SedentarinessRemindCB</a> from neul18cmdpackage.o(i.SedentarinessRemindCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[6b]">SendTouchKeyMsg</a> from touchkeytask.o(i.SendTouchKeyMsg) referenced from touchkeytask.o(i.TouchKeyInitTask)
 <LI><a href="#[eb]">SensorTest</a> from neul18cmdpackage.o(i.SensorTest) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[f1]">SetBC5AudioVollCB</a> from bc5cmdpackage.o(i.SetBC5AudioVollCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[ef]">SetBC5BtStateCB</a> from bc5cmdpackage.o(i.SetBC5BtStateCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[f8]">SetBC5DtmfNumberCB</a> from bc5cmdpackage.o(i.SetBC5DtmfNumberCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[f7]">SetBC5MicCB</a> from bc5cmdpackage.o(i.SetBC5MicCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[f0]">SetBC5PhoneStateCB</a> from bc5cmdpackage.o(i.SetBC5PhoneStateCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[f2]">SetBC5RingModeCB</a> from bc5cmdpackage.o(i.SetBC5RingModeCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[f3]">SetBC5StandbyCB</a> from bc5cmdpackage.o(i.SetBC5StandbyCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[f5]">SetBC5StartSiriCB</a> from bc5cmdpackage.o(i.SetBC5StartSiriCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[f4]">SetBC5StopRingToneCB</a> from bc5cmdpackage.o(i.SetBC5StopRingToneCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[f6]">SetBC5TonesCB</a> from bc5cmdpackage.o(i.SetBC5TonesCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[b0]">SetLanguageFormat</a> from neul18cmdpackage.o(i.SetLanguageFormat) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[c0]">SetSleepModeCB</a> from neul18cmdpackage.o(i.SetSleepModeCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[b1]">SetUnitFormat</a> from neul18cmdpackage.o(i.SetUnitFormat) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[29]">SettingHandler</a> from alarmhandler.o(i.SettingHandler) referenced from alarmhandler.o(i.AppsBoxHandler)
 <LI><a href="#[57]">SetupAlertHandler</a> from alarmhandler.o(i.SetupAlertHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[5e]">SitRemindHandler</a> from alarmhandler.o(i.SitRemindHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[83]">SleepEventHandler</a> from sleeptask.o(i.SleepEventHandler) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[84]">SleepInitTask</a> from sleeptask.o(i.SleepInitTask) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[39]">SleepMmenuHandler</a> from alarmhandler.o(i.SleepMmenuHandler) referenced from standbyhandler.o(i.LoadMenuHandler)
 <LI><a href="#[50]">SleepMonitor_Handler</a> from sleephandler.o(i.SleepMonitor_Handler) referenced from alarmhandler.o(i.SleepMmenuHandler)
 <LI><a href="#[50]">SleepMonitor_Handler</a> from sleephandler.o(i.SleepMonitor_Handler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[52]">SleepOverview_Handler</a> from sleephandler.o(i.SleepOverview_Handler) referenced from sleephandler.o(i.SleepMonitor_Handler)
 <LI><a href="#[54]">SocialClassHandler</a> from alarmhandler.o(i.SocialClassHandler) referenced from alarmhandler.o(i.SocialClassHomeHandler)
 <LI><a href="#[42]">SocialClassHomeHandler</a> from alarmhandler.o(i.SocialClassHomeHandler) referenced from alarmhandler.o(i.NotificationBoxHandler)
 <LI><a href="#[65]">SocialHomePageHandler</a> from alarmhandler.o(i.SocialHomePageHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[55]">SocialMessageHandler</a> from alarmhandler.o(i.SocialMessageHandler) referenced from alarmhandler.o(i.SocialHomePageHandler)
 <LI><a href="#[df]">SpiFlashEraseSaveFlag</a> from neul18cmdpackage.o(i.SpiFlashEraseSaveFlag) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[e0]">SpiFlashUpdateFontLib</a> from neul18cmdpackage.o(i.SpiFlashUpdateFontLib) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[36]">SportMmenuHandler</a> from alarmhandler.o(i.SportMmenuHandler) referenced from standbyhandler.o(i.LoadMenuHandler)
 <LI><a href="#[56]">SportOverviewHandler</a> from sporthandler.o(i.SportOverviewHandler) referenced from alarmhandler.o(i.SportMmenuHandler)
 <LI><a href="#[fd]">SppTransmissionCB</a> from bc5cmdpackage.o(i.SppTransmissionCB) referenced from bc5cmdpackage.o(.constdata)
 <LI><a href="#[22]">Standby_Handler</a> from standbyhandler.o(i.Standby_Handler) referenced from apphandler.o(i.AppInitTask)
 <LI><a href="#[85]">StepEventHandler</a> from steptask.o(i.StepEventHandler) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[86]">StepInitTask</a> from steptask.o(i.StepInitTask) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[5c]">Syncing_Handler</a> from sporthandler.o(i.Syncing_Handler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[5]">SysTick_Handler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from system_nrf51.o(i.SystemInit) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[11]">TEMP_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[d]">TIMER0_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[e]">TIMER1_IRQHandler</a> from nrf_drv_timer.o(i.TIMER1_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[f]">TIMER2_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[e4]">TestFactoryMode</a> from neul18cmdpackage.o(i.TestFactoryMode) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[aa]">TimeOrderCmdCB</a> from neul18cmdpackage.o(i.TimeOrderCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[35]">Time_Handler</a> from standbyhandler.o(i.Time_Handler) referenced from standbyhandler.o(i.LoadMenuHandler)
 <LI><a href="#[25]">TimerHandler</a> from alarmhandler.o(i.TimerHandler) referenced from alarmhandler.o(i.AppsBoxHandler)
 <LI><a href="#[81]">TouchKeyEventHandler</a> from touchkeytask.o(i.TouchKeyEventHandler) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[82]">TouchKeyInitTask</a> from touchkeytask.o(i.TouchKeyInitTask) referenced from osal.o(i.pS_OsTaskRegList)
 <LI><a href="#[ea]">TpTest</a> from neul18cmdpackage.o(i.TpTest) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[59]">TpTestHandler</a> from alarmhandler.o(i.TpTestHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[8]">UART0_IRQHandler</a> from app_uart_fifo.o(i.UART0_IRQHandler) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[d1]">UpdateDeviceSwitchSettingCB</a> from neul18cmdpackage.o(i.UpdateDeviceSwitchSettingCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[58]">UpdateFontLibHandler</a> from alarmhandler.o(i.UpdateFontLibHandler) referenced from standbyhandler.o(i.Standby_Handler)
 <LI><a href="#[b3]">UpdateProgMsgCmdCB</a> from neul18cmdpackage.o(i.UpdateProgMsgCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[c9]">UploadRecordWorkCmdCB</a> from neul18cmdpackage.o(i.UploadRecordWorkCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[bc]">UploadSportCmdCB</a> from neul18cmdpackage.o(i.UploadSportCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[b7]">UserHabitCmdCB</a> from neul18cmdpackage.o(i.UserHabitCmdCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[2b]">VirateHandler</a> from alarmhandler.o(i.VirateHandler) referenced from alarmhandler.o(i.AppsBoxHandler)
 <LI><a href="#[ae]">VolumeValueCB</a> from neul18cmdpackage.o(i.VolumeValueCB) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[3f]">Volume_Handler</a> from volumehandler.o(i.Volume_Handler) referenced from volumehandler.o(i.LoadVolumeHandler)
 <LI><a href="#[15]">WDT_IRQHandler</a> from arm_startup_nrf51.o(.text) referenced from arm_startup_nrf51.o(RESET)
 <LI><a href="#[ed]">WatchIDTest</a> from neul18cmdpackage.o(i.WatchIDTest) referenced from neul18cmdpackage.o(.constdata)
 <LI><a href="#[4f]">WristWakeUpHandler</a> from alarmhandler.o(i.WristWakeUpHandler) referenced from alarmhandler.o(i.SettingHandler)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from arm_startup_nrf51.o(.text)
 <LI><a href="#[6c]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[8c]">apple_notification_error_handler</a> from main.o(i.apple_notification_error_handler) referenced from main.o(i.service_init)
 <LI><a href="#[71]">ble_evt_dispatch</a> from main.o(i.ble_evt_dispatch) referenced from main.o(i.ble_stack_init)
 <LI><a href="#[78]">conn_params_error_handler</a> from main.o(i.conn_params_error_handler) referenced from main.o(i.main)
 <LI><a href="#[a3]">data_page_erase_state_run</a> from pstorage.o(i.data_page_erase_state_run) referenced from pstorage.o(.constdata)
 <LI><a href="#[a2]">data_to_swap_write_state_run</a> from pstorage.o(i.data_to_swap_write_state_run) referenced from pstorage.o(.constdata)
 <LI><a href="#[6f]">db_discover_evt_handler</a> from ble_ancs_c.o(i.db_discover_evt_handler) referenced from ble_ancs_c.o(i.ble_ancs_c_init)
 <LI><a href="#[30]">delay_msec_bma2xx</a> from bma2xx.o(i.delay_msec_bma2xx) referenced from bma2xx.o(i.Bma250E_Init)
 <LI><a href="#[76]">device_manager_evt_handler</a> from main.o(i.device_manager_evt_handler) referenced from main.o(i.device_manager_init)
 <LI><a href="#[77]">dm_pstorage_cb_handler</a> from device_manager_peripheral.o(i.dm_pstorage_cb_handler) referenced from device_manager_peripheral.o(i.dm_init)
 <LI><a href="#[9a]">gattc_context_apply</a> from device_manager_peripheral.o(i.gattc_context_apply) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[96]">gattc_context_load</a> from device_manager_peripheral.o(i.gattc_context_load) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[92]">gattc_context_store</a> from device_manager_peripheral.o(i.gattc_context_store) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[99]">gatts_context_apply</a> from device_manager_peripheral.o(i.gatts_context_apply) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[95]">gatts_context_load</a> from device_manager_peripheral.o(i.gatts_context_load) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[91]">gatts_context_store</a> from device_manager_peripheral.o(i.gatts_context_store) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[9b]">gattsc_context_apply</a> from device_manager_peripheral.o(i.gattsc_context_apply) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[97]">gattsc_context_load</a> from device_manager_peripheral.o(i.gattsc_context_load) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[93]">gattsc_context_store</a> from device_manager_peripheral.o(i.gattsc_context_store) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[a5]">head_restore_state_run</a> from pstorage.o(i.head_restore_state_run) referenced from pstorage.o(.constdata)
 <LI><a href="#[34]">heartRate_Handler</a> from heartratehandler.o(i.heartRate_Handler) referenced from alarmhandler.o(i.HRMmenuHandler)
 <LI><a href="#[1f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[98]">no_service_context_apply</a> from device_manager_peripheral.o(i.no_service_context_apply) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[94]">no_service_context_load</a> from device_manager_peripheral.o(i.no_service_context_load) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[90]">no_service_context_store</a> from device_manager_peripheral.o(i.no_service_context_store) referenced from device_manager_peripheral.o(.constdata)
 <LI><a href="#[8d]">nus_data_handler</a> from simplegattprofile.o(i.nus_data_handler) referenced from main.o(i.service_init)
 <LI><a href="#[6d]">on_adv_evt</a> from main.o(i.on_adv_evt) referenced from main.o(i.advertising_init)
 <LI><a href="#[8b]">on_ancs_c_evt</a> from main.o(i.on_ancs_c_evt) referenced from main.o(i.service_init)
 <LI><a href="#[75]">pstorage_store</a> from pstorage.o(i.pstorage_store) referenced from device_manager_peripheral.o(i.device_context_store)
 <LI><a href="#[75]">pstorage_store</a> from pstorage.o(i.pstorage_store) referenced from device_manager_peripheral.o(i.gatts_context_store)
 <LI><a href="#[74]">pstorage_update</a> from pstorage.o(i.pstorage_update) referenced from device_manager_peripheral.o(i.device_context_store)
 <LI><a href="#[74]">pstorage_update</a> from pstorage.o(i.pstorage_update) referenced from device_manager_peripheral.o(i.gatts_context_store)
 <LI><a href="#[6e]">pwm_ready_tick</a> from app_pwm.o(i.pwm_ready_tick) referenced from app_pwm.o(i.app_pwm_init)
 <LI><a href="#[2f]">read_burst_bma2xx</a> from bma2xx.o(i.read_burst_bma2xx) referenced from bma2xx.o(i.Bma250E_Init)
 <LI><a href="#[2e]">read_bus_bma2xx</a> from bma2xx.o(i.read_bus_bma2xx) referenced from bma2xx.o(i.Bma250E_Init)
 <LI><a href="#[8e]">softdevice_assertion_handler</a> from softdevice_handler.o(i.softdevice_assertion_handler) referenced from softdevice_handler.o(i.softdevice_handler_init)
 <LI><a href="#[8f]">spi_slave_event_handle</a> from protocol.o(i.spi_slave_event_handle) referenced from protocol.o(i.spi_init)
 <LI><a href="#[9e]">state_erase_data_page_entry_run</a> from pstorage.o(i.state_erase_data_page_entry_run) referenced from pstorage.o(.constdata)
 <LI><a href="#[a0]">state_restore_head_entry_run</a> from pstorage.o(i.state_restore_head_entry_run) referenced from pstorage.o(.constdata)
 <LI><a href="#[9f]">state_restore_tail_entry_run</a> from pstorage.o(i.state_restore_tail_entry_run) referenced from pstorage.o(.constdata)
 <LI><a href="#[9c]">state_swap_erase_entry_run</a> from pstorage.o(i.state_swap_erase_entry_run) referenced from pstorage.o(.constdata)
 <LI><a href="#[9d]">state_write_data_swap_entry_run</a> from pstorage.o(i.state_write_data_swap_entry_run) referenced from pstorage.o(.constdata)
 <LI><a href="#[73]">storage_operation_dummy_handler</a> from device_manager_peripheral.o(i.storage_operation_dummy_handler) referenced from device_manager_peripheral.o(i.device_context_store)
 <LI><a href="#[a1]">swap_erase_state_run</a> from pstorage.o(i.swap_erase_state_run) referenced from pstorage.o(.constdata)
 <LI><a href="#[72]">sys_evt_dispatch</a> from main.o(i.sys_evt_dispatch) referenced from main.o(i.ble_stack_init)
 <LI><a href="#[a4]">tail_restore_state_run</a> from pstorage.o(i.tail_restore_state_run) referenced from pstorage.o(.constdata)
 <LI><a href="#[70]">update_timeout_handler</a> from ble_conn_params.o(i.update_timeout_handler) referenced from ble_conn_params.o(i.ble_conn_params_init)
 <LI><a href="#[2d]">write_bus_bma2xx</a> from bma2xx.o(i.write_bus_bma2xx) referenced from bma2xx.o(i.Bma250E_Init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[51c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[fe]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[14a]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[51d]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[51e]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[51f]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[520]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[521]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[100]"></a>__asm___11_nrf_delay_c_532987f3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, nrf_delay.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>

<P><STRONG><a name="[101]"></a>__asm___11_app_timer_c_cd27f9c3__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, app_timer.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[102]"></a>__asm___8_HwTask_c_e0b1165f__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, hwtask.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___8_HwTask_c_e0b1165f__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQ_TOUCH_Recovery
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChargerConnectEvent
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcRead
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___8_HwTask_c_e0b1165f__nrf_delay_us
</UL>

<P><STRONG><a name="[103]"></a>__asm___10_protocol_c_KL17_VER__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, protocol.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___10_protocol_c_KL17_VER__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___10_protocol_c_KL17_VER__nrf_delay_us
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForTimeout
</UL>

<P><STRONG><a name="[104]"></a>__asm___16_KL17CmdPackage_c_80624e7e__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, kl17cmdpackage.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___16_KL17CmdPackage_c_80624e7e__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___16_KL17CmdPackage_c_80624e7e__nrf_delay_us
</UL>

<P><STRONG><a name="[105]"></a>__asm___13_ExtSpiFlash_c_u_Delay__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, extspiflash.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_ExtSpiFlash_c_u_Delay__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatusRegister
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_ExtSpiFlash_c_u_Delay__nrf_delay_us
</UL>

<P><STRONG><a name="[106]"></a>__asm___12_AS7000_I2c_c_ee77214a__nrf_delay_us</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, as7000_i2c.o(.emb_text))
<BR><BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_AS7000_I2c_c_ee77214a__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_Comms_init
<LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_AS7000_I2c_c_ee77214a__nrf_delay_us
</UL>

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>CCM_AAR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>ECB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>LPCOMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>POWER_CLOCK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>QDEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RADIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SPI0_TWI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SWI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SWI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SWI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SWI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TEMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>TIMER0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>TIMER2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, arm_startup_nrf51.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[107]"></a>NvFlashRead</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ancssmsprofile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = NvFlashRead &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSenderInfo
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSenderID
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSMSuid
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsUid
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSenderInfo
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSenderInfo
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAncsUid
</UL>

<P><STRONG><a name="[109]"></a>NvFlashWrite</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ancssmsprofile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = NvFlashWrite &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSenderInfo
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSenderID
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSMSuid
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSenderInfo
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAncsUid
</UL>

<P><STRONG><a name="[10c]"></a>InitAncsSmsParameter</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, ancssmsprofile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = InitAncsSmsParameter &rArr; ReadWatchId &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyWatchId
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWatchId
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[110]"></a>WriteAncsUid</STRONG> (Thumb, 178 bytes, Stack size 264 bytes, ancssmsprofile.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashWrite
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashRead
</UL>

<P><STRONG><a name="[112]"></a>ReadAncsUid</STRONG> (Thumb, 260 bytes, Stack size 280 bytes, ancssmsprofile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = ReadAncsUid &rArr; NvFlashRead &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetBoard
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashRead
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsRemoveFunction
</UL>

<P><STRONG><a name="[115]"></a>WriteSenderInfo</STRONG> (Thumb, 350 bytes, Stack size 272 bytes, ancssmsprofile.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashWrite
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashRead
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>

<P><STRONG><a name="[116]"></a>GetSenderInfo</STRONG> (Thumb, 116 bytes, Stack size 272 bytes, ancssmsprofile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = GetSenderInfo &rArr; NvFlashRead &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashRead
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveSMS
</UL>

<P><STRONG><a name="[117]"></a>ResetSMSuid</STRONG> (Thumb, 170 bytes, Stack size 272 bytes, ancssmsprofile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = ResetSMSuid &rArr; NvFlashWrite &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashWrite
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashRead
</UL>
<BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveSMS
</UL>

<P><STRONG><a name="[118]"></a>ResetSenderID</STRONG> (Thumb, 336 bytes, Stack size 272 bytes, ancssmsprofile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = ResetSenderID &rArr; NvFlashWrite &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashWrite
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashRead
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSendInfo
</UL>

<P><STRONG><a name="[119]"></a>ResetSenderInfo</STRONG> (Thumb, 170 bytes, Stack size 272 bytes, ancssmsprofile.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = ResetSenderInfo &rArr; NvFlashWrite &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashWrite
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashRead
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSendInfo
</UL>

<P><STRONG><a name="[372]"></a>ResetSMSOffset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ancssmsprofile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
</UL>

<P><STRONG><a name="[36e]"></a>QuerySMSOffset</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ancssmsprofile.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveSMS
</UL>

<P><STRONG><a name="[223]"></a>vSetAutoSleepTime</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoSleepTime
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAutoSleepFlag
</UL>

<P><STRONG><a name="[3e1]"></a>GetSteps</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
</UL>

<P><STRONG><a name="[3e5]"></a>SetSteps</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepInit
</UL>

<P><STRONG><a name="[12a]"></a>vClearAllStat</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, common.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounterInit
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSportData
</UL>

<P><STRONG><a name="[3e2]"></a>AutoSleepMode</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sleep_monitor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
</UL>

<P><STRONG><a name="[522]"></a>IsSleepValid</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sleep_monitor.o(.text), UNUSED)

<P><STRONG><a name="[523]"></a>SetSensitivity</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sleep_monitor.o(.text), UNUSED)

<P><STRONG><a name="[524]"></a>GetSensitivity</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sleep_monitor.o(.text), UNUSED)

<P><STRONG><a name="[3bf]"></a>GetSleepState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sleep_monitor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
</UL>

<P><STRONG><a name="[525]"></a>GetSleepStatistic</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, sleep_monitor.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>GetPekingTime</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sleep_monitor.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
</UL>

<P><STRONG><a name="[120]"></a>SetButtonPress</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sleep_monitor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor
</UL>

<P><STRONG><a name="[11d]"></a>CalcEnergy</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, sleep_monitor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor
</UL>

<P><STRONG><a name="[11c]"></a>SleepMonitor</STRONG> (Thumb, 2344 bytes, Stack size 40 bytes, sleep_monitor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SleepMonitor &rArr; gOS_GetUTCTime &rArr; osal_ConvertUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonPress
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcEnergy
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuitSleepMode
</UL>

<P><STRONG><a name="[121]"></a>QuitSleepMode</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, sleep_monitor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = QuitSleepMode &rArr; SleepMonitor &rArr; gOS_GetUTCTime &rArr; osal_ConvertUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor
</UL>
<BR>[Called By]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenDateTimeSetting
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenBond
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
</UL>

<P><STRONG><a name="[3c0]"></a>GetSleepTimeNodeSingle</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, sleep_monitor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetSleepTimeNodeSingle
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
</UL>

<P><STRONG><a name="[237]"></a>SleepMonitorInit</STRONG> (Thumb, 318 bytes, Stack size 0 bytes, sleep_monitor.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSleepDataWhenDateTimeSetting
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSleepData
</UL>

<P><STRONG><a name="[526]"></a>IsCharging</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, step_counter.o(.text), UNUSED)

<P><STRONG><a name="[122]"></a>Sleep_Moniter_Judge</STRONG> (Thumb, 516 bytes, Stack size 8 bytes, step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = Sleep_Moniter_Judge &rArr; GetTimeStamp &rArr; gOS_GetUTCTime &rArr; osal_ConvertUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter_25hz
</UL>

<P><STRONG><a name="[130]"></a>AddStep</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, step_counter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter_25hz
</UL>

<P><STRONG><a name="[125]"></a>ResetParamater</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ResetParamater
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter_25hz
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountStepY
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountStepX
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountStepRun
</UL>

<P><STRONG><a name="[12e]"></a>IsQuite</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, step_counter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter_25hz
</UL>

<P><STRONG><a name="[126]"></a>CalAverGap</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, step_counter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountStepY
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountStepX
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountStepRun
</UL>

<P><STRONG><a name="[12f]"></a>SmoothAccData</STRONG> (Thumb, 550 bytes, Stack size 8 bytes, step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SmoothAccData
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter_25hz
</UL>

<P><STRONG><a name="[124]"></a>CountStepRun</STRONG> (Thumb, 716 bytes, Stack size 16 bytes, step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CountStepRun &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalAverGap
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetParamater
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter_25hz
</UL>

<P><STRONG><a name="[127]"></a>CountStepX</STRONG> (Thumb, 650 bytes, Stack size 16 bytes, step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CountStepX &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalAverGap
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetParamater
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter_25hz
</UL>

<P><STRONG><a name="[128]"></a>CountStepY</STRONG> (Thumb, 796 bytes, Stack size 16 bytes, step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = CountStepY &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalAverGap
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetParamater
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter_25hz
</UL>

<P><STRONG><a name="[12c]"></a>StatData</STRONG> (Thumb, 762 bytes, Stack size 0 bytes, step_counter.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter_25hz
</UL>

<P><STRONG><a name="[129]"></a>vStepCounterInit</STRONG> (Thumb, 410 bytes, Stack size 8 bytes, step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vStepCounterInit
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClearAllStat
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepInit
</UL>

<P><STRONG><a name="[12b]"></a>vStepCounter_25hz</STRONG> (Thumb, 1848 bytes, Stack size 16 bytes, step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = vStepCounter_25hz &rArr; Sleep_Moniter_Judge &rArr; GetTimeStamp &rArr; gOS_GetUTCTime &rArr; osal_ConvertUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StatData
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountStepY
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountStepX
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountStepRun
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmoothAccData
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsQuite
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetParamater
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddStep
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Moniter_Judge
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeOriginSize
</UL>
<BR>[Called By]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter
</UL>

<P><STRONG><a name="[131]"></a>vStepCounter</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = vStepCounter &rArr; vStepCounter_25hz &rArr; Sleep_Moniter_Judge &rArr; GetTimeStamp &rArr; gOS_GetUTCTime &rArr; osal_ConvertUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter_25hz
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounterWithGesture
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounter
</UL>

<P><STRONG><a name="[133]"></a>vSmoothData_ALG</STRONG> (Thumb, 284 bytes, Stack size 0 bytes, gesture_recog.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGesture_Recog_ALG
</UL>

<P><STRONG><a name="[134]"></a>vJudgeActivity_ALG</STRONG> (Thumb, 90 bytes, Stack size 12 bytes, gesture_recog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = vJudgeActivity_ALG
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGesture_Recog_ALG
</UL>

<P><STRONG><a name="[3dd]"></a>ucGetGestureType_ALG</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gesture_recog.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounterWithGesture
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounter
</UL>

<P><STRONG><a name="[3e6]"></a>vGesture_Recog_Init_ALG</STRONG> (Thumb, 426 bytes, Stack size 0 bytes, gesture_recog.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepInit
</UL>

<P><STRONG><a name="[135]"></a>Pos_ucLefPsbRaiseFlag_Recog</STRONG> (Thumb, 450 bytes, Stack size 8 bytes, gesture_recog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Pos_ucLefPsbRaiseFlag_Recog
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGesture_Recog_ALG
</UL>

<P><STRONG><a name="[136]"></a>Cons_ucRigPsbRaiseFlag_Recog</STRONG> (Thumb, 316 bytes, Stack size 8 bytes, gesture_recog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Cons_ucRigPsbRaiseFlag_Recog
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGesture_Recog_ALG
</UL>

<P><STRONG><a name="[137]"></a>Pos_Cons_PsbTurnFlag_Recog</STRONG> (Thumb, 258 bytes, Stack size 0 bytes, gesture_recog.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGesture_Recog_ALG
</UL>

<P><STRONG><a name="[132]"></a>vGesture_Recog_ALG</STRONG> (Thumb, 3790 bytes, Stack size 8 bytes, gesture_recog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = vGesture_Recog_ALG &rArr; vJudgeActivity_ALG
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pos_Cons_PsbTurnFlag_Recog
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cons_ucRigPsbRaiseFlag_Recog
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pos_ucLefPsbRaiseFlag_Recog
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vJudgeActivity_ALG
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSmoothData_ALG
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounterWithGesture
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounter
</UL>

<P><STRONG><a name="[527]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[11e]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_set
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_swap_erase_entry_run
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_restore_tail_entry_run
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_data_erase_swap_entry_run
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_page_erase_required
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_restore_state_run
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_operation_execute
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
<LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsClockUpdate
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_ConvertUTCTime
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_ConvertUTCSecs
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSleepGoalOverRemind
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepDataToFlash
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRecordWork
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSportGoalOverRemind
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportKcal
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatCheck
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshTimeUIFun
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_GetHeartRateData
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSitRemindEvent
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcAccumulateTime
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGoalOverRemind
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepMonitor
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMusicControl
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMusic
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindDisplay
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopRecordWork
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkDetailHandler
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PersonInitCmdCB
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecondsTimer
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculatePercent
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalclateWeeks
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[528]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[11f]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hearRate_state_check
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_GetHeartRateData
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsLeap
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetYearWeekDays
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthWeekDays
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_package
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_receive_package
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalclateWeeks
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountStepY
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountStepX
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CountStepRun
</UL>

<P><STRONG><a name="[529]"></a>___aeabi_memcpy8$move</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[197]"></a>__aeabi_memcpy</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_allocate
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_characteristic_discovery_rsp
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_complete_evt_trigger
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_register
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsInit
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEvtInit
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_evt_handler
<LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_cmd
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_receive_data
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_ccid_command
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_write
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepDetailForDisplay
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSleepDetailForDisplay
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_touchinfo
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCallerIDToBuf
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsUploadAll
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrRemindHandler
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrGetLastValueTime
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf_ForAndroid_SmsAndCall
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf_ForAndroid
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Format_Gmail
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface_SetBL_Step
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDisplay
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemAlloc_CallerInfo
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallNoticePhoneHandlerOutHandler
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckAndReplaceUnknownNumber
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSettingApps
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSetUp
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMusic
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindsEvent
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindDisplay
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Display_Ancs_LayOut
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneBookToBuf
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface_NoDisplay
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_package
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_receive_package
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_UartSendData
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsEdit
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsDel
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsAdd
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWatchIdCB
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeOrderCmdCB
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReminderSendData
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayPassthroughFromApp
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicSettingsCmdCB
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOrderCmdCB
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVersionMsgCmdCB
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceCommIDCmdCB
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateTimeSettingCmdCB
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_construct_data_packet
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_ping
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindsNote
</UL>

<P><STRONG><a name="[339]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsUploadAll
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
</UL>

<P><STRONG><a name="[4b9]"></a>__aeabi_memmove</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrm_encode
</UL>

<P><STRONG><a name="[52a]"></a>__aeabi_memmove4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[52b]"></a>__aeabi_memmove8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, memmovea.o(.text), UNUSED)

<P><STRONG><a name="[139]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsMsg_ToKl17_SOCIAL
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsMsg_ToKl17
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialMessageHandler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallAlertHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHandler
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[52c]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[52d]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[138]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_init
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_init
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSleepDetailForDisplay
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllReminders
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_touchinfo
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BindEndDealWith
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAncsBuf_SmsAndCall
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAncsBuf
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemAlloc_CallerInfo
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallNoticePhoneHandlerOutHandler
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckAndReplaceUnknownNumber
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMusic
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicHandler
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneBookToBuf
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhoneBookBuf
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsDel
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsAdd
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOrderCmdCB
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceCommIDCmdCB
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CParse
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_construct_data_packet
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_construct_command_packet_w2Args
</UL>

<P><STRONG><a name="[15a]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_peer_address_clear
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_ble_hrs_service_init
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_OTA_INFO
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserInfoInit
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsInit
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Ota_Addr
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncsFlash
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XmodemRevPktToSpiFlash
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUartBuffer
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_measurement_char_add
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;body_sensor_location_char_add
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_media_char_add
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_media_char_add
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_channel_char_add
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_channel_char_add
<LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_char_add
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_char_add
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmptyRtcClockSaveIndex
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepDetailForDisplay
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSleepDetailForDisplay
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreStepData
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSportDataCmd
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecordWorkDataCmd
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStepData
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecordWorkData
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounter
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_SwapData_ExtALG
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCallerIDToBuf
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsUploadAll
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface_SetBL_Step
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDisplay
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSportOverview
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepOverviewTwo
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepOverviewThree
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepOverviewOne
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecordWorkData
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowUserRemind
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSettingApps
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRemindList
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRecordResult
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMusic
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindViewHandler
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySingleUnicode
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRemindData
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ota_Prepare
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmptyDisplySportDataIndex
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface_NoDisplay
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_UartSendData
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsEdit
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsDel
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsAdd
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWatchIdCB
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgMsgCmdCB
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReminderSendData
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWatchIdCmdCB
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVersionMsgCmdCB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplaySportDataCmdCB
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindsNote
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>

<P><STRONG><a name="[52e]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[13a]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[1fc]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneDialNumber_Incall
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDisplay
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemAlloc_CallerInfo
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsUnknownNumberCallerID
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallNoticePhoneHandlerOutHandler
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckAndReplaceUnknownNumber
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowUserRemind
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReminderSendData
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOrderCmdCB
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceCommIDCmdCB
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexStrToAS7000
</UL>

<P><STRONG><a name="[216]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateTP
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateKl17
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateAS7000
</UL>

<P><STRONG><a name="[404]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_find
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XmodemRevPktToSpiFlash
</UL>

<P><STRONG><a name="[10d]"></a>strncmp</STRONG> (Thumb, 30 bytes, Stack size 12 bytes, strncmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyWatchId
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAncsSmsParameter
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsUid
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSocialType
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicSettingsCmdCB
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSenderInfo
</UL>

<P><STRONG><a name="[299]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_decode
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Ota_Addr
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_ccid_command
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_write
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_decode
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplaySportDataCmdCB
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_general_response
</UL>

<P><STRONG><a name="[52f]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[530]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[40b]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_ccid_command
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_write
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccid_send_status
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccid_send_error
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_construct_command_packet_w2Args
</UL>

<P><STRONG><a name="[531]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[532]"></a>_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[13b]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>

<P><STRONG><a name="[140]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[141]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[142]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[143]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSportGoalOverRemind
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGoalOverRemind
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[144]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSportGoalOverRemind
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGoalOverRemind
</UL>

<P><STRONG><a name="[145]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGoalOverRemind
</UL>

<P><STRONG><a name="[212]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSportGoalOverRemind
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[147]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[13c]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[533]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[146]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[534]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[13d]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[535]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[536]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[13f]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[13e]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[149]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[ff]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[537]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[538]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[539]"></a>__decompress1</STRONG> (Thumb, 86 bytes, Stack size unknown bytes, __dczerorl2.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>AS7000DeviceSettings</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, as7000.o(i.AS7000DeviceSettings))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = AS7000DeviceSettings &rArr; AS7000_PowerOFF &rArr; DELAY_MS
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_upgrade
</UL>

<P><STRONG><a name="[14d]"></a>AS7000_GetHeartRateData</STRONG> (Thumb, 920 bytes, Stack size 56 bytes, as7000.o(i.AS7000_GetHeartRateData))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = AS7000_GetHeartRateData &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHrTaskId
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportLevelJudge
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData_AS7000
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrGetValueHW
</UL>

<P><STRONG><a name="[14c]"></a>AS7000_PowerOFF</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, as7000.o(i.AS7000_PowerOFF))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AS7000_PowerOFF &rArr; DELAY_MS
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_MS
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_Comms_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HR_AS7000_Version
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateAS7000
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrCloseHW
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000DeviceSettings
</UL>

<P><STRONG><a name="[154]"></a>AS7000_PowerON</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, as7000.o(i.AS7000_PowerON))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = AS7000_PowerON &rArr; AS7000_Setmode &rArr; WriteData_AS7000 &rArr; HRM_I2cMultipleByteWrite &rArr; HRM_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_MS
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_Setmode
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HR_AS7000_Version
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrOpenHW
</UL>

<P><STRONG><a name="[156]"></a>AS7000_PowerON_ExtALG</STRONG> (Thumb, 234 bytes, Stack size 48 bytes, as7000.o(i.AS7000_PowerON_ExtALG))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = AS7000_PowerON_ExtALG &rArr; ReadData_AS7000 &rArr; HRM_I2cMultipleByteRead &rArr; HRM_I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_MS
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData_AS7000
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData_AS7000
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrOpenHW
</UL>

<P><STRONG><a name="[158]"></a>AS7000_PowerON_Loader</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, as7000_update.o(i.AS7000_PowerON_Loader))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = AS7000_PowerON_Loader &rArr; DELAY_MS
</UL>
<BR>[Calls]<UL><LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_MS
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_upgrade
</UL>

<P><STRONG><a name="[155]"></a>AS7000_Setmode</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, as7000.o(i.AS7000_Setmode))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = AS7000_Setmode &rArr; WriteData_AS7000 &rArr; HRM_I2cMultipleByteWrite &rArr; HRM_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData_AS7000
</UL>
<BR>[Called By]<UL><LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerON
</UL>

<P><STRONG><a name="[159]"></a>AS7000_SwapData_ExtALG</STRONG> (Thumb, 206 bytes, Stack size 232 bytes, as7000.o(i.AS7000_SwapData_ExtALG))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = AS7000_SwapData_ExtALG &rArr; ReadData_AS7000 &rArr; HRM_I2cMultipleByteRead &rArr; HRM_I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData_AS7000
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData_AS7000
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[15b]"></a>AS7000_upgrade</STRONG> (Thumb, 398 bytes, Stack size 152 bytes, as7000_update.o(i.AS7000_upgrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = AS7000_upgrade &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexStrToAS7000
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerON_Loader
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData_AS7000
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData_AS7000
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000DeviceSettings
</UL>
<BR>[Called By]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateAS7000
</UL>

<P><STRONG><a name="[15e]"></a>AdcRead</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, hwtask.o(i.AdcRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AdcRead
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___8_HwTask_c_e0b1165f__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatVelue
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopKeyScan
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalKeyRead
</UL>

<P><STRONG><a name="[37c]"></a>Add_Count_SOCIAL</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, datastoreinside.o(i.Add_Count_SOCIAL))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsMsg
</UL>

<P><STRONG><a name="[15f]"></a>AncsConnectedGetAllInfo</STRONG> (Thumb, 270 bytes, Stack size 16 bytes, bletask.o(i.AncsConnectedGetAllInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = AncsConnectedGetAllInfo &rArr; AncsSmsGetInfo &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsSmsGetInfo
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsScheduleGetInfo
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsMisscalledGetInfo
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsIncomingcalledGetInfo
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsEmailGetInfo
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsPollGetInfo
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSocialNotifEventFlag
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulePollGetInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MisscallPollGetInfo
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingcallPollGetInfo
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmailPollGetInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
</UL>

<P><STRONG><a name="[16d]"></a>AncsDelaySend</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, phonehandler.o(i.AncsDelaySend))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = AncsDelaySend &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
</UL>

<P><STRONG><a name="[16e]"></a>AncsDelaySet</STRONG> (Thumb, 46 bytes, Stack size 4 bytes, phonehandler.o(i.AncsDelaySet))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = AncsDelaySet &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
</UL>

<P><STRONG><a name="[166]"></a>AncsEmailGetInfo</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, bletask.o(i.AncsEmailGetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = AncsEmailGetInfo &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGetNotifAttributesTitleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
</UL>

<P><STRONG><a name="[163]"></a>AncsIncomingcalledGetInfo</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, bletask.o(i.AncsIncomingcalledGetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = AncsIncomingcalledGetInfo &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGetNotifAttributesTitleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
</UL>

<P><STRONG><a name="[164]"></a>AncsMisscalledGetInfo</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, bletask.o(i.AncsMisscalledGetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = AncsMisscalledGetInfo &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGetNotifAttributesTitleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
</UL>

<P><STRONG><a name="[171]"></a>AncsRemoveFunction</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, bletask.o(i.AncsRemoveFunction))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = AncsRemoveFunction &rArr; ReadAncsUid &rArr; NvFlashRead &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeDisplayStateChange
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsUid
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSocialNotifEventFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
</UL>

<P><STRONG><a name="[173]"></a>AncsSaveToFlash</STRONG> (Thumb, 430 bytes, Stack size 64 bytes, ancscrc.o(i.AncsSaveToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = AncsSaveToFlash &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsMsg
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ancs_crc16_Compute
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[167]"></a>AncsScheduleGetInfo</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, bletask.o(i.AncsScheduleGetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = AncsScheduleGetInfo &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGetNotifAttributesTitleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
</UL>

<P><STRONG><a name="[165]"></a>AncsSmsGetInfo</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, bletask.o(i.AncsSmsGetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = AncsSmsGetInfo &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGetNotifAttributesTitleCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
</UL>

<P><STRONG><a name="[177]"></a>Ancs_Discovery_Restart</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, main.o(i.Ancs_Discovery_Restart))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Ancs_Discovery_Restart &rArr; ble_db_discovery_start
</UL>
<BR>[Calls]<UL><LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_start
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
</UL>

<P><STRONG><a name="[cb]"></a>AndroidCallCB</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, neul18cmdpackage.o(i.AndroidCallCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = AndroidCallCB &rArr; SaveAncsToBuf_ForAndroid_SmsAndCall &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf_ForAndroid_SmsAndCall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[cc]"></a>AndroidSmsCallCB</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, neul18cmdpackage.o(i.AndroidSmsCallCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = AndroidSmsCallCB &rArr; SaveAncsToBuf_ForAndroid_SmsAndCall &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf_ForAndroid_SmsAndCall
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[ce]"></a>AndroidSocialCB</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, neul18cmdpackage.o(i.AndroidSocialCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = AndroidSocialCB &rArr; SaveAncsToBuf_ForAndroid &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf_ForAndroid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[cf]"></a>AndroideEmailCB</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, neul18cmdpackage.o(i.AndroideEmailCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = AndroideEmailCB &rArr; SaveAncsToBuf_ForAndroid &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf_ForAndroid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[d0]"></a>AndroideScheduleCB</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, neul18cmdpackage.o(i.AndroideScheduleCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = AndroideScheduleCB &rArr; SaveAncsToBuf_ForAndroid &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf_ForAndroid
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[7b]"></a>AppEventHandler</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, apphandler.o(i.AppEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 772<LI>Call Chain = AppEventHandler &rArr; PreHandler &rArr; RemoveSMS &rArr; ResetSMSuid &rArr; NvFlashWrite &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandlerMsg
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[7c]"></a>AppInitTask</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, apphandler.o(i.AppInitTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = AppInitTask &rArr; LoadHandler &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[2c]"></a>AppsBoxHandler</STRONG> (Thumb, 232 bytes, Stack size 16 bytes, alarmhandler.o(i.AppsBoxHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = AppsBoxHandler &rArr; ShowAppsMenu &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowAppsMenu
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRemindNum
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.AppsMmenuHandler)
</UL>
<P><STRONG><a name="[3b]"></a>AppsMmenuHandler</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, alarmhandler.o(i.AppsMmenuHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = AppsMmenuHandler &rArr; ShowMainMenu &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMenuHandler
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.LoadMenuHandler)
</UL>
<P><STRONG><a name="[c4]"></a>AutoHeartRateCB</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.AutoHeartRateCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = AutoHeartRateCB &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHrTaskId
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[18b]"></a>BC5_SendDtmfNumber</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.BC5_SendDtmfNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BC5_SendDtmfNumber &rArr; BC5_UartSendData &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_UartSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
</UL>

<P><STRONG><a name="[18d]"></a>BC5_SetBtPairCmd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.BC5_SetBtPairCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BC5_SetBtPairCmd &rArr; BC5_UartSendData &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_UartSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[18e]"></a>BC5_SetCallOpCmd</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bc5cmdpackage.o(i.BC5_SetCallOpCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = BC5_SetCallOpCmd &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_UartSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_TO_CC2540_CallState
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
</UL>

<P><STRONG><a name="[18f]"></a>BC5_SetMicCmd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.BC5_SetMicCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BC5_SetMicCmd &rArr; BC5_UartSendData &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_UartSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_ShowPhoneMicStatus
</UL>

<P><STRONG><a name="[190]"></a>BC5_SetRingModeCmd</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bc5cmdpackage.o(i.BC5_SetRingModeCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = BC5_SetRingModeCmd &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_UartSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5BtInfoCB
</UL>

<P><STRONG><a name="[191]"></a>BC5_SetStandbyModeCmd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.BC5_SetStandbyModeCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BC5_SetStandbyModeCmd &rArr; BC5_UartSendData &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_UartSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
</UL>

<P><STRONG><a name="[192]"></a>BC5_SetStopRingToneCmd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.BC5_SetStopRingToneCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BC5_SetStopRingToneCmd &rArr; BC5_UartSendData &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_UartSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_ShowPhoneSoundStatus
</UL>

<P><STRONG><a name="[193]"></a>BC5_SetTonesCmd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.BC5_SetTonesCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BC5_SetTonesCmd &rArr; BC5_UartSendData &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_UartSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtBleDisconnectHandler
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5BtInfoCB
</UL>

<P><STRONG><a name="[194]"></a>BC5_SetVolumeCmd</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, bc5cmdpackage.o(i.BC5_SetVolumeCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = BC5_SetVolumeCmd &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_volume_level
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_UartSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5BtInfoCB
</UL>

<P><STRONG><a name="[196]"></a>BC5_TO_CC2540_CallState</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, bc5cmdpackage.o(i.BC5_TO_CC2540_CallState))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = BC5_TO_CC2540_CallState &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeDisplayStateChange
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetCallOpCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5PhoneInfoCB
</UL>

<P><STRONG><a name="[ac]"></a>BacklightSettingCmdCB</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.BacklightSettingCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = BacklightSettingCmdCB &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[c7]"></a>BaseKcalTypeCB</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.BaseKcalTypeCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = BaseKcalTypeCB &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[19a]"></a>BatChargeInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, hwtask.o(i.BatChargeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BatChargeInit &rArr; CheckChargerConnectEvent &rArr; GPIOTE_IRQ_TOUCH_Recovery &rArr; ZT75xx_I2cWriteCMD &rArr; C_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChargerConnectEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19c]"></a>BatCheck</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, hwtask.o(i.BatCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = BatCheck &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatVelue
</UL>

<P><STRONG><a name="[19d]"></a>BatteryAdcMeasure</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, hwtask.o(i.BatteryAdcMeasure))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BatteryAdcMeasure &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
</UL>

<P><STRONG><a name="[4c]"></a>BatteryHandler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, alarmhandler.o(i.BatteryHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = BatteryHandler &rArr; ShowBatteryInfo &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryInfo
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.SettingHandler)
</UL>
<P><STRONG><a name="[66]"></a>BatteryStatusHandler</STRONG> (Thumb, 466 bytes, Stack size 24 bytes, batterystatushandler.o(i.BatteryStatusHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = BatteryStatusHandler &rArr; BindEndDealWith &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadMultiHandler
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSuspendEvent
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLEDTime
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryLow
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BindEndDealWith
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBatteryStatus
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimulatePowerOffKey
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopSecondEvent
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSecondEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[1aa]"></a>Bc5DataParseHandler</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, bc5cmdpackage.o(i.Bc5DataParseHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Bc5DataParseHandler &rArr; BC5_Response &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_Response
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PacketParser
</UL>

<P><STRONG><a name="[4c4]"></a>Bc5PowerPinInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hwtask.o(i.Bc5PowerPinInit))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1a9]"></a>BindEndDealWith</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, datastoreinside.o(i.BindEndDealWith))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = BindEndDealWith &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAutoSleepFlag
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
</UL>

<P><STRONG><a name="[d4]"></a>BindingBeginCmdCB</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.BindingBeginCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BindingBeginCmdCB &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeDisplayStateChange
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[d5]"></a>BindingEndCmdCB</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.BindingEndCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = BindingEndCmdCB &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearInitMarkEvent
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[1ad]"></a>BleAncsAppMsg</STRONG> (Thumb, 510 bytes, Stack size 24 bytes, bletask.o(i.BleAncsAppMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = BleAncsAppMsg &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMalloc
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeDisplayStateChange
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_retreat
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ancs_c_evt
</UL>

<P><STRONG><a name="[67]"></a>BleBondChooseHandler</STRONG> (Thumb, 394 bytes, Stack size 32 bytes, alarmhandler.o(i.BleBondChooseHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = BleBondChooseHandler &rArr; ShowBleBondQuery &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSettingOkRspCmd
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSettingFailRspCmd
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBleBondQuery
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBleBondOk
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBleBondFail
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[7f]"></a>BleEventHandler</STRONG> (Thumb, 490 bytes, Stack size 24 bytes, bletask.o(i.BleEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = BleEventHandler &rArr; FLP_TurnOnBle &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_req_timeout_handler
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apple_notification_setup
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ancs_Discovery_Restart
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRspCmd
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHwTaskId
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_security_setup_req
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_data_init
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHrTaskId
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeReceiveBuff
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOnBle
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeDisplayStateChange
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStepTaskId
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSleepTaskId
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOffBle
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSocialNotifEventFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[80]"></a>BleInitTask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bletask.o(i.BleInitTask))
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[1c2]"></a>BlePktSendComplete</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bletask.o(i.BlePktSendComplete))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwSendDataToBt
</UL>

<P><STRONG><a name="[1c3]"></a>Bma250E_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bma2xx.o(i.Bma250E_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = Bma250E_Init &rArr; Bma250E_Step_SetConfig &rArr; bma2x2_set_mode &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_soft_reset
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_init
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckGsensorType
</UL>

<P><STRONG><a name="[1c8]"></a>Bma250E_Sleep_SetConfig</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, bma2xx.o(i.Bma250E_Sleep_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Bma250E_Sleep_SetConfig &rArr; bma2x2_set_fifo_mode
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_set_fifo_mode
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_get_fifo_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTest
</UL>

<P><STRONG><a name="[1cb]"></a>Bma250E_Standby</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bma2xx.o(i.Bma250E_Standby))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Bma250E_Standby &rArr; bma2x2_set_mode &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_set_mode
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_get_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseStep
</UL>

<P><STRONG><a name="[1c7]"></a>Bma250E_Step_SetConfig</STRONG> (Thumb, 426 bytes, Stack size 16 bytes, bma2xx.o(i.Bma250E_Step_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Bma250E_Step_SetConfig &rArr; bma2x2_set_mode &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_soft_reset
<LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_set_thr
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_set_shadow_dis
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_set_range
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_set_mode
<LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_set_int_od
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_set_int_lvl
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_set_fifo_mode
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_set_fifo_data_sel
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_set_bandwidth
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_get_thr
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_get_range
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_get_mode
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_get_int_od
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_get_int_lvl
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_get_fifo_mode
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_get_fifo_data_sel
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_get_bandwidth
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Init
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStep
</UL>

<P><STRONG><a name="[3de]"></a>Bma2x2GetFifoData</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bma2xx.o(i.Bma2x2GetFifoData))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Bma2x2GetFifoData
</UL>
<BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounterWithGesture
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounter
</UL>

<P><STRONG><a name="[1db]"></a>BootloaderUartInitial</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, app_uart_fifo.o(i.BootloaderUartInitial))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BootloaderUartInitial
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_init
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2a]"></a>BrightnessHandler</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, alarmhandler.o(i.BrightnessHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = BrightnessHandler &rArr; ShowBrightness &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBrightness
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.AppsBoxHandler)
</UL>
<P><STRONG><a name="[68]"></a>BtBleDisconnectHandler</STRONG> (Thumb, 206 bytes, Stack size 16 bytes, alarmhandler.o(i.BtBleDisconnectHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = BtBleDisconnectHandler &rArr; ShowBtDisconnected &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnicode_Stop
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBtDisconnected
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetTonesCmd
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopDisconnectQuitEvent
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDisconnectQuitEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[387]"></a>CNT_GroupId</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, datastoreinside.o(i.CNT_GroupId))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneBookToBuf
</UL>

<P><STRONG><a name="[400]"></a>CRC_calc</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, app_uart_fifo.o(i.CRC_calc))
<BR><BR>[Called By]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyPacketChecksum
</UL>

<P><STRONG><a name="[251]"></a>C_DELAY_MS</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, cypressi2c.o(i.C_DELAY_MS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = C_DELAY_MS
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CInit
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_power_control
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_power_sequence
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpInit
</UL>

<P><STRONG><a name="[1e6]"></a>C_Delayus</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, cypressi2c.o(i.C_Delayus))
<BR><BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteCMD
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_write_data
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteDATA
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cReadData
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStop
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStart
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cSendByte
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cReceive
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cNoAck
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cAck
</UL>

<P><STRONG><a name="[1e3]"></a>C_I2cAck</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, cypressi2c.o(i.C_I2cAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = C_I2cAck
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Delayus
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cReadData
</UL>

<P><STRONG><a name="[1e7]"></a>C_I2cNoAck</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, cypressi2c.o(i.C_I2cNoAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = C_I2cNoAck
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Delayus
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cReadData
</UL>

<P><STRONG><a name="[1e8]"></a>C_I2cReceive</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, cypressi2c.o(i.C_I2cReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = C_I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Delayus
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cReadData
</UL>

<P><STRONG><a name="[1ea]"></a>C_I2cSendByte</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, cypressi2c.o(i.C_I2cSendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = C_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Delayus
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteCMD
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_write_data
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteDATA
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cReadData
</UL>

<P><STRONG><a name="[1eb]"></a>C_I2cStart</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, cypressi2c.o(i.C_I2cStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = C_I2cStart
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Delayus
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteCMD
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_write_data
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteDATA
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cReadData
</UL>

<P><STRONG><a name="[1ec]"></a>C_I2cStop</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, cypressi2c.o(i.C_I2cStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = C_I2cStop
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Delayus
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteCMD
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_write_data
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteDATA
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cReadData
</UL>

<P><STRONG><a name="[3be]"></a>CalBaseKcal</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, steptask.o(i.CalBaseKcal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CalBaseKcal
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
</UL>

<P><STRONG><a name="[1ed]"></a>CalcAccumulateTime</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, ui.o(i.CalcAccumulateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CalcAccumulateTime &rArr; osal_ConvertUTCSecs &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_ConvertUTCSecs
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hearRate_state_check
</UL>

<P><STRONG><a name="[1ef]"></a>CalclateWeeks</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, ui.o(i.CalclateWeeks))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = CalclateWeeks &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHeartRate
</UL>

<P><STRONG><a name="[1f0]"></a>CalculatePercent</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, ui.o(i.CalculatePercent))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CalculatePercent &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepMonitor
</UL>

<P><STRONG><a name="[1f1]"></a>CameraControl</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, ble_media.o(i.CameraControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CameraControl &rArr; ble_media_string_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_media_string_send
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CameraHandler
</UL>

<P><STRONG><a name="[db]"></a>CameraControlCmdCB</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, neul18cmdpackage.o(i.CameraControlCmdCB))
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[24]"></a>CameraHandler</STRONG> (Thumb, 392 bytes, Stack size 40 bytes, alarmhandler.o(i.CameraHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = CameraHandler &rArr; ShowCameraCountDown &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CameraControl
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCameraCountDown
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCamera
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.AppsBoxHandler)
</UL>
<P><STRONG><a name="[1f5]"></a>CancelSendSuspendEvent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, displaytask.o(i.CancelSendSuspendEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CancelSendSuspendEvent &rArr; osal_stop_timerEx &rArr; pS_OsStopTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NordicPM
</UL>

<P><STRONG><a name="[1f6]"></a>Change_ShowPhoneMicStatus</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, phonehandler.o(i.Change_ShowPhoneMicStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = Change_ShowPhoneMicStatus &rArr; ShowPhoneMic &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetMicCmd
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneMic
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
</UL>

<P><STRONG><a name="[1f8]"></a>Change_ShowPhoneSoundStatus</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, phonehandler.o(i.Change_ShowPhoneSoundStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = Change_ShowPhoneSoundStatus &rArr; ShowPhoneSound &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetStopRingToneCmd
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneSound
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
</UL>

<P><STRONG><a name="[172]"></a>ChargeDisplayStateChange</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, batterystatushandler.o(i.ChargeDisplayStateChange))
<BR><BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAncsAppMsg
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsRemoveFunction
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor_Handler
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_TO_CC2540_CallState
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepContorl
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoticeNumberCB
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BindingBeginCmdCB
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFixedRemindMsg
</UL>

<P><STRONG><a name="[1fa]"></a>CheckAndReplaceUnknownNumber</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, phonehandler.o(i.CheckAndReplaceUnknownNumber))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = CheckAndReplaceUnknownNumber &rArr; SaveCallerIDToBuf &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMalloc
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCallerIDToBuf
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsUnknownNumberCallerID
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5CallerInfoCB
</UL>

<P><STRONG><a name="[19b]"></a>CheckChargerConnectEvent</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, hwtask.o(i.CheckChargerConnectEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = CheckChargerConnectEvent &rArr; GPIOTE_IRQ_TOUCH_Recovery &rArr; ZT75xx_I2cWriteCMD &rArr; C_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQ_TOUCH_Recovery
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableUsbPinInt
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___8_HwTask_c_e0b1165f__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatChargeInit
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
</UL>

<P><STRONG><a name="[201]"></a>CheckCypressEvent</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hwtask.o(i.CheckCypressEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = CheckCypressEvent &rArr; zinitix_touchinfo &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_touchinfo
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyEventHandler
</UL>

<P><STRONG><a name="[203]"></a>CheckGsensorType</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, main.o(i.CheckGsensorType))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = CheckGsensorType &rArr; Lis3dh_Init &rArr; lis3dh_wakeup &rArr; LIS3DH_SetODR &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockI2c
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lis3dh_Init
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteRead
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[207]"></a>CheckMinuteRemindEvent</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, reminder.o(i.CheckMinuteRemindEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = CheckMinuteRemindEvent &rArr; RemindsCompCheck &rArr; GetMonthWeekDays &rArr; GetYearWeekDays &rArr; GetYearDays &rArr; IsLeap &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNoSameTime
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFixedRemindMsg
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsCompCheck
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
</UL>

<P><STRONG><a name="[20b]"></a>CheckPowerOffUsbStateEvent</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, hwtask.o(i.CheckPowerOffUsbStateEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = CheckPowerOffUsbStateEvent &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
</UL>

<P><STRONG><a name="[20c]"></a>CheckPowerOnUsbStateEvent</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, hwtask.o(i.CheckPowerOnUsbStateEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = CheckPowerOnUsbStateEvent &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOn
</UL>

<P><STRONG><a name="[183]"></a>CheckRemindNum</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, reminder.o(i.CheckRemindNum))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckRemindNum
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindViewHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppsBoxHandler
</UL>

<P><STRONG><a name="[20d]"></a>CheckSitRemindEvent</STRONG> (Thumb, 180 bytes, Stack size 24 bytes, reminder.o(i.CheckSitRemindEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = CheckSitRemindEvent &rArr; GetMonthWeekDays &rArr; GetYearWeekDays &rArr; GetYearDays &rArr; IsLeap &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSitRemindEvent
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthWeekDays
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
</UL>

<P><STRONG><a name="[210]"></a>CheckSleepGoalOverRemind</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sleephandler.o(i.CheckSleepGoalOverRemind))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CheckSleepGoalOverRemind &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
</UL>

<P><STRONG><a name="[211]"></a>CheckSportGoalOverRemind</STRONG> (Thumb, 198 bytes, Stack size 24 bytes, sporthandler.o(i.CheckSportGoalOverRemind))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = CheckSportGoalOverRemind &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
</UL>

<P><STRONG><a name="[213]"></a>CheckTouchKeyEvent</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, hwtask.o(i.CheckTouchKeyEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CheckTouchKeyEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyEventHandler
</UL>

<P><STRONG><a name="[214]"></a>CheckUpdateAS7000</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, main.o(i.CheckUpdateAS7000))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = CheckUpdateAS7000 &rArr; WRITE_OTA_INFO &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_OTA_INFO
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_OTA_INFO
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_upgrade
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerOFF
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[218]"></a>CheckUpdateKl17</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, main.o(i.CheckUpdateKl17))
<BR><BR>[Stack]<UL><LI>Max Depth = 1260<LI>Call Chain = CheckUpdateKl17 &rArr; do_update &rArr; READ_OTA_INFO &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_update
<LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_init
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_OTA_INFO
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_OTA_INFO
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL17_Power_Enble
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21c]"></a>CheckUpdateTP</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, main.o(i.CheckUpdateTP))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = CheckUpdateTP &rArr; WRITE_OTA_INFO &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_OTA_INFO
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_OTA_INFO
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CInit
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[21f]"></a>CheckUsbInDebounce</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, hwtask.o(i.CheckUsbInDebounce))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = CheckUsbInDebounce &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQ_USB_Recovery
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
</UL>

<P><STRONG><a name="[1a1]"></a>CheckpCurrentHandler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, apphandler.o(i.CheckpCurrentHandler))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialHomePageHandler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor_Handler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SitRemindHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHomePageHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallHomePageHandler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrRemindHandler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoalOver_Handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHomePageHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHomePageHandler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtBleDisconnectHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportOverviewHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerHandler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialMessageHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchingHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindViewHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallAlertHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CameraHandler
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOrderCmdCB
</UL>

<P><STRONG><a name="[220]"></a>CleanAppTaskMessage</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, apphandler.o(i.CleanAppTaskMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = CleanAppTaskMessage &rArr; pS_OsMsgReceive &rArr; pS_OsMsgExtract
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgReceive
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgDeallocate
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpTest
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlashUpdateFontLib
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFCTest
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CSN
</UL>

<P><STRONG><a name="[1ab]"></a>CleanAutoSleepFlag</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, steptask.o(i.CleanAutoSleepFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CleanAutoSleepFlag
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSetAutoSleepTime
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepInit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenDateTimeSetting
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenBond
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BindEndDealWith
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepContorl
</UL>

<P><STRONG><a name="[37d]"></a>CleanWpos</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, datastoreinside.o(i.CleanWpos))
<BR><BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsMsg
</UL>

<P><STRONG><a name="[37e]"></a>CleanWpos_SOCIAL</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, datastoreinside.o(i.CleanWpos_SOCIAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CleanWpos_SOCIAL
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncs_SOCIAL
</UL>

<P><STRONG><a name="[69]"></a>ClearAllHandler</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, alarmhandler.o(i.ClearAllHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = ClearAllHandler &rArr; ShowClearAll &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowClearAll
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_Social
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_Sms
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_PhoneRecord
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_MissedCall
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_Email
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[22a]"></a>ClearAllReminders</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, reminder.o(i.ClearAllReminders))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = ClearAllReminders &rArr; ClearRemindData &rArr; SpiFlash_4KSector_Erase &rArr; Flash_Erase &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsWatchDogFeed
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearRemindData
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReminderCmdCB
</UL>

<P><STRONG><a name="[22d]"></a>ClearAncsFlash</STRONG> (Thumb, 236 bytes, Stack size 24 bytes, datastoreinside.o(i.ClearAncsFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = ClearAncsFlash &rArr; SpiFlash_4KSector_Erase &rArr; Flash_Erase &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBandInfo
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAncsHandler
</UL>

<P><STRONG><a name="[227]"></a>ClearAncs_Email</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, datastoreinside.o(i.ClearAncs_Email))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = ClearAncs_Email &rArr; SpiFlash_4KSector_Erase &rArr; Flash_Erase &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllHandler
</UL>

<P><STRONG><a name="[224]"></a>ClearAncs_MissedCall</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, datastoreinside.o(i.ClearAncs_MissedCall))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = ClearAncs_MissedCall &rArr; SpiFlash_4KSector_Erase &rArr; Flash_Erase &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllHandler
</UL>

<P><STRONG><a name="[228]"></a>ClearAncs_PhoneRecord</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, datastoreinside.o(i.ClearAncs_PhoneRecord))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = ClearAncs_PhoneRecord &rArr; ClearPhoneRecordFlash &rArr; SpiFlash_4KSector_Erase &rArr; Flash_Erase &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPhoneRecordFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllHandler
</UL>

<P><STRONG><a name="[225]"></a>ClearAncs_Sms</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, datastoreinside.o(i.ClearAncs_Sms))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = ClearAncs_Sms &rArr; SpiFlash_4KSector_Erase &rArr; Flash_Erase &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllHandler
</UL>

<P><STRONG><a name="[226]"></a>ClearAncs_Social</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, datastoreinside.o(i.ClearAncs_Social))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = ClearAncs_Social &rArr; SpiFlash_4KSector_Erase &rArr; Flash_Erase &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllHandler
</UL>

<P><STRONG><a name="[4c3]"></a>ClearCRCFlag</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bootloaderapp.o(i.ClearCRCFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ClearCRCFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[231]"></a>ClearCallerIDFormApk</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, phonehandler.o(i.ClearCallerIDFormApk))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = ClearCallerIDFormApk &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[c2]"></a>ClearHeartRateDataCB</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.ClearHeartRateDataCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = ClearHeartRateDataCB &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHeartRateMemoryFullFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[1ac]"></a>ClearInitMarkEvent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, displaytask.o(i.ClearInitMarkEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ClearInitMarkEvent &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupAlertHandler
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BindingEndCmdCB
</UL>

<P><STRONG><a name="[26e]"></a>ClearLcdDisplay</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(i.ClearLcdDisplay))
<BR><BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLineUnicode
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySingleUnicode
</UL>

<P><STRONG><a name="[234]"></a>ClearPhoneBookFlash</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, datastoreinside.o(i.ClearPhoneBookFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = ClearPhoneBookFlash &rArr; SpiFlash_4KSector_Erase &rArr; Flash_Erase &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBandInfo
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookCB
</UL>

<P><STRONG><a name="[230]"></a>ClearPhoneRecordFlash</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, datastoreinside.o(i.ClearPhoneRecordFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = ClearPhoneRecordFlash &rArr; SpiFlash_4KSector_Erase &rArr; Flash_Erase &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBandInfo
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_PhoneRecord
</UL>

<P><STRONG><a name="[ca]"></a>ClearRecordWorkDataCB</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.ClearRecordWorkDataCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = ClearRecordWorkDataCB &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStepMemoryFullFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[22b]"></a>ClearRemindData</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, datastoreinside.o(i.ClearRemindData))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = ClearRemindData &rArr; SpiFlash_4KSector_Erase &rArr; Flash_Erase &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllReminders
</UL>

<P><STRONG><a name="[1a3]"></a>ClearScreen</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(i.ClearScreen))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOn
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtBleDisconnectHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showUpgradeFail
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showUpgrade
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSecondsTimer
</UL>

<P><STRONG><a name="[20f]"></a>ClearSitRemindEvent</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, reminder.o(i.ClearSitRemindEvent))
<BR><BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSportData
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSitRemindEvent
</UL>

<P><STRONG><a name="[236]"></a>ClearSleepData</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sleeptask.o(i.ClearSleepData))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = ClearSleepData &rArr; GotoNormalModeWhenBond &rArr; StartStep &rArr; Lis3dh_Step_SetConfig &rArr; lis3dh_wakeup &rArr; LIS3DH_SetODR &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitorInit
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenBond
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
</UL>

<P><STRONG><a name="[bd]"></a>ClearSleepDataCB</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.ClearSleepDataCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = ClearSleepDataCB &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSleepMemoryFullFlag
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[23a]"></a>ClearSleepDataWhenDateTimeSetting</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, sleeptask.o(i.ClearSleepDataWhenDateTimeSetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = ClearSleepDataWhenDateTimeSetting &rArr; GotoNormalModeWhenDateTimeSetting &rArr; StoreSleepDataToFlash &rArr; StoreSleepDetailForDisplay &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitorInit
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenDateTimeSetting
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateTimeSettingCmdCB
</UL>

<P><STRONG><a name="[23c]"></a>ClearSportData</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, steptask.o(i.ClearSportData))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = ClearSportData &rArr; SetDisplySportData &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vClearAllStat
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDisplySportData
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSitRemindEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateTimeSettingCmdCB
</UL>

<P><STRONG><a name="[bb]"></a>ClearSportDataCB</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.ClearSportDataCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = ClearSportDataCB &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStepMemoryFullFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[89]"></a>ClockEventHandler</STRONG> (Thumb, 650 bytes, Stack size 40 bytes, clocktask.o(i.ClockEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = ClockEventHandler &rArr; StoreSportDataToFlash &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaDataParse
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsGetSysTick
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_data_Parse
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_SetUTCTime
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlashRtcClock
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSleepData
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
<LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAutoSleepTime
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSportData
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAutoSleepFlag
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryAdcMeasure
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMotorVibrateTimes
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSitRemindEvent
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckMinuteRemindEvent
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNoSameDay
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthWeekDays
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[246]"></a>ClockEvtInit</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, clocktask.o(i.ClockEvtInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = ClockEvtInit &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNoSameDay
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8a]"></a>ClockInitTask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clocktask.o(i.ClockInitTask))
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[247]"></a>Clock_init</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, clockdriver.o(i.Clock_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Clock_init &rArr; app_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[31]"></a>Clock_second_handle</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, clockdriver.o(i.Clock_second_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Clock_second_handle &rArr; pS_OsHwTimerUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsHwTimerUpdate
</UL>
<BR>[Address Reference Count : 1]<UL><LI> clockdriver.o(i.Clock_init)
</UL>
<P><STRONG><a name="[24b]"></a>Clock_start</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, clockdriver.o(i.Clock_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Clock_start &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24d]"></a>CloseStep</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, steptask.o(i.CloseStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = CloseStep &rArr; Lis3dh_Standby &rArr; lis3dh_wakeup &rArr; LIS3DH_SetODR &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockI2c
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lis3dh_Standby
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Standby
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTPInt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTPInt
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
</UL>

<P><STRONG><a name="[386]"></a>Cnt_GWpos</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, datastoreinside.o(i.Cnt_GWpos))
<BR><BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneBookToBuf
</UL>

<P><STRONG><a name="[383]"></a>Cnt_Wpos</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, datastoreinside.o(i.Cnt_Wpos))
<BR><BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePBookto_Flash
</UL>

<P><STRONG><a name="[21d]"></a>CypressI2CInit</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, cypressi2c.o(i.CypressI2CInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = CypressI2CInit &rArr; TpInit &rArr; ZT75xx_I2cWriteREG &rArr; ZT75xx_I2cWriteDATA &rArr; C_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_DELAY_MS
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateTP
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOn
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_resume
</UL>

<P><STRONG><a name="[253]"></a>CypressI2CLongTouch</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, cypressi2c.o(i.CypressI2CLongTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = CypressI2CLongTouch &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyEventHandler
</UL>

<P><STRONG><a name="[254]"></a>CypressI2CParse</STRONG> (Thumb, 224 bytes, Stack size 40 bytes, cypressi2c.o(i.CypressI2CParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = CypressI2CParse &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchKeyTaskId
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalKeyDistribute
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_touchinfo
</UL>

<P><STRONG><a name="[153]"></a>DELAY_MS</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, lower_level_xxx.o(i.DELAY_MS))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DELAY_MS
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerOFF
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerON_ExtALG
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerON
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerON_Loader
</UL>

<P><STRONG><a name="[3f4]"></a>DELAY_US</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lower_level_xxx.o(i.DELAY_US))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_power_sequence
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpInit
</UL>

<P><STRONG><a name="[b8]"></a>DailyGoalSettingCmdCB</STRONG> (Thumb, 196 bytes, Stack size 32 bytes, neul18cmdpackage.o(i.DailyGoalSettingCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = DailyGoalSettingCmdCB &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGoalOverRemind
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>DailyScheduleHandler</STRONG> (Thumb, 584 bytes, Stack size 48 bytes, alarmhandler.o(i.DailyScheduleHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = DailyScheduleHandler &rArr; ReadAncsMsg_ToKl17 &rArr; Flash_Display_Ancs_LayOut &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsMsg_ToKl17
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForAncsHandlerEnd
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAncsMsg
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 2]<UL><LI> alarmhandler.o(i.DailyScheduleHomePageHandler)
<LI> alarmhandler.o(i.NotificationBoxHandler)
</UL>
<P><STRONG><a name="[64]"></a>DailyScheduleHomePageHandler</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, alarmhandler.o(i.DailyScheduleHomePageHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = DailyScheduleHomePageHandler &rArr; LCD_MsgInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler_WithoutDisplay
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MsgInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[316]"></a>DataParseHandler</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.DataParseHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DataParseHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PacketParser
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaDataParse
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_data_Parse
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SppTransmissionCB
</UL>

<P><STRONG><a name="[a9]"></a>DateTimeSettingCmdCB</STRONG> (Thumb, 244 bytes, Stack size 64 bytes, neul18cmdpackage.o(i.DateTimeSettingCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = DateTimeSettingCmdCB &rArr; ClearSleepDataWhenDateTimeSetting &rArr; GotoNormalModeWhenDateTimeSetting &rArr; StoreSleepDataToFlash &rArr; StoreSleepDetailForDisplay &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_SetUTCTime
<LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSleepDataWhenDateTimeSetting
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSportData
<LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNoSameDay
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthDays
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[1c6]"></a>DelayMs</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, bma2xx.o(i.DelayMs))
<BR><BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Init
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Sleep_SetConfig
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Standby
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTest
</UL>

<P><STRONG><a name="[2ef]"></a>Delayus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, axisi2c.o(i.Delayus))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockI2c
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteRead
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cStop
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cStart
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cSendByte
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cReceive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cNoAck
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteWrite
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cAck
</UL>

<P><STRONG><a name="[44]"></a>DeleteAncsHandler</STRONG> (Thumb, 98 bytes, Stack size 8 bytes, alarmhandler.o(i.DeleteAncsHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = DeleteAncsHandler &rArr; ShowDeleteAncs &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncsFlash
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeleteAncs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.NotificationBoxHandler)
</UL>
<P><STRONG><a name="[25b]"></a>DeleteAncsMsg</STRONG> (Thumb, 112 bytes, Stack size 32 bytes, datastoreinside.o(i.DeleteAncsMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DeleteAncsMsg &rArr; SetDeletePos
</UL>
<BR>[Calls]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDeletePos
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialMessageHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHandler
</UL>

<P><STRONG><a name="[261]"></a>DeleteAncsMsg_SOCIAL</STRONG> (Thumb, 106 bytes, Stack size 32 bytes, datastoreinside.o(i.DeleteAncsMsg_SOCIAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = DeleteAncsMsg_SOCIAL &rArr; SetDeletePos_SOCIAL
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDeletePos_SOCIAL
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHandler
</UL>

<P><STRONG><a name="[dd]"></a>DeviceCommIDCmdCB</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.DeviceCommIDCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = DeviceCommIDCmdCB &rArr; WriteDeviceCommID &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDeviceCommID
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[264]"></a>DisableKl17</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, hwtask.o(i.DisableKl17))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DisableKl17 &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[266]"></a>DisableReset</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hwtask.o(i.DisableReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DisableReset
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL17_Power_Enble
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3ed]"></a>DisableUsbPinInt</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hwtask.o(i.DisableUsbPinInt))
<BR><BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemFactoryModeSet
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOn
</UL>

<P><STRONG><a name="[7d]"></a>DisplayEventHandler</STRONG> (Thumb, 372 bytes, Stack size 24 bytes, displaytask.o(i.DisplayEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = DisplayEventHandler &rArr; SetDefaultGoal &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPowerOff
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResume
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Sleep
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSleepMemoryFullFlag
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDefaultGoal
<LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSleepData
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllReminders
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetStandbyModeCmd
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSuspend
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStepMemoryFullFlag
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSportData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[7e]"></a>DisplayInitTask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, displaytask.o(i.DisplayInitTask))
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[26c]"></a>DisplayLineUnicode</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, fontdisplay.o(i.DisplayLineUnicode))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = DisplayLineUnicode &rArr; DisplaySingleUnicode &rArr; Get_Chinese_Dot &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLcdDisplay
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySingleUnicode
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
</UL>

<P><STRONG><a name="[26f]"></a>DisplayLogo</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, displaytask.o(i.DisplayLogo))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = DisplayLogo &rArr; ShowLogo &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLogo
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Motor_LevelLow
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Motor_Level
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOn
</UL>

<P><STRONG><a name="[276]"></a>DisplayMap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, lcd.o(i.DisplayMap))
<BR><BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBatteryStatus
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showUpgradeFail
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showUpgrade
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySingleUnicode
</UL>

<P><STRONG><a name="[273]"></a>DisplayPhoneCallTime</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, phonehandler.o(i.DisplayPhoneCallTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = DisplayPhoneCallTime &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
</UL>

<P><STRONG><a name="[26d]"></a>DisplaySingleUnicode</STRONG> (Thumb, 402 bytes, Stack size 72 bytes, fontdisplay.o(i.DisplaySingleUnicode))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = DisplaySingleUnicode &rArr; Get_Chinese_Dot &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMap
<LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLcdDisplay
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnknownUnicodeConversion
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Thai_Dot
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Russion_Dot
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Lartin_Dot
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Korean_Dot
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Japanese_Dot
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Chinese_Dot
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Ascii_Dot
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLineUnicode
</UL>

<P><STRONG><a name="[1e1]"></a>DisplayUnicode_Stop</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, fontdisplay.o(i.DisplayUnicode_Stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DisplayUnicode_Stop &rArr; osal_clear_event &rArr; pS_OsClearTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_clear_event
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtBleDisconnectHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicHandler
</UL>

<P><STRONG><a name="[33]"></a>E_MailHandler</STRONG> (Thumb, 584 bytes, Stack size 48 bytes, alarmhandler.o(i.E_MailHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = E_MailHandler &rArr; ReadAncsMsg_ToKl17 &rArr; Flash_Display_Ancs_LayOut &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsMsg_ToKl17
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForAncsHandlerEnd
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAncsMsg
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 2]<UL><LI> alarmhandler.o(i.E_MailHomePageHandler)
<LI> alarmhandler.o(i.NotificationBoxHandler)
</UL>
<P><STRONG><a name="[63]"></a>E_MailHomePageHandler</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, alarmhandler.o(i.E_MailHomePageHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = E_MailHomePageHandler &rArr; LCD_MsgInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler_WithoutDisplay
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MsgInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[16a]"></a>EmailPollGetInfo</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bletask.o(i.EmailPollGetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = EmailPollGetInfo &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
</UL>

<P><STRONG><a name="[200]"></a>EnableUsbPinInt</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hwtask.o(i.EnableUsbPinInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EnableUsbPinInt
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_input
</UL>
<BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQ_USB_Recovery
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChargerConnectEvent
</UL>

<P><STRONG><a name="[280]"></a>EraseOtaSuccessFlag</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, datastoreinside.o(i.EraseOtaSuccessFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = EraseOtaSuccessFlag &rArr; SpiFlash_4KSector_Erase &rArr; Flash_Erase &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>ExitRecordWorkOutsHandler</STRONG> (Thumb, 188 bytes, Stack size 16 bytes, alarmhandler.o(i.ExitRecordWorkOutsHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = ExitRecordWorkOutsHandler &rArr; ShowExitRecordWorkouts &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_clear_event
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowExitRecordWorkouts
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.RecordWorkHandler)
</UL>
<P><STRONG><a name="[53]"></a>ExitSleep_Handler</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, sleephandler.o(i.ExitSleep_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = ExitSleep_Handler &rArr; ShowExitSleep &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowExitSleep
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sleephandler.o(i.SleepMonitor_Handler)
</UL>
<P><STRONG><a name="[51]"></a>ExitsleepmodeHandler</STRONG> (Thumb, 200 bytes, Stack size 16 bytes, alarmhandler.o(i.ExitsleepmodeHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 708<LI>Call Chain = ExitsleepmodeHandler &rArr; GotoNormalMode &rArr; StoreSleepDataToFlash &rArr; StoreSleepDetailForDisplay &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_clear_event
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowExitSleepMode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sleephandler.o(i.SleepMonitor_Handler)
</UL>
<P><STRONG><a name="[1bb]"></a>FLP_TurnOffBle</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, bletask.o(i.FLP_TurnOffBle))
<BR><BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBleStatus
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowShortCut
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetHandler
</UL>

<P><STRONG><a name="[1bc]"></a>FLP_TurnOnBle</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bletask.o(i.FLP_TurnOnBle))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = FLP_TurnOnBle &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>
<BR>[Called By]<UL><LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBleStatus
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResume
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOn
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupAlertHandler
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowShortCut
</UL>

<P><STRONG><a name="[3d7]"></a>FacebookMessageSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bletask.o(i.FacebookMessageSet))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[b2]"></a>FactorySettingCmdCB</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.FactorySettingCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = FactorySettingCmdCB &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFactorySettingEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[286]"></a>Flash_Display_Ancs_LayOut</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, kl17cmdpackage.o(i.Flash_Display_Ancs_LayOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = Flash_Display_Ancs_LayOut &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_LCD_Enable
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeBacklight
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_encode
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsMsg_ToKl17_SOCIAL
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsMsg_ToKl17
</UL>

<P><STRONG><a name="[28b]"></a>Flash_Erase</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, kl17cmdpackage.o(i.Flash_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Flash_Erase &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ChipErase
</UL>

<P><STRONG><a name="[28c]"></a>Flash_Read</STRONG> (Thumb, 60 bytes, Stack size 32 bytes, kl17cmdpackage.o(i.Flash_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_TP_Firmware
</UL>

<P><STRONG><a name="[28d]"></a>Flash_Set_Access</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, kl17cmdpackage.o(i.Flash_Set_Access))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Flash_Set_Access &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlash_Nordic
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlash_Freescal
</UL>

<P><STRONG><a name="[28e]"></a>Flash_Write</STRONG> (Thumb, 80 bytes, Stack size 280 bytes, kl17cmdpackage.o(i.Flash_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 396<LI>Call Chain = Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_encode
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
</UL>

<P><STRONG><a name="[258]"></a>ForAncsHandlerEnd</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, datastoreinside.o(i.ForAncsHandlerEnd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ForAncsHandlerEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialMessageHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHandler
<LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSocialCount_SOCIAL
</UL>

<P><STRONG><a name="[3c6]"></a>ForAncsHandlerEnd_SOCIAL</STRONG> (Thumb, 84 bytes, Stack size 20 bytes, datastoreinside.o(i.ForAncsHandlerEnd_SOCIAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ForAncsHandlerEnd_SOCIAL
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHandler
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSocialCount
</UL>

<P><STRONG><a name="[22e]"></a>Force_NordicFlash</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, extspiflash.o(i.Force_NordicFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Force_NordicFlash &rArr; Flash_Set_Access &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Set_Access
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Enable_IO
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsInit
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncsFlash
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlashRtcClock
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashRtcClock
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRecordWork
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkUploadData
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBandInfo
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsMsg
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NeedSetDisplySportData
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaProgMsg
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_Social
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_Sms
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_MissedCall
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_Email
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartHandler
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_OTALanguageInfo
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncs_SOCIAL
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPhoneRecordFlash
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NordicPM
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgMsgCmdCB
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguageFormat
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookCB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplaySportDataCmdCB
</UL>

<P><STRONG><a name="[290]"></a>Format_Gmail</STRONG> (Thumb, 198 bytes, Stack size 32 bytes, bletask.o(i.Format_Gmail))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Format_Gmail &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf_ForAndroid_SmsAndCall
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf_ForAndroid
</UL>

<P><STRONG><a name="[1b7]"></a>FreeReceiveBuff</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, bletask.o(i.FreeReceiveBuff))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = FreeReceiveBuff &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSocialNotifEventFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
</UL>

<P><STRONG><a name="[22f]"></a>Free_NordicFlash</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, extspiflash.o(i.Free_NordicFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = Free_NordicFlash &rArr; Flash_Set_Access &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Set_Access
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Disable_IO
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsInit
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncsFlash
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlashRtcClock
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashRtcClock
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRecordWork
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkUploadData
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsMsg
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NeedSetDisplySportData
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaProgMsg
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_Social
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_Sms
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_MissedCall
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_Email
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_OTALanguageInfo
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncs_SOCIAL
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPhoneRecordFlash
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NordicPM
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguageFormat
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookCB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplaySportDataCmdCB
</UL>

<P><STRONG><a name="[b]"></a>GPIOTE_IRQHandler</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, hwtask.o(i.GPIOTE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = GPIOTE_IRQHandler &rArr; AS7000_SwapData_ExtALG &rArr; ReadData_AS7000 &rArr; HRM_I2cMultipleByteRead &rArr; HRM_I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartKeyScan
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUsbInDebounce
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchKeyTaskId
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSleepTaskId
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_SwapData_ExtALG
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1fe]"></a>GPIOTE_IRQ_TOUCH_Recovery</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hwtask.o(i.GPIOTE_IRQ_TOUCH_Recovery))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GPIOTE_IRQ_TOUCH_Recovery &rArr; ZT75xx_I2cWriteCMD &rArr; C_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteCMD
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___8_HwTask_c_e0b1165f__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChargerConnectEvent
</UL>

<P><STRONG><a name="[294]"></a>GPIOTE_IRQ_USB_Recovery</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, hwtask.o(i.GPIOTE_IRQ_USB_Recovery))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = GPIOTE_IRQ_USB_Recovery &rArr; CheckUsbInDebounce &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUsbInDebounce
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_read
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableUsbPinInt
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_touchinfo
</UL>

<P><STRONG><a name="[3df]"></a>GetAccData</STRONG> (Thumb, 90 bytes, Stack size 0 bytes, bma2xx.o(i.GetAccData))
<BR><BR>[Called By]<UL><LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounterWithGesture
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounter
</UL>

<P><STRONG><a name="[259]"></a>GetAncsMsgLayOut</STRONG> (Thumb, 118 bytes, Stack size 20 bytes, datastoreinside.o(i.GetAncsMsgLayOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GetAncsMsgLayOut
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialHomePageHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHomePageHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallHomePageHandler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHomePageHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHomePageHandler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialMessageHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBoxHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallAlertHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHandler
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReflashAncsCount
</UL>

<P><STRONG><a name="[3c7]"></a>GetAncsMsgLayOut_SOCIAL</STRONG> (Thumb, 110 bytes, Stack size 20 bytes, datastoreinside.o(i.GetAncsMsgLayOut_SOCIAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GetAncsMsgLayOut_SOCIAL
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHomeHandler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHandler
</UL>

<P><STRONG><a name="[295]"></a>GetAndroidSocialType</STRONG> (Thumb, 92 bytes, Stack size 4 bytes, neul18cmdpackage.o(i.GetAndroidSocialType))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetAndroidSocialType &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoticeNumberCB
</UL>

<P><STRONG><a name="[296]"></a>GetAndroid_iosFalg</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, datastoreinside.o(i.GetAndroid_iosFalg))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = GetAndroid_iosFalg &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
</UL>

<P><STRONG><a name="[160]"></a>GetAppTaskId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apphandler.o(i.GetAppTaskId))
<BR><BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAncsAppMsg
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsTimerUpdate
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResume
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSendInfo
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveSMS
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnicode_Stop
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsSmsGetInfo
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsScheduleGetInfo
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsRemoveFunction
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsMisscalledGetInfo
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsIncomingcalledGetInfo
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsEmailGetInfo
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepUploadData
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenDateTimeSetting
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSuspend
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepUploadData
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkUploadData
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpTestHandler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syncing_Handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor_Handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupAlertHandler
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCallerIDToBuf
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_TO_CC2540_CallState
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsSaveToFlash
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Handler
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetRingModeCmd
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimulatePowerOffKey
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetVolumeCmd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Handler
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadVolumeHandler
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateUploadData
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsPollGetInfo
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulePollGetInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MisscallPollGetInfo
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingcallPollGetInfo
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmailPollGetInfo
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSitRemindEvent
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetCallOpCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDisplay
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_ShowPhoneSoundStatus
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsDelaySend
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSleep_Handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowShortCut
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMusicControl
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLineUnicode
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerHandler
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopRecordWork
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopDisconnectQuitEvent
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartRecordWork
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDisconnectQuitEvent
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchingHandler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicHandler
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCall_Recovery
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitsleepmodeHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitRecordWorkOutsHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CameraHandler
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBC5StartSiriCB
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBC5RingModeCB
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBC5PhoneStateCB
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBC5AudioVollCB
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5CallerInfoCB
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5BtInfoCB
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepContorl
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoticeNumberCB
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFCTest
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicSettingsCmdCB
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDTest
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDTest
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CSN
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportTotalCntCB
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BindingEndCmdCB
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BindingBeginCmdCB
</UL>

<P><STRONG><a name="[ee]"></a>GetBC5AudioVolCB</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.GetBC5AudioVolCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = GetBC5AudioVolCB &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[e5]"></a>GetBT4AddrTest</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.GetBT4AddrTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = GetBT4AddrTest &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[ad]"></a>GetBatValueCmdCB</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.GetBatValueCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GetBatValueCmdCB &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[297]"></a>GetBatVelue</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, hwtask.o(i.GetBatVelue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GetBatVelue &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatCheck
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcRead
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
</UL>

<P><STRONG><a name="[398]"></a>GetBleTaskId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, bletask.o(i.GetBleTaskId))
<BR><BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_req_timeout_handler
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ancs_c_evt
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_evt_handler
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSettingOkRspCmd
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSettingFailRspCmd
</UL>

<P><STRONG><a name="[319]"></a>GetClockTaskId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clocktask.o(i.GetClockTaskId))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_data_handler
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaDataParseHandler
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResume
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSuspend
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerHandler
</UL>

<P><STRONG><a name="[a6]"></a>GetCmdRespond</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.GetCmdRespond))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = GetCmdRespond &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[e7]"></a>GetDateTimeTest</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, neul18cmdpackage.o(i.GetDateTimeTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = GetDateTimeTest &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[bf]"></a>GetDisplaySportDataCmdCB</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, neul18cmdpackage.o(i.GetDisplaySportDataCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = GetDisplaySportDataCmdCB &rArr; StoreSportDataToFlash &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepInit
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopStep
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[311]"></a>GetDisplayTaskId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, displaytask.o(i.GetDisplayTaskId))
<BR><BR>[Called By]<UL><LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBC5StandbyCB
</UL>

<P><STRONG><a name="[29b]"></a>GetDisplySportData</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, datastoreinside.o(i.GetDisplySportData))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = GetDisplySportData &rArr; GetEmptyDisplySportDataIndex &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_decode
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmptyDisplySportDataIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
</UL>

<P><STRONG><a name="[29e]"></a>GetDistance</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, steptask.o(i.GetDistance))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = GetDistance &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
</UL>

<P><STRONG><a name="[29c]"></a>GetEmptyDisplySportDataIndex</STRONG> (Thumb, 50 bytes, Stack size 264 bytes, datastoreinside.o(i.GetEmptyDisplySportDataIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 428<LI>Call Chain = GetEmptyDisplySportDataIndex &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplySportData
</UL>

<P><STRONG><a name="[29f]"></a>GetEmptyRtcClockSaveIndex</STRONG> (Thumb, 70 bytes, Stack size 152 bytes, clockdriver.o(i.GetEmptyRtcClockSaveIndex))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = GetEmptyRtcClockSaveIndex &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashRtcClock
</UL>

<P><STRONG><a name="[2a0]"></a>GetFlashRtcClock</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, clockdriver.o(i.GetFlashRtcClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = GetFlashRtcClock &rArr; GetEmptyRtcClockSaveIndex &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmptyRtcClockSaveIndex
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRtcClock
</UL>

<P><STRONG><a name="[2a1]"></a>GetHeartRateData</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, datastoreinside.o(i.GetHeartRateData))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = GetHeartRateData &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateUploadData
</UL>

<P><STRONG><a name="[c3]"></a>GetHeartRateDataCB</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.GetHeartRateDataCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = GetHeartRateDataCB &rArr; HeartRateUploadData &rArr; GetHeartRateData &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateUploadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[c1]"></a>GetHeartRateTotalCntCB</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.GetHeartRateTotalCntCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GetHeartRateTotalCntCB &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[150]"></a>GetHrTaskId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, heartratetask.o(i.GetHrTaskId))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_GetHeartRateData
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopRecordWork
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartRecordWork
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoHeartRateCB
</UL>

<P><STRONG><a name="[1c1]"></a>GetHwTaskId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hwtask.o(i.GetHwTaskId))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRunTime
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRepeatRun
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaProgMsg
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPayBalance
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPayAID
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayPassthroughFromApp
</UL>

<P><STRONG><a name="[25e]"></a>GetMonthDays</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, clocktask.o(i.GetMonthDays))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GetMonthDays &rArr; IsLeap &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsLeap
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthWeekDays
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateTimeSettingCmdCB
</UL>

<P><STRONG><a name="[20e]"></a>GetMonthWeekDays</STRONG> (Thumb, 50 bytes, Stack size 32 bytes, clocktask.o(i.GetMonthWeekDays))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = GetMonthWeekDays &rArr; GetYearWeekDays &rArr; GetYearDays &rArr; IsLeap &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetYearWeekDays
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthDays
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateTime
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStandby
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSitRemindEvent
<LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsCompCheck
</UL>

<P><STRONG><a name="[240]"></a>GetMotorVibrateTimes</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, motor.o(i.GetMotorVibrateTimes))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
</UL>

<P><STRONG><a name="[17b]"></a>GetMsg</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, apphandler.o(i.GetMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GetMsg &rArr; pS_OsMsgReceive &rArr; pS_OsMsgExtract
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgReceive
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgDeallocate
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppEventHandler
</UL>

<P><STRONG><a name="[23f]"></a>GetNoSameDay</STRONG> (Thumb, 50 bytes, Stack size 12 bytes, clocktask.o(i.GetNoSameDay))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetNoSameDay
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEvtInit
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateTimeSettingCmdCB
</UL>

<P><STRONG><a name="[208]"></a>GetNoSameTime</STRONG> (Thumb, 36 bytes, Stack size 12 bytes, clocktask.o(i.GetNoSameTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GetNoSameTime
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckMinuteRemindEvent
</UL>

<P><STRONG><a name="[2a5]"></a>GetNotifAttributesTitleInf</STRONG> (Thumb, 1118 bytes, Stack size 24 bytes, bletask.o(i.GetNotifAttributesTitleInf))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = GetNotifAttributesTitleInf &rArr; Send_AncsConnectedGetAllInfo &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AncsConnectedGetAllInfo
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeDisplayStateChange
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGetNotifAttributesTitleCmd
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToFlash_SendMsg
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSocialType
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Format_Gmail
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ancs_c_evt
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[2aa]"></a>GetOTALanguageInfo</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, datastoreinside.o(i.GetOTALanguageInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = GetOTALanguageInfo &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_OTALanguageInfo
</UL>

<P><STRONG><a name="[2ab]"></a>GetRecordWorkData</STRONG> (Thumb, 74 bytes, Stack size 40 bytes, datastoreinside.o(i.GetRecordWorkData))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = GetRecordWorkData &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkUploadData
</UL>

<P><STRONG><a name="[c8]"></a>GetRecordWorkTotalCntCB</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.GetRecordWorkTotalCntCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GetRecordWorkTotalCntCB &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[2ac]"></a>GetRemindData</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, datastoreinside.o(i.GetRemindData))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = GetRemindData &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsInit
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsUploadAll
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindsNote
</UL>

<P><STRONG><a name="[2ad]"></a>GetRemindDisplay</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, reminder.o(i.GetRemindDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = GetRemindDisplay &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindViewHandler
</UL>

<P><STRONG><a name="[2ae]"></a>GetRemindFreePage</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, datastoreinside.o(i.GetRemindFreePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = GetRemindFreePage &rArr; GetRemindHead &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindHead
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsAdd
</UL>

<P><STRONG><a name="[2af]"></a>GetRemindHead</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, datastoreinside.o(i.GetRemindHead))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = GetRemindHead &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindFreePage
</UL>

<P><STRONG><a name="[2b0]"></a>GetRemindsEvent</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, reminder.o(i.GetRemindsEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetRemindsEvent &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
</UL>

<P><STRONG><a name="[2b1]"></a>GetRemindsNote</STRONG> (Thumb, 54 bytes, Stack size 40 bytes, reminder.o(i.GetRemindsNote))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = GetRemindsNote &rArr; GetRemindData &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsWatchDogFeed
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindData
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowUserRemind
</UL>

<P><STRONG><a name="[be]"></a>GetSleepAwakeDataCB</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.GetSleepAwakeDataCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = GetSleepAwakeDataCB &rArr; SleepUploadData &rArr; GetSleepData &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepUploadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[2b3]"></a>GetSleepData</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, datastoreinside.o(i.GetSleepData))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = GetSleepData &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepUploadData
</UL>

<P><STRONG><a name="[1c0]"></a>GetSleepTaskId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sleeptask.o(i.GetSleepTaskId))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleTouchKey
</UL>

<P><STRONG><a name="[2a6]"></a>GetSocialType</STRONG> (Thumb, 220 bytes, Stack size 16 bytes, bletask.o(i.GetSocialType))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = GetSocialType &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
</UL>

<P><STRONG><a name="[2b4]"></a>GetSportKcal</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, steptask.o(i.GetSportKcal))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GetSportKcal &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
</UL>

<P><STRONG><a name="[b9]"></a>GetSportModeCB</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.GetSportModeCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GetSportModeCB &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[ba]"></a>GetSportTotalCntCB</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.GetSportTotalCntCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = GetSportTotalCntCB &rArr; StoreSportDataToFlash &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopStep
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[2b5]"></a>GetStepData</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, datastoreinside.o(i.GetStepData))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = GetStepData &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepUploadData
</UL>

<P><STRONG><a name="[1bf]"></a>GetStepTaskId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, steptask.o(i.GetStepTaskId))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
</UL>

<P><STRONG><a name="[123]"></a>GetTimeStamp</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, clocktask.o(i.GetTimeStamp))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GetTimeStamp &rArr; gOS_GetUTCTime &rArr; osal_ConvertUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsGetUTCSecs
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenBond
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDisplay
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemAlloc_CallerInfo
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartRecordWork
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateTimeSettingCmdCB
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sleep_Moniter_Judge
</UL>

<P><STRONG><a name="[2b7]"></a>GetTouchKeyMsg</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, touchkeytask.o(i.GetTouchKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GetTouchKeyMsg &rArr; pS_OsMsgReceive &rArr; pS_OsMsgExtract
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyEventHandler
</UL>

<P><STRONG><a name="[255]"></a>GetTouchKeyTaskId</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, touchkeytask.o(i.GetTouchKeyTaskId))
<BR><BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartKeyScan
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_touchinfo
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopKeyScan
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CParse
</UL>

<P><STRONG><a name="[a8]"></a>GetVersionMsgCmdCB</STRONG> (Thumb, 236 bytes, Stack size 48 bytes, neul18cmdpackage.o(i.GetVersionMsgCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = GetVersionMsgCmdCB &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[a7]"></a>GetWatchIdCmdCB</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, neul18cmdpackage.o(i.GetWatchIdCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = GetWatchIdCmdCB &rArr; ReadWatchId &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWatchId
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[2b8]"></a>GetYearDays</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, clocktask.o(i.GetYearDays))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GetYearDays &rArr; IsLeap &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsLeap
</UL>
<BR>[Called By]<UL><LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetYearWeekDays
</UL>

<P><STRONG><a name="[2a4]"></a>GetYearWeekDays</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, clocktask.o(i.GetYearWeekDays))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = GetYearWeekDays &rArr; GetYearDays &rArr; IsLeap &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetYearDays
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthWeekDays
</UL>

<P><STRONG><a name="[2b9]"></a>Get_AccData</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, lis3dh.o(i.Get_AccData))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Get_AccData &rArr; LIS3DH_ReadReg &rArr; I2cMultipleByteRead &rArr; I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsensor_read_accel
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsensor_receive_data
</UL>

<P><STRONG><a name="[27d]"></a>Get_Ascii_Dot</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, fontdisplay.o(i.Get_Ascii_Dot))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Get_Ascii_Dot &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySingleUnicode
</UL>

<P><STRONG><a name="[e3]"></a>Get_CSN</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.Get_CSN))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = Get_CSN &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAppTaskMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[278]"></a>Get_Chinese_Dot</STRONG> (Thumb, 172 bytes, Stack size 64 bytes, fontdisplay.o(i.Get_Chinese_Dot))
<BR><BR>[Stack]<UL><LI>Max Depth = 228<LI>Call Chain = Get_Chinese_Dot &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySingleUnicode
</UL>

<P><STRONG><a name="[2bb]"></a>Get_HR_AS7000_Version</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, as7000.o(i.Get_HR_AS7000_Version))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Get_HR_AS7000_Version &rArr; AS7000_PowerON &rArr; AS7000_Setmode &rArr; WriteData_AS7000 &rArr; HRM_I2cMultipleByteWrite &rArr; HRM_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerOFF
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerON
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData_AS7000
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[279]"></a>Get_Japanese_Dot</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, fontdisplay.o(i.Get_Japanese_Dot))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Get_Japanese_Dot &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySingleUnicode
</UL>

<P><STRONG><a name="[2bc]"></a>Get_KL17_Version</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, kl17cmdpackage.o(i.Get_KL17_Version))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = Get_KL17_Version &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[27b]"></a>Get_Korean_Dot</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, fontdisplay.o(i.Get_Korean_Dot))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Get_Korean_Dot &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySingleUnicode
</UL>

<P><STRONG><a name="[275]"></a>Get_Lartin_Dot</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, fontdisplay.o(i.Get_Lartin_Dot))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Get_Lartin_Dot &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySingleUnicode
</UL>

<P><STRONG><a name="[31c]"></a>Get_Motor_Level</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pwm.o(i.Get_Motor_Level))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoVibrationIntensityCB
</UL>

<P><STRONG><a name="[2bd]"></a>Get_Ota_Addr</STRONG> (Thumb, 110 bytes, Stack size 56 bytes, datastoreinside.o(i.Get_Ota_Addr))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = Get_Ota_Addr &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[277]"></a>Get_Russion_Dot</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, fontdisplay.o(i.Get_Russion_Dot))
<BR><BR>[Stack]<UL><LI>Max Depth = 188<LI>Call Chain = Get_Russion_Dot &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySingleUnicode
</UL>

<P><STRONG><a name="[182]"></a>Get_Screen_Locaton</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, cypressi2c.o(i.Get_Screen_Locaton))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Get_Screen_Locaton &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpTestHandler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor_Handler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepOverview_Handler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristWakeUpHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VirateHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerHandler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialMessageHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHomeHandler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkDetailHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBoxHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallAlertHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitsleepmodeHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitRecordWorkOutsHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHandler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAncsHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightnessHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppsBoxHandler
</UL>

<P><STRONG><a name="[27a]"></a>Get_Thai_Dot</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, fontdisplay.o(i.Get_Thai_Dot))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = Get_Thai_Dot &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySingleUnicode
</UL>

<P><STRONG><a name="[5d]"></a>GoalOver_Handler</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, sporthandler.o(i.GoalOver_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = GoalOver_Handler &rArr; ShowGoalOver &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowGoalOver
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[283]"></a>GotoNormalMode</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, sleeptask.o(i.GotoNormalMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = GotoNormalMode &rArr; StoreSleepDataToFlash &rArr; StoreSleepDetailForDisplay &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_clear_event
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_z
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_y
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_x
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuitSleepMode
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsensor_read_accel
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSleepGoalOverRemind
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepDataToFlash
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAutoSleepFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor_Handler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitsleepmodeHandler
</UL>

<P><STRONG><a name="[238]"></a>GotoNormalModeWhenBond</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, sleeptask.o(i.GotoNormalModeWhenBond))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = GotoNormalModeWhenBond &rArr; StartStep &rArr; Lis3dh_Step_SetConfig &rArr; lis3dh_wakeup &rArr; LIS3DH_SetODR &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_clear_event
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_z
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_y
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_x
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuitSleepMode
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsensor_read_accel
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStep
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAutoSleepFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSleepData
</UL>

<P><STRONG><a name="[23b]"></a>GotoNormalModeWhenDateTimeSetting</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, sleeptask.o(i.GotoNormalModeWhenDateTimeSetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = GotoNormalModeWhenDateTimeSetting &rArr; StoreSleepDataToFlash &rArr; StoreSleepDetailForDisplay &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_clear_event
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_z
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_y
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_x
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuitSleepMode
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsensor_read_accel
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepDataToFlash
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAutoSleepFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSleepDataWhenDateTimeSetting
</UL>

<P><STRONG><a name="[2c5]"></a>GotoSleepMode</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, sleeptask.o(i.GotoSleepMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = GotoSleepMode &rArr; StoreSportDataToFlash &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitorInit
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lis3dh_Sleep_SetConfig
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Sleep_SetConfig
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lis3dh_Step_SetConfig
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopStep
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAutoSleepFlag
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTPInt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTPInt
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor_Handler
</UL>

<P><STRONG><a name="[2c8]"></a>Gpio_Interrupt_Initial</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hwtask.o(i.Gpio_Interrupt_Initial))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Gpio_Interrupt_Initial
</UL>
<BR>[Calls]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_input
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2c9]"></a>Gsensor_get_fifo_framecount</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, lis3dh.o(i.Gsensor_get_fifo_framecount))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Gsensor_get_fifo_framecount &rArr; LIS3DH_ReadReg &rArr; I2cMultipleByteRead &rArr; I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounter
</UL>

<P><STRONG><a name="[2bf]"></a>Gsensor_read_accel</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, lis3dh.o(i.Gsensor_read_accel))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Gsensor_read_accel &rArr; Get_AccData &rArr; LIS3DH_ReadReg &rArr; I2cMultipleByteRead &rArr; I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_AccData
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenDateTimeSetting
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenBond
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTest
</UL>

<P><STRONG><a name="[2ca]"></a>Gsensor_receive_data</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, lis3dh.o(i.Gsensor_receive_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Gsensor_receive_data &rArr; Get_AccData &rArr; LIS3DH_ReadReg &rArr; I2cMultipleByteRead &rArr; I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_AccData
</UL>
<BR>[Called By]<UL><LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounter
</UL>

<P><STRONG><a name="[152]"></a>HRM_Comms_init</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, as7000_i2c.o(i.HRM_Comms_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HRM_Comms_init
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___12_AS7000_I2c_c_ee77214a__nrf_delay_us
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerOFF
</UL>

<P><STRONG><a name="[2cf]"></a>HRM_Delayus</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, as7000_i2c.o(i.HRM_Delayus))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cStop
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cStart
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cSendByte
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cReceive
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cNoAck
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cMultipleByteWrite
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cMultipleByteRead
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cAck
</UL>

<P><STRONG><a name="[2cc]"></a>HRM_I2cAck</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, as7000_i2c.o(i.HRM_I2cAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HRM_I2cAck
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_Delayus
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cMultipleByteRead
</UL>

<P><STRONG><a name="[2d0]"></a>HRM_I2cMultipleByteRead</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, as7000_i2c.o(i.HRM_I2cMultipleByteRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HRM_I2cMultipleByteRead &rArr; HRM_I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cStop
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cStart
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cSendByte
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cReceive
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cNoAck
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cAck
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_Delayus
</UL>
<BR>[Called By]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData_AS7000
</UL>

<P><STRONG><a name="[2d6]"></a>HRM_I2cMultipleByteWrite</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, as7000_i2c.o(i.HRM_I2cMultipleByteWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HRM_I2cMultipleByteWrite &rArr; HRM_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cStop
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cStart
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cSendByte
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_Delayus
</UL>
<BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData_AS7000
</UL>

<P><STRONG><a name="[2d5]"></a>HRM_I2cNoAck</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, as7000_i2c.o(i.HRM_I2cNoAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HRM_I2cNoAck
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_Delayus
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cMultipleByteRead
</UL>

<P><STRONG><a name="[2d3]"></a>HRM_I2cReceive</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, as7000_i2c.o(i.HRM_I2cReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HRM_I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_Delayus
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cMultipleByteRead
</UL>

<P><STRONG><a name="[2d2]"></a>HRM_I2cSendByte</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, as7000_i2c.o(i.HRM_I2cSendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HRM_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_Delayus
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cMultipleByteWrite
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cMultipleByteRead
</UL>

<P><STRONG><a name="[2d1]"></a>HRM_I2cStart</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, as7000_i2c.o(i.HRM_I2cStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HRM_I2cStart
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_Delayus
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cMultipleByteWrite
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cMultipleByteRead
</UL>

<P><STRONG><a name="[2d4]"></a>HRM_I2cStop</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, as7000_i2c.o(i.HRM_I2cStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HRM_I2cStop
</UL>
<BR>[Calls]<UL><LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_Delayus
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cMultipleByteWrite
<LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cMultipleByteRead
</UL>

<P><STRONG><a name="[37]"></a>HRMmenuHandler</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, alarmhandler.o(i.HRMmenuHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = HRMmenuHandler &rArr; ShowMainMenu &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMenuHandler
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.LoadMenuHandler)
</UL>
<P><STRONG><a name="[256]"></a>HalKeyDistribute</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, touchkeytask.o(i.HalKeyDistribute))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = HalKeyDistribute &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalKeyPoll
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CParse
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tapEvent
</UL>

<P><STRONG><a name="[3f2]"></a>HalKeyDoubleCheckTimeout</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, touchkeytask.o(i.HalKeyDoubleCheckTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HalKeyDoubleCheckTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyEventHandler
</UL>

<P><STRONG><a name="[2d7]"></a>HalKeyPoll</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, touchkeytask.o(i.HalKeyPoll))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = HalKeyPoll &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalKeyRead
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalKeyDistribute
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyEventHandler
</UL>

<P><STRONG><a name="[2d8]"></a>HalKeyRead</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, touchkeytask.o(i.HalKeyRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HalKeyRead &rArr; AdcRead
</UL>
<BR>[Calls]<UL><LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalKeyPoll
</UL>

<P><STRONG><a name="[2d9]"></a>HandleTouchKey</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, touchkeytask.o(i.HandleTouchKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HandleTouchKey &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSleepTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyEventHandler
</UL>

<P><STRONG><a name="[17d]"></a>HandlerMsg</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, apphandler.o(i.HandlerMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HandlerMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppEventHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
</UL>

<P><STRONG><a name="[c5]"></a>HeartRateAlarmCB</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.HeartRateAlarmCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = HeartRateAlarmCB &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[2a2]"></a>HeartRateUploadData</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, heartratetask.o(i.HeartRateUploadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = HeartRateUploadData &rArr; GetHeartRateData &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeartRateDataCmd
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHeartRateData
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHeartRateDataCB
</UL>

<P><STRONG><a name="[2db]"></a>HrCloseHW</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, heartratetask.o(i.HrCloseHW))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HrCloseHW &rArr; AS7000_PowerOFF &rArr; DELAY_MS
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerOFF
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
</UL>

<P><STRONG><a name="[2dd]"></a>HrDisplayIsChg</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, heartratetask.o(i.HrDisplayIsChg))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
</UL>

<P><STRONG><a name="[79]"></a>HrEventHandler</STRONG> (Thumb, 506 bytes, Stack size 32 bytes, heartratetask.o(i.HrEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = HrEventHandler &rArr; StoreHeartRateDataToFlash &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsGetSysTick
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_ble_hrs_refresh_hr_val
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hearRate_state_check
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreHeartRateDataToFlash
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrOpenHW
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrGetValueHW
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrDisplayIsChg
<LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrCloseHW
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateUploadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[2e2]"></a>HrGetLastValueTime</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, heartratetask.o(i.HrGetLastValueTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HrGetLastValueTime &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hearRate_state_check
</UL>

<P><STRONG><a name="[353]"></a>HrGetValue</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, heartratetask.o(i.HrGetValue))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hearRate_state_check
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
</UL>

<P><STRONG><a name="[2de]"></a>HrGetValueHW</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, heartratetask.o(i.HrGetValueHW))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = HrGetValueHW &rArr; AS7000_GetHeartRateData &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_GetHeartRateData
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
</UL>

<P><STRONG><a name="[7a]"></a>HrInitTask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, heartratetask.o(i.HrInitTask))
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[35b]"></a>HrIsRunning</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, heartratetask.o(i.HrIsRunning))
<BR><BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshTimeUIFun
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hearRate_state_check
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
</UL>

<P><STRONG><a name="[2dc]"></a>HrOpenHW</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, heartratetask.o(i.HrOpenHW))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = HrOpenHW &rArr; AS7000_PowerON_ExtALG &rArr; ReadData_AS7000 &rArr; HRM_I2cMultipleByteRead &rArr; HRM_I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerON_ExtALG
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerON
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
</UL>

<P><STRONG><a name="[5f]"></a>HrRemindHandler</STRONG> (Thumb, 188 bytes, Stack size 24 bytes, alarmhandler.o(i.HrRemindHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = HrRemindHandler &rArr; ShowHRAlarm &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHRAlarm
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[4b8]"></a>HrStarting</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, heartratetask.o(i.HrStarting))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hearRate_state_check
</UL>

<P><STRONG><a name="[352]"></a>HrValueValid</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, heartratetask.o(i.HrValueValid))
<BR><BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hearRate_state_check
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
</UL>

<P><STRONG><a name="[87]"></a>HwEventHandler</STRONG> (Thumb, 472 bytes, Stack size 24 bytes, hwtask.o(i.HwEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = HwEventHandler &rArr; InitBandInfo &rArr; WRITE_USER_FLAG &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatVelue
<LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PacketParser
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_FLAG
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOn
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRepeatRun
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBandInfo
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOffBle
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAutoSleepFlag
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChargeMessage
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetBoard
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOnUsbStateEvent
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOffUsbStateEvent
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChargerConnectEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[88]"></a>HwInitTask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hwtask.o(i.HwInitTask))
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[199]"></a>HwSendDataToBt</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, simplegattprofile.o(i.HwSendDataToBt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlePktSendComplete
<LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_string_send
</UL>
<BR>[Called By]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReminderSendData
</UL>

<P><STRONG><a name="[2eb]"></a>I2cAck</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, axisi2c.o(i.I2cAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2cAck
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayus
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteRead
</UL>

<P><STRONG><a name="[205]"></a>I2cMultipleByteRead</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, axisi2c.o(i.I2cMultipleByteRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2cMultipleByteRead &rArr; I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cStop
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cStart
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cSendByte
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cReceive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cNoAck
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cAck
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayus
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckGsensorType
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_bus_bma2xx
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;read_burst_bma2xx
</UL>

<P><STRONG><a name="[2f5]"></a>I2cMultipleByteWrite</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, axisi2c.o(i.I2cMultipleByteWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cStop
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cStart
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cSendByte
<LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayus
</UL>
<BR>[Called By]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;write_bus_bma2xx
</UL>

<P><STRONG><a name="[2f4]"></a>I2cNoAck</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, axisi2c.o(i.I2cNoAck))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2cNoAck
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayus
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteRead
</UL>

<P><STRONG><a name="[2f2]"></a>I2cReceive</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, axisi2c.o(i.I2cReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayus
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteRead
</UL>

<P><STRONG><a name="[2f1]"></a>I2cSendByte</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, axisi2c.o(i.I2cSendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayus
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteRead
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteWrite
</UL>

<P><STRONG><a name="[2f0]"></a>I2cStart</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, axisi2c.o(i.I2cStart))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2cStart
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayus
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteRead
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteWrite
</UL>

<P><STRONG><a name="[2f3]"></a>I2cStop</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, axisi2c.o(i.I2cStop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = I2cStop
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayus
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteRead
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteWrite
</UL>

<P><STRONG><a name="[62]"></a>IncomingCallHandler</STRONG> (Thumb, 266 bytes, Stack size 40 bytes, alarmhandler.o(i.IncomingCallHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = IncomingCallHandler &rArr; ReadAncsMsg_ToKl17 &rArr; Flash_Display_Ancs_LayOut &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsMsg_ToKl17
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCall_Recovery
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[2f7]"></a>IncomingCallNoticePhoneHandlerOutHandler</STRONG> (Thumb, 170 bytes, Stack size 32 bytes, phonehandler.o(i.IncomingCallNoticePhoneHandlerOutHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = IncomingCallNoticePhoneHandlerOutHandler &rArr; SaveCallerIDToBuf &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMalloc
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCallerIDToBuf
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5CallerInfoCB
</UL>

<P><STRONG><a name="[2f6]"></a>IncomingCall_Recovery</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, alarmhandler.o(i.IncomingCall_Recovery))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = IncomingCall_Recovery &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallHandler
</UL>

<P><STRONG><a name="[162]"></a>IncomingcallPollGetInfo</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bletask.o(i.IncomingcallPollGetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = IncomingcallPollGetInfo &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
</UL>

<P><STRONG><a name="[2f8]"></a>InitAncsBuf</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bletask.o(i.InitAncsBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InitAncsBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf_ForAndroid
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf
</UL>

<P><STRONG><a name="[2f9]"></a>InitAncsBuf_SmsAndCall</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bletask.o(i.InitAncsBuf_SmsAndCall))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InitAncsBuf_SmsAndCall
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf_ForAndroid_SmsAndCall
</UL>

<P><STRONG><a name="[2e7]"></a>InitBandInfo</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.InitBandInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = InitBandInfo &rArr; WRITE_USER_FLAG &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncsFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsWatchDogFeed
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_FLAG
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPhoneRecordFlash
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPhoneBookFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetHandler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchIDTest
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlashEraseSaveFlag
</UL>

<P><STRONG><a name="[403]"></a>InitGesture</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, steptask.o(i.InitGesture))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristWakeUpHandler
</UL>

<P><STRONG><a name="[2fa]"></a>InitMotorVibrate</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, motor.o(i.InitMotorVibrate))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = InitMotorVibrate &rArr; PWM_init &rArr; app_pwm_init &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2fc]"></a>InitPhoneBookBuf</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, datastoreinside.o(i.InitPhoneBookBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InitPhoneBookBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookCB
</UL>

<P><STRONG><a name="[2fd]"></a>InitSleepDetailForDisplay</STRONG> (Thumb, 86 bytes, Stack size 136 bytes, sleeptask.o(i.InitSleepDetailForDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = InitSleepDetailForDisplay &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
</UL>

<P><STRONG><a name="[2fe]"></a>InitUartBuffer</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_uart_fifo.o(i.InitUartBuffer))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = InitUartBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInitial
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInit_ChoosePin
</UL>

<P><STRONG><a name="[2ff]"></a>InterfaceBatTimeDis</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, ui.o(i.InterfaceBatTimeDis))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBatteryInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSyncingIcon
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRestart
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowReset
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRecordgo
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMoving
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenu
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBtDisconnected
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBleBondQuery
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBleBondOk
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBleBondFail
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryInfo
</UL>

<P><STRONG><a name="[301]"></a>InterfaceDataWithBatTimeDis</STRONG> (Thumb, 110 bytes, Stack size 152 bytes, ui.o(i.InterfaceDataWithBatTimeDis))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBatteryInfo
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHeartRate
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowGoalOver
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepMonitor
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWakeup
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSports
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleeping
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSearching
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSearch
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRecordWorkoutsRUN
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRecordResult
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMusicControl
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMusic
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMeeting
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMedicine
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHRAlarm
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowEat
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCameraCountDown
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCamera
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBrightness
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTimerStatus
</UL>

<P><STRONG><a name="[2a3]"></a>IsLeap</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, clocktask.o(i.IsLeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IsLeap &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetYearDays
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthDays
</UL>

<P><STRONG><a name="[36b]"></a>IsRemindsCanBeAdd</STRONG> (Thumb, 152 bytes, Stack size 36 bytes, reminder.o(i.IsRemindsCanBeAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = IsRemindsCanBeAdd
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsEdit
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsAdd
</UL>

<P><STRONG><a name="[1fb]"></a>IsUnknownNumberCallerID</STRONG> (Thumb, 58 bytes, Stack size 32 bytes, phonehandler.o(i.IsUnknownNumberCallerID))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = IsUnknownNumberCallerID
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckAndReplaceUnknownNumber
</UL>

<P><STRONG><a name="[219]"></a>KL17_Power_Enble</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, protocol.o(i.KL17_Power_Enble))
<BR><BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableReset
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateKl17
</UL>

<P><STRONG><a name="[512]"></a>KL17_Power_Resume</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, protocol.o(i.KL17_Power_Resume))
<BR><BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_cmd
</UL>

<P><STRONG><a name="[515]"></a>KL17_Power_Suspend</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, protocol.o(i.KL17_Power_Suspend))
<BR><BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_cmd
</UL>

<P><STRONG><a name="[e6]"></a>KeypadTest</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, neul18cmdpackage.o(i.KeypadTest))
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[ec]"></a>LCDTest</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.LCDTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = LCDTest &rArr; ShowLcdTest &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLcdTest
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFactoryStandbyTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[274]"></a>LCD_MainDataInterface</STRONG> (Thumb, 88 bytes, Stack size 152 bytes, kl17cmdpackage.o(i.LCD_MainDataInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_LCD_Enable
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeBacklight
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowOtaResult
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStandby
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshTimeUIFun
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCharging
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryLow
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryFull
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowVolumeLevel
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneDialNumber_Incall
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneDialIncallNumber_Recover
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneDialIncallNumber_Fade
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneSound
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneMic
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDisplay
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPhoneCallTime
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSportOverview
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepOverviewTwo
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepOverviewThree
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepOverviewOne
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowVirateLevel
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowUserRemind
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTpTest
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSocialClass
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowShortCut
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSettingApps
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSetUp
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRemindList
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNotificationMenu
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowEarnedMeadalRemind
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLcdTest
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceBatTimeDis
</UL>

<P><STRONG><a name="[304]"></a>LCD_MainDataInterface_NoDisplay</STRONG> (Thumb, 84 bytes, Stack size 152 bytes, kl17cmdpackage.o(i.LCD_MainDataInterface_NoDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBrightness
</UL>

<P><STRONG><a name="[305]"></a>LCD_MainDataInterface_SetBL_Step</STRONG> (Thumb, 94 bytes, Stack size 152 bytes, kl17cmdpackage.o(i.LCD_MainDataInterface_SetBL_Step))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = LCD_MainDataInterface_SetBL_Step &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_LCD_Enable
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeBacklight
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDisplay
</UL>

<P><STRONG><a name="[25d]"></a>LCD_MsgInterface</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, kl17cmdpackage.o(i.LCD_MsgInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = LCD_MsgInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBatteryInfo
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_LCD_Enable
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeBacklight
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialHomePageHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHomePageHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallHomePageHandler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHomePageHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHomePageHandler
</UL>

<P><STRONG><a name="[306]"></a>LCD_PictureInterface</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, kl17cmdpackage.o(i.LCD_PictureInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_LCD_Enable
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeBacklight
</UL>
<BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowLogo
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowVolume
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneDial_Incall
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowExitSleep
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWristOnApps
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWristOffApps
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNoNewReminders
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNoNewNotifications
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowExitSleepMode
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowExitRecordWorkouts
<LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowDeleteAncs
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowClearAll
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowAppsMenu
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowOtaLogo
</UL>

<P><STRONG><a name="[26a]"></a>LCD_Sleep</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, lcd.o(i.LCD_Sleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = LCD_Sleep &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NordicPM
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSuspend
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOn
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
</UL>

<P><STRONG><a name="[308]"></a>LCD_UpdateTime</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, kl17cmdpackage.o(i.LCD_UpdateTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = LCD_UpdateTime &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthWeekDays
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e1]"></a>LEDTest</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.LEDTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = LEDTest &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[309]"></a>LIS3DH_FIFOModeEnable</STRONG> (Thumb, 330 bytes, Stack size 16 bytes, lis3dh.o(i.LIS3DH_FIFOModeEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LIS3DH_FIFOModeEnable &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lis3dh_Sleep_SetConfig
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_wakeup
</UL>

<P><STRONG><a name="[2ba]"></a>LIS3DH_ReadReg</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, lis3dh.o(i.LIS3DH_ReadReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LIS3DH_ReadReg &rArr; I2cMultipleByteRead &rArr; I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsensor_get_fifo_framecount
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetODR
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetMode
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetFullScale
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetAxis
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_FIFOModeEnable
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_AccData
</UL>

<P><STRONG><a name="[30b]"></a>LIS3DH_SetAxis</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis3dh.o(i.LIS3DH_SetAxis))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LIS3DH_SetAxis &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_wakeup
</UL>

<P><STRONG><a name="[30c]"></a>LIS3DH_SetFullScale</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis3dh.o(i.LIS3DH_SetFullScale))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LIS3DH_SetFullScale &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_wakeup
</UL>

<P><STRONG><a name="[30d]"></a>LIS3DH_SetMode</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, lis3dh.o(i.LIS3DH_SetMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LIS3DH_SetMode &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_wakeup
</UL>

<P><STRONG><a name="[30e]"></a>LIS3DH_SetODR</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, lis3dh.o(i.LIS3DH_SetODR))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LIS3DH_SetODR &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_ReadReg
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_wakeup
</UL>

<P><STRONG><a name="[30a]"></a>LIS3DH_WriteReg</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, lis3dh.o(i.LIS3DH_WriteReg))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_wakeup
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetODR
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetMode
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetFullScale
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetAxis
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_FIFOModeEnable
</UL>

<P><STRONG><a name="[206]"></a>Lis3dh_Init</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lis3dh.o(i.Lis3dh_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Lis3dh_Init &rArr; lis3dh_wakeup &rArr; LIS3DH_SetODR &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_wakeup
</UL>
<BR>[Called By]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckGsensorType
</UL>

<P><STRONG><a name="[2c7]"></a>Lis3dh_Sleep_SetConfig</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lis3dh.o(i.Lis3dh_Sleep_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Lis3dh_Sleep_SetConfig &rArr; LIS3DH_FIFOModeEnable &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_FIFOModeEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTest
</UL>

<P><STRONG><a name="[24f]"></a>Lis3dh_Standby</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lis3dh.o(i.Lis3dh_Standby))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Lis3dh_Standby &rArr; lis3dh_wakeup &rArr; LIS3DH_SetODR &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_wakeup
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseStep
</UL>

<P><STRONG><a name="[2c6]"></a>Lis3dh_Step_SetConfig</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, lis3dh.o(i.Lis3dh_Step_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = Lis3dh_Step_SetConfig &rArr; lis3dh_wakeup &rArr; LIS3DH_SetODR &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_wakeup
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStep
</UL>

<P><STRONG><a name="[17e]"></a>LoadHandler</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, apphandler.o(i.LoadHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = LoadHandler &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMalloc
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplayTaskId
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnicode_Stop
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler_WithoutDisplay
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppInitTask
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportMmenuHandler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialHomePageHandler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor_Handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMmenuHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHomePageHandler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkoutsMmenuHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationMmenuHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallHomePageHandler
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPhoneHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRMmenuHandler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHomePageHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHomePageHandler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppsMmenuHandler
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMenuHandler
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadVolumeHandler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHomeHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBoxHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppsBoxHandler
</UL>

<P><STRONG><a name="[184]"></a>LoadMenuHandler</STRONG> (Thumb, 148 bytes, Stack size 16 bytes, standbyhandler.o(i.LoadMenuHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = LoadMenuHandler &rArr; LoadHandler &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportMmenuHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMmenuHandler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkoutsMmenuHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationMmenuHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRMmenuHandler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppsMmenuHandler
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Handler
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOrderCmdCB
</UL>

<P><STRONG><a name="[312]"></a>LoadPhoneHandler</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, phonehandler.o(i.LoadPhoneHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = LoadPhoneHandler &rArr; MemAlloc_CallerInfo &rArr; SaveCallerIDToBuf &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemAlloc_CallerInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5CallerInfoCB
</UL>

<P><STRONG><a name="[314]"></a>LoadVolumeHandler</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, volumehandler.o(i.LoadVolumeHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = LoadVolumeHandler &rArr; LoadHandler &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
</UL>

<P><STRONG><a name="[b5]"></a>MedalCB</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.MedalCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = MedalCB &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[6a]"></a>MedalHandler</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, alarmhandler.o(i.MedalHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = MedalHandler &rArr; ShowEarnedMeadalRemind &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowEarnedMeadalRemind
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[244]"></a>MediaDataParse</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ble_media.o(i.MediaDataParse))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MediaDataParse &rArr; PhbCB &rArr; ble_media_string_send
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParseHandler
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhbCB
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
</UL>

<P><STRONG><a name="[318]"></a>MediaDataParseHandler</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, ble_media.o(i.MediaDataParseHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MediaDataParseHandler &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_media_on_ble_evt
</UL>

<P><STRONG><a name="[313]"></a>MemAlloc_CallerInfo</STRONG> (Thumb, 270 bytes, Stack size 32 bytes, phonehandler.o(i.MemAlloc_CallerInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = MemAlloc_CallerInfo &rArr; SaveCallerIDToBuf &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMalloc
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCallerIDToBuf
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPhoneHandler
</UL>

<P><STRONG><a name="[31a]"></a>MemFree_CallerInfo</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, phonehandler.o(i.MemFree_CallerInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = MemFree_CallerInfo &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
</UL>

<P><STRONG><a name="[ab]"></a>MenuOrderCmdCB</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.MenuOrderCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = MenuOrderCmdCB &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMenuHandler
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[168]"></a>MisscallPollGetInfo</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bletask.o(i.MisscallPollGetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = MisscallPollGetInfo &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
</UL>

<P><STRONG><a name="[40]"></a>MissedCallAlertHandler</STRONG> (Thumb, 442 bytes, Stack size 56 bytes, alarmhandler.o(i.MissedCallAlertHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = MissedCallAlertHandler &rArr; ReadAncsMsg_ToKl17 &rArr; Flash_Display_Ancs_LayOut &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsMsg_ToKl17
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 2]<UL><LI> alarmhandler.o(i.MissedCallHomePageHandler)
<LI> alarmhandler.o(i.NotificationBoxHandler)
</UL>
<P><STRONG><a name="[61]"></a>MissedCallHomePageHandler</STRONG> (Thumb, 262 bytes, Stack size 16 bytes, alarmhandler.o(i.MissedCallHomePageHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = MissedCallHomePageHandler &rArr; LCD_MsgInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler_WithoutDisplay
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MsgInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[af]"></a>MotoOrderValueCB</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.MotoOrderValueCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = MotoOrderValueCB &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[1b4]"></a>MotoRun</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, motor.o(i.MotoRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = MotoRun &rArr; MotorRunTime &rArr; MotorRepeatRun &rArr; StopMotorRunTime &rArr; Set_Motor_LevelLow &rArr; PWM_SetValue &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRunTime
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialHomePageHandler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SitRemindHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHomePageHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallHomePageHandler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrRemindHandler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoalOver_Handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHomePageHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHomePageHandler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtBleDisconnectHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_ShowPhoneSoundStatus
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSleep_Handler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VirateHandler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialMessageHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallAlertHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHandler
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoVibrationIntensityCB
</UL>

<P><STRONG><a name="[b4]"></a>MotoVibrationIntensityCB</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.MotoVibrationIntensityCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = MotoVibrationIntensityCB &rArr; Save_Motor_Level &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Motor_Level
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Motor_Level
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[2e8]"></a>MotorRepeatRun</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, motor.o(i.MotorRepeatRun))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = MotorRepeatRun &rArr; StopMotorRunTime &rArr; Set_Motor_LevelLow &rArr; PWM_SetValue &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHwTaskId
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Motor_LevelLow
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Motor_Level
</UL>
<BR>[Called By]<UL><LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRunTime
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
</UL>

<P><STRONG><a name="[31b]"></a>MotorRunTime</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, motor.o(i.MotorRunTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = MotorRunTime &rArr; MotorRepeatRun &rArr; StopMotorRunTime &rArr; Set_Motor_LevelLow &rArr; PWM_SetValue &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHwTaskId
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRepeatRun
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_ccid_command
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
</UL>

<P><STRONG><a name="[e9]"></a>MotorTest</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.MotorTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = MotorTest &rArr; SetFactoryStandbyTime &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Motor_LevelLow
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Motor_Level
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFactoryStandbyTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[23]"></a>MusicHandler</STRONG> (Thumb, 354 bytes, Stack size 16 bytes, alarmhandler.o(i.MusicHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 804<LI>Call Chain = MusicHandler &rArr; ShowMusic &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicSetting
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnicode_Stop
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMusicControl
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMusic
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.AppsBoxHandler)
</UL>
<P><STRONG><a name="[31e]"></a>MusicSetting</STRONG> (Thumb, 118 bytes, Stack size 24 bytes, ble_media.o(i.MusicSetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MusicSetting &rArr; ble_media_string_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_media_string_send
</UL>
<BR>[Called By]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMusic
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicHandler
</UL>

<P><STRONG><a name="[da]"></a>MusicSettingsCmdCB</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.MusicSettingsCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = MusicSettingsCmdCB &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[e2]"></a>NFCTest</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.NFCTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = NFCTest &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAppTaskMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[321]"></a>NeedSetDisplySportData</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, datastoreinside.o(i.NeedSetDisplySportData))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = NeedSetDisplySportData &rArr; StoreSportDataToFlash &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportOverviewHandler
</UL>

<P><STRONG><a name="[43]"></a>NoNewNotificationHandler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, alarmhandler.o(i.NoNewNotificationHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = NoNewNotificationHandler &rArr; ShowNoNewNotifications &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNoNewNotifications
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.NotificationBoxHandler)
</UL>
<P><STRONG><a name="[28]"></a>NoReminderHandler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, alarmhandler.o(i.NoReminderHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = NoReminderHandler &rArr; ShowNoNewReminders &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNoNewReminders
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.AppsBoxHandler)
</UL>
<P><STRONG><a name="[307]"></a>NordicPM</STRONG> (Thumb, 142 bytes, Stack size 32 bytes, kl17cmdpackage.o(i.NordicPM))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartKeyScan
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelSendSuspendEvent
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetScanKeyValidFlag
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_resume
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Sleep
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_LCD_Enable
</UL>

<P><STRONG><a name="[cd]"></a>NoticeNumberCB</STRONG> (Thumb, 370 bytes, Stack size 24 bytes, neul18cmdpackage.o(i.NoticeNumberCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 580<LI>Call Chain = NoticeNumberCB &rArr; SaveAncsToBuf_ForAndroid &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeDisplayStateChange
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf_ForAndroid
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAndroidSocialType
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>NotificationBoxHandler</STRONG> (Thumb, 246 bytes, Stack size 16 bytes, alarmhandler.o(i.NotificationBoxHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = NotificationBoxHandler &rArr; ShowNotificationMenu &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNotificationMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.NotificationMmenuHandler)
</UL>
<P><STRONG><a name="[3a]"></a>NotificationMmenuHandler</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, alarmhandler.o(i.NotificationMmenuHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = NotificationMmenuHandler &rArr; ShowMainMenu &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMenuHandler
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.LoadMenuHandler)
</UL>
<P><STRONG><a name="[f9]"></a>NotifyBc5BtInfoCB</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, bc5cmdpackage.o(i.NotifyBc5BtInfoCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = NotifyBc5BtInfoCB &rArr; BC5_SetVolumeCmd &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetRingModeCmd
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetVolumeCmd
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_volume_level
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetTonesCmd
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_Response
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[fb]"></a>NotifyBc5CallerInfoCB</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, bc5cmdpackage.o(i.NotifyBc5CallerInfoCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = NotifyBc5CallerInfoCB &rArr; LoadPhoneHandler &rArr; MemAlloc_CallerInfo &rArr; SaveCallerIDToBuf &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPhoneHandler
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallNoticePhoneHandlerOutHandler
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckAndReplaceUnknownNumber
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[fa]"></a>NotifyBc5PhoneInfoCB</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.NotifyBc5PhoneInfoCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = NotifyBc5PhoneInfoCB &rArr; BC5_TO_CC2540_CallState &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_TO_CC2540_CallState
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_Response
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[fc]"></a>NotifyBc5SiriInfoCB</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.NotifyBc5SiriInfoCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = NotifyBc5SiriInfoCB &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[5a]"></a>OtaHandler</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, alarmhandler.o(i.OtaHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 372<LI>Call Chain = OtaHandler &rArr; OtaProgMsg &rArr; ShowOtaLogo &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaProgMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[327]"></a>OtaProgMsg</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.OtaProgMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 364<LI>Call Chain = OtaProgMsg &rArr; ShowOtaLogo &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHwTaskId
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowOtaLogo
<LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCRCFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaHandler
</UL>

<P><STRONG><a name="[32a]"></a>OtaSendCmd</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, protocol.o(i.OtaSendCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OtaSendCmd &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowOtaResult
</UL>

<P><STRONG><a name="[32b]"></a>Ota_Prepare</STRONG> (Thumb, 236 bytes, Stack size 72 bytes, datastoreinside.o(i.Ota_Prepare))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = Ota_Prepare &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgMsgCmdCB
</UL>

<P><STRONG><a name="[32c]"></a>PWM_Disable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, pwm.o(i.PWM_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = PWM_Disable &rArr; app_pwm_uninit &rArr; pwm_dealloc &rArr; nrf_drv_ppi_group_free
</UL>
<BR>[Calls]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_uninit
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSuspend
</UL>

<P><STRONG><a name="[32e]"></a>PWM_Enable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pwm.o(i.PWM_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = PWM_Enable &rArr; PWM_init &rArr; app_pwm_init &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_init
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResume
</UL>

<P><STRONG><a name="[32f]"></a>PWM_SetValue</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pwm.o(i.PWM_SetValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = PWM_SetValue &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_set
</UL>
<BR>[Called By]<UL><LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Motor_LevelLow
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Motor_Level
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Motor_Level
</UL>

<P><STRONG><a name="[2fb]"></a>PWM_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, pwm.o(i.PWM_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = PWM_init &rArr; app_pwm_init &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_enable
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_set
</UL>
<BR>[Called By]<UL><LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMotorVibrate
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Enable
</UL>

<P><STRONG><a name="[46]"></a>PWM_ready_callback</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, pwm.o(i.PWM_ready_callback))
<BR>[Address Reference Count : 1]<UL><LI> pwm.o(i.PWM_init)
</UL>
<P><STRONG><a name="[d9]"></a>PayPassthroughFromApp</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.PayPassthroughFromApp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PayPassthroughFromApp &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHwTaskId
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[b6]"></a>PersonInitCmdCB</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.PersonInitCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = PersonInitCmdCB &rArr; SetUserInfo &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUserInfo
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[317]"></a>PhbCB</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ble_media.o(i.PhbCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = PhbCB &rArr; ble_media_string_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_media_string_send
</UL>
<BR>[Called By]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaDataParse
</UL>

<P><STRONG><a name="[de]"></a>PhoneBookCB</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.PhoneBookCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = PhoneBookCB &rArr; SetPhBok_Flag &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhBok_Flag
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneBookToBuf
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitPhoneBookBuf
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPhoneBookFlash
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>PhoneCallOut_Handler</STRONG> (Thumb, 566 bytes, Stack size 32 bytes, phonehandler.o(i.PhoneCallOut_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = PhoneCallOut_Handler &rArr; PhoneDisplay &rArr; LCD_MainDataInterface_SetBL_Step &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutTheHandlerOnTop
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandlerMsg
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPhoneHandler
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_TO_CC2540_CallState
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadVolumeHandler
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetCallOpCmd
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDisplay
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemFree_CallerInfo
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsDelaySet
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsDelaySend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phonehandler.o(i.LoadPhoneHandler)
</UL>
<P><STRONG><a name="[3d]"></a>PhoneCall_Handler</STRONG> (Thumb, 744 bytes, Stack size 32 bytes, phonehandler.o(i.PhoneCall_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = PhoneCall_Handler &rArr; PhoneDisplay &rArr; LCD_MainDataInterface_SetBL_Step &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Sleep
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutTheHandlerOnTop
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_TO_CC2540_CallState
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetVolumeCmd
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_volume_level
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadVolumeHandler
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetCallOpCmd
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Switch_Call_Time
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDisplay
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemFree_CallerInfo
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayPhoneCallTime
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_ShowPhoneMicStatus
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsDelaySet
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsDelaySend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phonehandler.o(i.LoadPhoneHandler)
</UL>
<P><STRONG><a name="[47]"></a>PhoneDialInCall_Handler</STRONG> (Thumb, 434 bytes, Stack size 64 bytes, phonehandler.o(i.PhoneDialInCall_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = PhoneDialInCall_Handler &rArr; ShowPhoneDialNumber_Incall &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Sleep
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneDial_Incall
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneDialNumber_Incall
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneDialIncallNumber_Recover
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPhoneDialIncallNumber_Fade
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SendDtmfNumber
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phonehandler.o(i.PhoneCall_Handler)
</UL>
<P><STRONG><a name="[337]"></a>PhoneDisplay</STRONG> (Thumb, 274 bytes, Stack size 168 bytes, phonehandler.o(i.PhoneDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = PhoneDisplay &rArr; LCD_MainDataInterface_SetBL_Step &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface_SetBL_Step
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
</UL>

<P><STRONG><a name="[3e]"></a>PhoneRing_Handler</STRONG> (Thumb, 692 bytes, Stack size 32 bytes, phonehandler.o(i.PhoneRing_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = PhoneRing_Handler &rArr; PhoneDisplay &rArr; LCD_MainDataInterface_SetBL_Step &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Sleep
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PutTheHandlerOnTop
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandlerMsg
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPhoneHandler
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_TO_CC2540_CallState
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetStopRingToneCmd
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetCallOpCmd
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDisplay
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemFree_CallerInfo
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_ShowPhoneSoundStatus
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsDelaySet
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsDelaySend
</UL>
<BR>[Address Reference Count : 1]<UL><LI> phonehandler.o(i.LoadPhoneHandler)
</UL>
<P><STRONG><a name="[e8]"></a>PowOFFSystemTest</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.PowOFFSystemTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = PowOFFSystemTest &rArr; PowerOffSystem &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffSystem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[33e]"></a>PowerOffSystem</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, kl17cmdpackage.o(i.PowerOffSystem))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = PowerOffSystem &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupAlertHandler
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowOFFSystemTest
</UL>

<P><STRONG><a name="[4c2]"></a>PowerStateInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, displaytask.o(i.PowerStateInit))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33f]"></a>Power_Resume</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, extspiflash.o(i.Power_Resume))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Power_Resume &rArr; SPI_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Write
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ChipErase
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockGlobalBlockProtection
</UL>

<P><STRONG><a name="[343]"></a>Power_Suspend</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, extspiflash.o(i.Power_Suspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Power_Suspend &rArr; SPI_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Write
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ChipErase
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockGlobalBlockProtection
</UL>

<P><STRONG><a name="[17c]"></a>PreHandler</STRONG> (Thumb, 484 bytes, Stack size 16 bytes, apphandler.o(i.PreHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = PreHandler &rArr; RemoveSMS &rArr; ResetSMSuid &rArr; NvFlashWrite &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResume
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBrightness
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSendInfo
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveSMS
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Sleep
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelSendSuspendEvent
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsSmsGetInfo
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsScheduleGetInfo
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsRemoveFunction
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsMisscalledGetInfo
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsIncomingcalledGetInfo
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsEmailGetInfo
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppEventHandler
</UL>

<P><STRONG><a name="[336]"></a>PutTheHandlerOnTop</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, apphandler.o(i.PutTheHandlerOnTop))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PutTheHandlerOnTop
</UL>
<BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
</UL>

<P><STRONG><a name="[3da]"></a>QQSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bletask.o(i.QQSet))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[215]"></a>READ_OTA_INFO</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, datastoreinside.o(i.READ_OTA_INFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = READ_OTA_INFO &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_update
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOtaSuccessFlag
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateTP
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateKl17
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateAS7000
</UL>

<P><STRONG><a name="[347]"></a>READ_STEP_SLEEP_SUM</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, datastoreinside.o(i.READ_STEP_SLEEP_SUM))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = READ_STEP_SLEEP_SUM &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
</UL>

<P><STRONG><a name="[348]"></a>READ_USER_FLAG</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, datastoreinside.o(i.READ_USER_FLAG))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = READ_USER_FLAG &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartBc5ReconnectFlag
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
</UL>

<P><STRONG><a name="[349]"></a>READ_USER_PARAMETER</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, datastoreinside.o(i.READ_USER_PARAMETER))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = READ_USER_PARAMETER &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
</UL>

<P><STRONG><a name="[16]"></a>RTC1_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, app_timer.o(i.RTC1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = RTC1_IRQHandler &rArr; timer_timeouts_check
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[25a]"></a>ReadAncsMsg_ToKl17</STRONG> (Thumb, 224 bytes, Stack size 80 bytes, datastoreinside.o(i.ReadAncsMsg_ToKl17))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = ReadAncsMsg_ToKl17 &rArr; Flash_Display_Ancs_LayOut &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Display_Ancs_LayOut
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReadPos
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallHandler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialMessageHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallAlertHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHandler
</UL>

<P><STRONG><a name="[34c]"></a>ReadAncsMsg_ToKl17_SOCIAL</STRONG> (Thumb, 216 bytes, Stack size 80 bytes, datastoreinside.o(i.ReadAncsMsg_ToKl17_SOCIAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = ReadAncsMsg_ToKl17_SOCIAL &rArr; Flash_Display_Ancs_LayOut &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Display_Ancs_LayOut
<LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReadPos_SOCIAL
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHandler
</UL>

<P><STRONG><a name="[14e]"></a>ReadData_AS7000</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, as7000.o(i.ReadData_AS7000))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = ReadData_AS7000 &rArr; HRM_I2cMultipleByteRead &rArr; HRM_I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cMultipleByteRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HR_AS7000_Version
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_upgrade
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_SwapData_ExtALG
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerON_ExtALG
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_GetHeartRateData
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexStrToAS7000
</UL>

<P><STRONG><a name="[34e]"></a>ReadOtaSuccessFlag</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, datastoreinside.o(i.ReadOtaSuccessFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = ReadOtaSuccessFlag &rArr; READ_OTA_INFO &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_OTA_INFO
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d6]"></a>ReadPayAID</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.ReadPayAID))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ReadPayAID &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHwTaskId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[d7]"></a>ReadPayBalance</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.ReadPayBalance))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ReadPayBalance &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHwTaskId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[d8]"></a>ReadPayRecords</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.ReadPayRecords))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ReadPayRecords &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[10e]"></a>ReadWatchId</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, datastoreinside.o(i.ReadWatchId))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = ReadWatchId &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAncsSmsParameter
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSettingApps
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSetUp
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWatchIdCmdCB
</UL>

<P><STRONG><a name="[49]"></a>RecordWorkDetailHandler</STRONG> (Thumb, 210 bytes, Stack size 32 bytes, alarmhandler.o(i.RecordWorkDetailHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 724<LI>Call Chain = RecordWorkDetailHandler &rArr; ShowRecordResult &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRecordResult
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.RecordWorkHandler)
</UL>
<P><STRONG><a name="[4a]"></a>RecordWorkHandler</STRONG> (Thumb, 554 bytes, Stack size 24 bytes, alarmhandler.o(i.RecordWorkHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = RecordWorkHandler &rArr; ShowRecordWorkoutsRUN &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsGetSysTick
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrValueValid
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrGetValue
<LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRecordgo
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRecordWorkoutsRUN
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopRecordWork
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartRecordWork
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.RecordWorkoutsMmenuHandler)
</UL>
<P><STRONG><a name="[356]"></a>RecordWorkUploadData</STRONG> (Thumb, 196 bytes, Stack size 56 bytes, steptask.o(i.RecordWorkUploadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = RecordWorkUploadData &rArr; SaveRecordWork &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecordWorkDataCmd
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRecordWork
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecordWorkData
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadRecordWorkCmdCB
</UL>

<P><STRONG><a name="[38]"></a>RecordWorkoutsMmenuHandler</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, alarmhandler.o(i.RecordWorkoutsMmenuHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = RecordWorkoutsMmenuHandler &rArr; ShowMainMenu &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMenuHandler
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.LoadMenuHandler)
</UL>
<P><STRONG><a name="[359]"></a>ReflashAncsCount</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, datastoreinside.o(i.ReflashAncsCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ReflashAncsCount &rArr; GetAncsMsgLayOut
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNotificationMenu
</UL>

<P><STRONG><a name="[300]"></a>RefreshBatteryInfo</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, ui.o(i.RefreshBatteryInfo))
<BR><BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStandby
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowUserRemind
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowShortCut
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MsgInterface
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceBatTimeDis
</UL>

<P><STRONG><a name="[35a]"></a>RefreshTimeUIFun</STRONG> (Thumb, 118 bytes, Stack size 32 bytes, ui.o(i.RefreshTimeUIFun))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = RefreshTimeUIFun &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrIsRunning
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_encode
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Handler
</UL>

<P><STRONG><a name="[5b]"></a>RemindHandler</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, alarmhandler.o(i.RemindHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = RemindHandler &rArr; ShowWakeup &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnicode_Stop
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopSecondRemind
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWakeup
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowUserRemind
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSports
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleeping
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMeeting
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMedicine
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowEat
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindsEvent
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLineUnicode
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[27]"></a>RemindViewHandler</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, alarmhandler.o(i.RemindViewHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = RemindViewHandler &rArr; ShowRemindList &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRemindList
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindDisplay
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckRemindNum
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.AppsBoxHandler)
</UL>
<P><STRONG><a name="[d3]"></a>ReminderCmdCB</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.ReminderCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = ReminderCmdCB &rArr; RemindsEdit &rArr; SetRemindData &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllReminders
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsUploadAll
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsEdit
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsDel
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsAdd
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[d2]"></a>ReminderNumberCmdCB</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.ReminderNumberCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = ReminderNumberCmdCB &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[36a]"></a>ReminderSendData</STRONG> (Thumb, 88 bytes, Stack size 56 bytes, neul18cmdpackage.o(i.ReminderSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ReminderSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwSendDataToBt
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsUploadAll
</UL>

<P><STRONG><a name="[366]"></a>RemindsAdd</STRONG> (Thumb, 192 bytes, Stack size 64 bytes, reminder.o(i.RemindsAdd))
<BR><BR>[Stack]<UL><LI>Max Depth = 820<LI>Call Chain = RemindsAdd &rArr; SetRemindData &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRemindData
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindFreePage
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsRemindsCanBeAdd
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReminderCmdCB
</UL>

<P><STRONG><a name="[209]"></a>RemindsCompCheck</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, reminder.o(i.RemindsCompCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = RemindsCompCheck &rArr; GetMonthWeekDays &rArr; GetYearWeekDays &rArr; GetYearDays &rArr; IsLeap &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthWeekDays
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckMinuteRemindEvent
</UL>

<P><STRONG><a name="[368]"></a>RemindsDel</STRONG> (Thumb, 148 bytes, Stack size 64 bytes, reminder.o(i.RemindsDel))
<BR><BR>[Stack]<UL><LI>Max Depth = 820<LI>Call Chain = RemindsDel &rArr; SetRemindData &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsWatchDogFeed
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRemindData
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReminderCmdCB
</UL>

<P><STRONG><a name="[367]"></a>RemindsEdit</STRONG> (Thumb, 198 bytes, Stack size 72 bytes, reminder.o(i.RemindsEdit))
<BR><BR>[Stack]<UL><LI>Max Depth = 828<LI>Call Chain = RemindsEdit &rArr; SetRemindData &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRemindData
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsRemindsCanBeAdd
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReminderCmdCB
</UL>

<P><STRONG><a name="[36d]"></a>RemindsInit</STRONG> (Thumb, 82 bytes, Stack size 48 bytes, reminder.o(i.RemindsInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = RemindsInit &rArr; GetRemindData &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindData
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[369]"></a>RemindsUploadAll</STRONG> (Thumb, 112 bytes, Stack size 80 bytes, reminder.o(i.RemindsUploadAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = RemindsUploadAll &rArr; GetRemindData &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindData
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReminderSendData
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReminderCmdCB
</UL>

<P><STRONG><a name="[344]"></a>RemoveSMS</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, bletask.o(i.RemoveSMS))
<BR><BR>[Stack]<UL><LI>Max Depth = 740<LI>Call Chain = RemoveSMS &rArr; ResetSMSuid &rArr; NvFlashWrite &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSMSuid
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QuerySMSOffset
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSenderInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
</UL>

<P><STRONG><a name="[114]"></a>ResetBoard</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hwtask.o(i.ResetBoard))
<BR><BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsUid
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetHandler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchIDTest
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlashEraseSaveFlag
</UL>

<P><STRONG><a name="[4d]"></a>ResetHandler</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, alarmhandler.o(i.ResetHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = ResetHandler &rArr; ShowReset &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_FLAG
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBandInfo
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOffBle
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetBoard
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.SettingHandler)
</UL>
<P><STRONG><a name="[370]"></a>ResetRtcClock</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, clockdriver.o(i.ResetRtcClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = ResetRtcClock &rArr; GetFlashRtcClock &rArr; GetEmptyRtcClockSaveIndex &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_SetUTCTime
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashRtcClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[345]"></a>ResetSendInfo</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bletask.o(i.ResetSendInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 732<LI>Call Chain = ResetSendInfo &rArr; ResetSenderInfo &rArr; NvFlashWrite &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSenderInfo
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSenderID
</UL>
<BR>[Called By]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
</UL>

<P><STRONG><a name="[4e]"></a>RestartHandler</STRONG> (Thumb, 186 bytes, Stack size 16 bytes, alarmhandler.o(i.RestartHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = RestartHandler &rArr; ShowRestart &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOffBle
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetBoard
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRestart
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.SettingHandler)
</UL>
<P><STRONG><a name="[28a]"></a>ResumeBacklight</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, kl17cmdpackage.o(i.ResumeBacklight))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = ResumeBacklight &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface_SetBL_Step
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MsgInterface
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Display_Ancs_LayOut
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>

<P><STRONG><a name="[41]"></a>SMSHandler</STRONG> (Thumb, 664 bytes, Stack size 56 bytes, alarmhandler.o(i.SMSHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = SMSHandler &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSocialNotifEventFlag
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSMSOffset
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsMsg_ToKl17
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForAncsHandlerEnd
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAncsMsg
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 2]<UL><LI> alarmhandler.o(i.NotificationBoxHandler)
<LI> alarmhandler.o(i.SMSHomePageHandler)
</UL>
<P><STRONG><a name="[60]"></a>SMSHomePageHandler</STRONG> (Thumb, 268 bytes, Stack size 16 bytes, alarmhandler.o(i.SMSHomePageHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = SMSHomePageHandler &rArr; LCD_MsgInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler_WithoutDisplay
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSocialNotifEventFlag
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MsgInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[a]"></a>SPI1_TWI1_IRQHandler</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, spi_slave.o(i.SPI1_TWI1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI1_TWI1_IRQHandler &rArr; sm_state_change &rArr; state_entry_action_execute
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[287]"></a>SPI_LCD_Enable</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, kl17cmdpackage.o(i.SPI_LCD_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 332<LI>Call Chain = SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NordicPM
</UL>
<BR>[Called By]<UL><LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface_SetBL_Step
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MsgInterface
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Display_Ancs_LayOut
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>

<P><STRONG><a name="[374]"></a>SPI_Read</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, extspiflash.o(i.SPI_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatusRegister
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_TP_Firmware
</UL>

<P><STRONG><a name="[341]"></a>SPI_Write</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, extspiflash.o(i.SPI_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ChipErase
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatusRegister
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockGlobalBlockProtection
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_TP_Firmware
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PageWrite
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Suspend
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Resume
</UL>

<P><STRONG><a name="[19]"></a>SWI0_IRQHandler</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, app_timer.o(i.SWI0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = SWI0_IRQHandler &rArr; list_insertions_handler &rArr; timer_list_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_deletions_handler
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;expired_timers_handler
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;elapsed_ticks_acquire
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SWI2_IRQHandler</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, softdevice_handler.o(i.SWI2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SWI2_IRQHandler &rArr; intern_softdevice_events_execute
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[175]"></a>SaveAncsMsg</STRONG> (Thumb, 196 bytes, Stack size 40 bytes, datastoreinside.o(i.SaveAncsMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncs_SOCIAL
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanWpos
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Add_Count_SOCIAL
</UL>
<BR>[Called By]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCallerIDToBuf
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsSaveToFlash
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf_ForAndroid_SmsAndCall
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToBuf_ForAndroid
</UL>

<P><STRONG><a name="[2a8]"></a>SaveAncsToBuf</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, bletask.o(i.SaveAncsToBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SaveAncsToBuf &rArr; InitAncsBuf
</UL>
<BR>[Calls]<UL><LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAncsBuf
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
</UL>

<P><STRONG><a name="[17a]"></a>SaveAncsToBuf_ForAndroid</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, bletask.o(i.SaveAncsToBuf_ForAndroid))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = SaveAncsToBuf_ForAndroid &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsMsg
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAncsBuf
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Format_Gmail
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoticeNumberCB
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AndroideScheduleCB
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AndroideEmailCB
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AndroidSocialCB
</UL>

<P><STRONG><a name="[179]"></a>SaveAncsToBuf_ForAndroid_SmsAndCall</STRONG> (Thumb, 112 bytes, Stack size 40 bytes, bletask.o(i.SaveAncsToBuf_ForAndroid_SmsAndCall))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = SaveAncsToBuf_ForAndroid_SmsAndCall &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsMsg
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAncsBuf_SmsAndCall
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Format_Gmail
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AndroidSmsCallCB
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AndroidCallCB
</UL>

<P><STRONG><a name="[2a9]"></a>SaveAncsToFlash_SendMsg</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bletask.o(i.SaveAncsToFlash_SendMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SaveAncsToFlash_SendMsg &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
</UL>

<P><STRONG><a name="[37b]"></a>SaveAncs_SOCIAL</STRONG> (Thumb, 178 bytes, Stack size 40 bytes, datastoreinside.o(i.SaveAncs_SOCIAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanWpos_SOCIAL
</UL>
<BR>[Called By]<UL><LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsMsg
</UL>

<P><STRONG><a name="[1fd]"></a>SaveCallerIDToBuf</STRONG> (Thumb, 258 bytes, Stack size 48 bytes, phonehandler.o(i.SaveCallerIDToBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = SaveCallerIDToBuf &rArr; SaveAncsMsg &rArr; SaveAncs_SOCIAL &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsMsg
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemAlloc_CallerInfo
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallNoticePhoneHandlerOutHandler
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckAndReplaceUnknownNumber
</UL>

<P><STRONG><a name="[37f]"></a>SavePBook_Cnt_toFlash</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, datastoreinside.o(i.SavePBook_Cnt_toFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = SavePBook_Cnt_toFlash &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePBookto_Flash
</UL>

<P><STRONG><a name="[380]"></a>SavePBook_ID_toFlash</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, datastoreinside.o(i.SavePBook_ID_toFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = SavePBook_ID_toFlash &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePBookto_Flash
</UL>

<P><STRONG><a name="[381]"></a>SavePBook_NumName_toFlash</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, datastoreinside.o(i.SavePBook_NumName_toFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 444<LI>Call Chain = SavePBook_NumName_toFlash &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePBookto_Flash
</UL>

<P><STRONG><a name="[382]"></a>SavePBookto_Flash</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, datastoreinside.o(i.SavePBookto_Flash))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = SavePBookto_Flash &rArr; SavePBook_NumName_toFlash &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePBook_NumName_toFlash
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePBook_ID_toFlash
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePBook_Cnt_toFlash
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cnt_Wpos
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneBookToBuf
</UL>

<P><STRONG><a name="[334]"></a>SavePhoneBookToBuf</STRONG> (Thumb, 292 bytes, Stack size 40 bytes, datastoreinside.o(i.SavePhoneBookToBuf))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = SavePhoneBookToBuf &rArr; SetMaxCnt &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMaxCnt
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAndroid_iosFalg
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePBookto_Flash
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Cnt_GWpos
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CNT_GroupId
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookCB
</UL>

<P><STRONG><a name="[358]"></a>SaveRecordWork</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, alarmhandler.o(i.SaveRecordWork))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = SaveRecordWork &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecordWorkData
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkUploadData
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopRecordWork
</UL>

<P><STRONG><a name="[31d]"></a>Save_Motor_Level</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, pwm.o(i.Save_Motor_Level))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = Save_Motor_Level &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoVibrationIntensityCB
</UL>

<P><STRONG><a name="[16b]"></a>SchedulePollGetInfo</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bletask.o(i.SchedulePollGetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SchedulePollGetInfo &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
</UL>

<P><STRONG><a name="[38a]"></a>SearchForMobilePhones</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, ble_media.o(i.SearchForMobilePhones))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SearchForMobilePhones &rArr; ble_media_string_send
</UL>
<BR>[Calls]<UL><LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_media_string_send
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchingHandler
</UL>

<P><STRONG><a name="[dc]"></a>SearchForMobilePhonesCmdCB</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.SearchForMobilePhonesCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SearchForMobilePhonesCmdCB &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[26]"></a>SearchHandler</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, alarmhandler.o(i.SearchHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = SearchHandler &rArr; ShowSearch &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSearch
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.AppsBoxHandler)
</UL>
<P><STRONG><a name="[4b]"></a>SearchingHandler</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, alarmhandler.o(i.SearchingHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 668<LI>Call Chain = SearchingHandler &rArr; ShowSearching &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchForMobilePhones
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_clear_event
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSearching
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.SearchHandler)
</UL>
<P><STRONG><a name="[38d]"></a>SecondsTimer</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, secondstimer.o(i.SecondsTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = SecondsTimer &rArr; ShowTimerStatus &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTimerStatus
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSecondsTimer
</UL>

<P><STRONG><a name="[3ef]"></a>SecondsTimerOff</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, secondstimer.o(i.SecondsTimerOff))
<BR><BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
</UL>

<P><STRONG><a name="[3d5]"></a>SecondsTimerStop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, secondstimer.o(i.SecondsTimerStop))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[c6]"></a>SedentarinessRemindCB</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, neul18cmdpackage.o(i.SedentarinessRemindCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = SedentarinessRemindCB &rArr; WriteSitRemiandSetting &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSitRemiandSetting
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[2e4]"></a>SendChargeMessage</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, hwtask.o(i.SendChargeMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SendChargeMessage &rArr; SetUsbDisconnctedEvent &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUsbDisconnctedEvent
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUsbConnctedEvent
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBatteryChargeEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
</UL>

<P><STRONG><a name="[20a]"></a>SendFixedRemindMsg</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, reminder.o(i.SendFixedRemindMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SendFixedRemindMsg &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeDisplayStateChange
</UL>
<BR>[Called By]<UL><LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckMinuteRemindEvent
</UL>

<P><STRONG><a name="[170]"></a>SendGetNotifAttributesTitleCmd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bletask.o(i.SendGetNotifAttributesTitleCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SendGetNotifAttributesTitleCmd &rArr; ble_ancs_c_request_attrs &rArr; ble_ancs_get_notif_attrs &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_request_attrs
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsSmsGetInfo
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsScheduleGetInfo
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsMisscalledGetInfo
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsIncomingcalledGetInfo
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsEmailGetInfo
</UL>

<P><STRONG><a name="[2da]"></a>SendHeartRateDataCmd</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, neul18cmdpackage.o(i.SendHeartRateDataCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SendHeartRateDataCmd &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateUploadData
</UL>

<P><STRONG><a name="[176]"></a>SendMsg</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, apphandler.o(i.SendMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgSend
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AncsConnectedGetAllInfo
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAncsAppMsg
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_ccid_command
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_write
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyEventHandler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsTimerUpdate
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSendInfo
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepUploadData
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSleepMemoryFullFlag
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepUploadData
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounterWithGesture
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounter
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStepMemoryFullFlag
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkUploadData
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_touchinfo
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialHomePageHandler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor_Handler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SitRemindHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupAlertHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHomePageHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallHomePageHandler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MedalHandler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrRemindHandler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoalOver_Handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHomePageHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHomePageHandler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllHandler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtBleDisconnectHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_TO_CC2540_CallState
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsSaveToFlash
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Handler
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHeartRateMemoryFullFlag
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateUploadData
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsToFlash_SendMsg
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CLongTouch
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleTouchKey
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallNoticePhoneHandlerOutHandler
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckAndReplaceUnknownNumber
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepOverview_Handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportOverviewHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VirateHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerHandler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialMessageHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHomeHandler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkDetailHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallAlertHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitsleepmodeHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitRecordWorkOutsHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CameraHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightnessHandler
<LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notify_event_message
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBC5PhoneStateCB
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5SiriInfoCB
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5CallerInfoCB
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5BtInfoCB
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBC5AudioVolCB
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VolumeValueCB
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgMsgCmdCB
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpTest
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeOrderCmdCB
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestFactoryMode
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlashUpdateFontLib
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepContorl
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUnitFormat
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchForMobilePhonesCmdCB
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReminderCmdCB
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoticeNumberCB
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicSettingsCmdCB
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOrderCmdCB
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MedalCB
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetCmdRespond
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettingCmdCB
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateTimeSettingCmdCB
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyGoalSettingCmdCB
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BindingBeginCmdCB
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BacklightSettingCmdCB
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFixedRemindMsg
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CParse
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slideEvent
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flickRight
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flickLeft
</UL>

<P><STRONG><a name="[396]"></a>SendNormalStateToBC5</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, displaytask.o(i.SendNormalStateToBC5))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SendNormalStateToBC5 &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResume
</UL>

<P><STRONG><a name="[357]"></a>SendRecordWorkDataCmd</STRONG> (Thumb, 182 bytes, Stack size 48 bytes, neul18cmdpackage.o(i.SendRecordWorkDataCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = SendRecordWorkDataCmd &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkUploadData
</UL>

<P><STRONG><a name="[397]"></a>SendResumeEvent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, displaytask.o(i.SendResumeEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SendResumeEvent &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[1b6]"></a>SendRspCmd</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.SendRspCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = SendRspCmd &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PacketParser
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_data_Parse
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SppTransmissionCB
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchIDTest
</UL>

<P><STRONG><a name="[1b0]"></a>SendSettingFailRspCmd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, simplegattprofile.o(i.SendSettingFailRspCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SendSettingFailRspCmd &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBleTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
</UL>

<P><STRONG><a name="[1b2]"></a>SendSettingOkRspCmd</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, simplegattprofile.o(i.SendSettingOkRspCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SendSettingOkRspCmd &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBleTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
</UL>

<P><STRONG><a name="[399]"></a>SendSleepDataCmd</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, neul18cmdpackage.o(i.SendSleepDataCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = SendSleepDataCmd &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Called By]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepUploadData
</UL>

<P><STRONG><a name="[39a]"></a>SendSportDataCmd</STRONG> (Thumb, 178 bytes, Stack size 48 bytes, neul18cmdpackage.o(i.SendSportDataCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = SendSportDataCmd &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepUploadData
</UL>

<P><STRONG><a name="[1a8]"></a>SendSuspendEvent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, displaytask.o(i.SendSuspendEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SendSuspendEvent &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
</UL>

<P><STRONG><a name="[6b]"></a>SendTouchKeyMsg</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, touchkeytask.o(i.SendTouchKeyMsg))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SendTouchKeyMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgSend
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgMalloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> touchkeytask.o(i.TouchKeyInitTask)
</UL>
<P><STRONG><a name="[2a7]"></a>Send_AncsConnectedGetAllInfo</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bletask.o(i.Send_AncsConnectedGetAllInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = Send_AncsConnectedGetAllInfo &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ancs_c_evt
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[39b]"></a>SendsSuspendStateToBC5</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, displaytask.o(i.SendsSuspendStateToBC5))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SendsSuspendStateToBC5 &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSuspend
</UL>

<P><STRONG><a name="[eb]"></a>SensorTest</STRONG> (Thumb, 192 bytes, Stack size 24 bytes, neul18cmdpackage.o(i.SensorTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 324<LI>Call Chain = SensorTest &rArr; SetFactoryStandbyTime &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_z
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_y
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_x
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lis3dh_Sleep_SetConfig
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsensor_read_accel
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Sleep_SetConfig
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopStep
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStep
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFactoryStandbyTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[384]"></a>SetAndroid_iosFalg</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, datastoreinside.o(i.SetAndroid_iosFalg))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = SetAndroid_iosFalg &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneBookToBuf
</UL>

<P><STRONG><a name="[242]"></a>SetAutoSleepTime</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, steptask.o(i.SetAutoSleepTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetAutoSleepTime
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vSetAutoSleepTime
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
</UL>

<P><STRONG><a name="[f1]"></a>SetBC5AudioVollCB</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.SetBC5AudioVollCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetBC5AudioVollCB &rArr; osal_stop_timerEx &rArr; pS_OsStopTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[ef]"></a>SetBC5BtStateCB</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bc5cmdpackage.o(i.SetBC5BtStateCB))
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[f8]"></a>SetBC5DtmfNumberCB</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bc5cmdpackage.o(i.SetBC5DtmfNumberCB))
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[f7]"></a>SetBC5MicCB</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bc5cmdpackage.o(i.SetBC5MicCB))
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[f0]"></a>SetBC5PhoneStateCB</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.SetBC5PhoneStateCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SetBC5PhoneStateCB &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[f2]"></a>SetBC5RingModeCB</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.SetBC5RingModeCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetBC5RingModeCB &rArr; osal_stop_timerEx &rArr; pS_OsStopTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[f3]"></a>SetBC5StandbyCB</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.SetBC5StandbyCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetBC5StandbyCB &rArr; osal_stop_timerEx &rArr; pS_OsStopTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplayTaskId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[f5]"></a>SetBC5StartSiriCB</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.SetBC5StartSiriCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SetBC5StartSiriCB &rArr; osal_stop_timerEx &rArr; pS_OsStopTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[f4]"></a>SetBC5StopRingToneCB</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bc5cmdpackage.o(i.SetBC5StopRingToneCB))
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[f6]"></a>SetBC5TonesCB</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bc5cmdpackage.o(i.SetBC5TonesCB))
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[390]"></a>SetBatteryChargeEvent</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, hwtask.o(i.SetBatteryChargeEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetBatteryChargeEvent &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChargeMessage
</UL>

<P><STRONG><a name="[39c]"></a>SetBc5Power</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, hwtask.o(i.SetBc5Power))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SetBc5Power &rArr; UartInit_ChoosePin &rArr; InitUartBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInit_ChoosePin
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSuspend
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
</UL>

<P><STRONG><a name="[346]"></a>SetBrightness</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, ui.o(i.SetBrightness))
<BR><BR>[Stack]<UL><LI>Max Depth = 276<LI>Call Chain = SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface_NoDisplay
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
</UL>

<P><STRONG><a name="[329]"></a>SetCRCFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, bootloaderapp.o(i.SetCRCFlag))
<BR><BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaProgMsg
</UL>

<P><STRONG><a name="[267]"></a>SetDefaultGoal</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, sporthandler.o(i.SetDefaultGoal))
<BR><BR>[Stack]<UL><LI>Max Depth = 628<LI>Call Chain = SetDefaultGoal &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGoalOverRemind
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
</UL>

<P><STRONG><a name="[260]"></a>SetDeletePos</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, datastoreinside.o(i.SetDeletePos))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SetDeletePos
</UL>
<BR>[Called By]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAncsMsg
</UL>

<P><STRONG><a name="[262]"></a>SetDeletePos_SOCIAL</STRONG> (Thumb, 54 bytes, Stack size 20 bytes, datastoreinside.o(i.SetDeletePos_SOCIAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = SetDeletePos_SOCIAL
</UL>
<BR>[Called By]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAncsMsg_SOCIAL
</UL>

<P><STRONG><a name="[23d]"></a>SetDisplySportData</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, datastoreinside.o(i.SetDisplySportData))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = SetDisplySportData &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepInit
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
<LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSportData
</UL>

<P><STRONG><a name="[285]"></a>SetFactorySettingEvent</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, hwtask.o(i.SetFactorySettingEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SetFactorySettingEvent &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
</UL>
<BR>[Called By]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TestFactoryMode
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FactorySettingCmdCB
</UL>

<P><STRONG><a name="[302]"></a>SetFactoryStandbyTime</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.SetFactoryStandbyTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = SetFactoryStandbyTime &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpTest
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTest
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorTest
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDTest
</UL>

<P><STRONG><a name="[23e]"></a>SetFlashRtcClock</STRONG> (Thumb, 114 bytes, Stack size 24 bytes, clockdriver.o(i.SetFlashRtcClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = SetFlashRtcClock &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
</UL>

<P><STRONG><a name="[39f]"></a>SetFlash_Freescal</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, extspiflash.o(i.SetFlash_Freescal))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = SetFlash_Freescal &rArr; Flash_Set_Access &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Set_Access
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Disable_IO
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ChipErase
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_TP_Firmware
</UL>

<P><STRONG><a name="[3a0]"></a>SetFlash_Nordic</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, extspiflash.o(i.SetFlash_Nordic))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = SetFlash_Nordic &rArr; Flash_Set_Access &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Set_Access
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Enable_IO
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ChipErase
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_TP_Firmware
</UL>

<P><STRONG><a name="[257]"></a>SetGoalOverRemind</STRONG> (Thumb, 186 bytes, Stack size 40 bytes, sporthandler.o(i.SetGoalOverRemind))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = SetGoalOverRemind &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDefaultGoal
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUnitFormat
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyGoalSettingCmdCB
</UL>

<P><STRONG><a name="[232]"></a>SetHeartRateMemoryFullFlag</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, heartratetask.o(i.SetHeartRateMemoryFullFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SetHeartRateMemoryFullFlag &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreHeartRateData
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearHeartRateDataCB
</UL>

<P><STRONG><a name="[b0]"></a>SetLanguageFormat</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.SetLanguageFormat))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = SetLanguageFormat &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[388]"></a>SetMaxCnt</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, datastoreinside.o(i.SetMaxCnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = SetMaxCnt &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneBookToBuf
</UL>

<P><STRONG><a name="[335]"></a>SetPhBok_Flag</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, datastoreinside.o(i.SetPhBok_Flag))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = SetPhBok_Flag &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneBookCB
</UL>

<P><STRONG><a name="[34b]"></a>SetReadPos</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, datastoreinside.o(i.SetReadPos))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SetReadPos &rArr; UpdateSocialCount &rArr; ForAncsHandlerEnd_SOCIAL
</UL>
<BR>[Calls]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSocialCount
</UL>
<BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsMsg_ToKl17
</UL>

<P><STRONG><a name="[34d]"></a>SetReadPos_SOCIAL</STRONG> (Thumb, 60 bytes, Stack size 28 bytes, datastoreinside.o(i.SetReadPos_SOCIAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = SetReadPos_SOCIAL &rArr; UpdateSocialCount_SOCIAL &rArr; ForAncsHandlerEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateSocialCount_SOCIAL
</UL>
<BR>[Called By]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsMsg_ToKl17_SOCIAL
</UL>

<P><STRONG><a name="[36c]"></a>SetRemindData</STRONG> (Thumb, 70 bytes, Stack size 320 bytes, datastoreinside.o(i.SetRemindData))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = SetRemindData &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsEdit
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsDel
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsAdd
</UL>

<P><STRONG><a name="[325]"></a>SetScanKeyValidFlag</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, displaytask.o(i.SetScanKeyValidFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = SetScanKeyValidFlag &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NordicPM
</UL>

<P><STRONG><a name="[239]"></a>SetSleepMemoryFullFlag</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, sleeptask.o(i.SetSleepMemoryFullFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SetSleepMemoryFullFlag &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepData
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSleepDataCB
</UL>

<P><STRONG><a name="[c0]"></a>SetSleepModeCB</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.SetSleepModeCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = SetSleepModeCB &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[161]"></a>SetSocialNotifEventFlag</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, bletask.o(i.SetSocialNotifEventFlag))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsRemoveFunction
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeReceiveBuff
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialHomePageHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHomePageHandler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialMessageHandler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
</UL>

<P><STRONG><a name="[235]"></a>SetStepMemoryFullFlag</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, steptask.o(i.SetStepMemoryFullFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SetStepMemoryFullFlag &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSportDataCB
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearRecordWorkDataCB
</UL>

<P><STRONG><a name="[17f]"></a>SetSystemSuspendTime</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, standbyhandler.o(i.SetSystemSuspendTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 292<LI>Call Chain = SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBrightness
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyEventHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Sleep
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemFactoryModeSet
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_touchinfo
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOn
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportMmenuHandler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialHomePageHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMmenuHandler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SitRemindHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupAlertHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHomePageHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkoutsMmenuHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationMmenuHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallHomePageHandler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MedalHandler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrRemindHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRMmenuHandler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoalOver_Handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHomePageHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHomePageHandler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllHandler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtBleDisconnectHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppsMmenuHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Handler
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderDispatch
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalKeyPoll
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportOverviewHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristWakeUpHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VirateHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerHandler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialMessageHandler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchingHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindViewHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkDetailHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBoxHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoReminderHandler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoNewNotificationHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallAlertHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitsleepmodeHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitRecordWorkOutsHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHandler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAncsHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CameraHandler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppsBoxHandler
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NordicPM
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFactoryStandbyTime
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFCTest
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CSN
</UL>

<P><STRONG><a name="[b1]"></a>SetUnitFormat</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.SetUnitFormat))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = SetUnitFormat &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGoalOverRemind
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[391]"></a>SetUsbConnctedEvent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, hwtask.o(i.SetUsbConnctedEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetUsbConnctedEvent &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChargeMessage
</UL>

<P><STRONG><a name="[392]"></a>SetUsbDisconnctedEvent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, hwtask.o(i.SetUsbDisconnctedEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SetUsbDisconnctedEvent &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
</UL>
<BR>[Called By]<UL><LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendChargeMessage
</UL>

<P><STRONG><a name="[333]"></a>SetUserInfo</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, datastoreinside.o(i.SetUserInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = SetUserInfo &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
</UL>
<BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgMsgCmdCB
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PersonInitCmdCB
</UL>

<P><STRONG><a name="[271]"></a>Set_Motor_Level</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, pwm.o(i.Set_Motor_Level))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Set_Motor_Level &rArr; PWM_SetValue &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLogo
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRepeatRun
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorTest
</UL>

<P><STRONG><a name="[270]"></a>Set_Motor_LevelLow</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, pwm.o(i.Set_Motor_LevelLow))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Set_Motor_LevelLow &rArr; PWM_SetValue &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetValue
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLogo
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRepeatRun
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorTest
</UL>

<P><STRONG><a name="[3a3]"></a>Set_OTALanguageInfo</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, kl17cmdpackage.o(i.Set_OTALanguageInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = Set_OTALanguageInfo &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOTALanguageInfo
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
</UL>

<P><STRONG><a name="[29]"></a>SettingHandler</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, alarmhandler.o(i.SettingHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = SettingHandler &rArr; ShowSettingApps &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSettingApps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.AppsBoxHandler)
</UL>
<P><STRONG><a name="[57]"></a>SetupAlertHandler</STRONG> (Thumb, 266 bytes, Stack size 24 bytes, alarmhandler.o(i.SetupAlertHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = SetupAlertHandler &rArr; StepInit &rArr; SetDisplySportData &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepInit
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOnBle
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearInitMarkEvent
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_FLAG
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSetUp
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffSystem
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[181]"></a>ShowAppsMenu</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ui.o(i.ShowAppsMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = ShowAppsMenu &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppsBoxHandler
</UL>

<P><STRONG><a name="[3a6]"></a>ShowBatteryFull</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, ui.o(i.ShowBatteryFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = ShowBatteryFull &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBatteryStatus
</UL>

<P><STRONG><a name="[19e]"></a>ShowBatteryInfo</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowBatteryInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ShowBatteryInfo &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryHandler
</UL>

<P><STRONG><a name="[1a4]"></a>ShowBatteryLow</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, ui.o(i.ShowBatteryLow))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = ShowBatteryLow &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
</UL>

<P><STRONG><a name="[1b1]"></a>ShowBleBondFail</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowBleBondFail))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ShowBleBondFail &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
</UL>

<P><STRONG><a name="[1b3]"></a>ShowBleBondOk</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowBleBondOk))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ShowBleBondOk &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
</UL>

<P><STRONG><a name="[1b5]"></a>ShowBleBondQuery</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowBleBondQuery))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ShowBleBondQuery &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
</UL>

<P><STRONG><a name="[1dd]"></a>ShowBrightness</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, ui.o(i.ShowBrightness))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = ShowBrightness &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightnessHandler
</UL>

<P><STRONG><a name="[1e2]"></a>ShowBtDisconnected</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowBtDisconnected))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ShowBtDisconnected &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtBleDisconnectHandler
</UL>

<P><STRONG><a name="[1f3]"></a>ShowCamera</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ui.o(i.ShowCamera))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = ShowCamera &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CameraHandler
</UL>

<P><STRONG><a name="[1f4]"></a>ShowCameraCountDown</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ui.o(i.ShowCameraCountDown))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = ShowCameraCountDown &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CameraHandler
</UL>

<P><STRONG><a name="[3a7]"></a>ShowCharging</STRONG> (Thumb, 56 bytes, Stack size 32 bytes, ui.o(i.ShowCharging))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ShowCharging &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBatteryStatus
</UL>

<P><STRONG><a name="[229]"></a>ShowClearAll</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowClearAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = ShowClearAll &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllHandler
</UL>

<P><STRONG><a name="[25f]"></a>ShowDeleteAncs</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowDeleteAncs))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = ShowDeleteAncs &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAncsHandler
</UL>

<P><STRONG><a name="[315]"></a>ShowEarnedMeadalRemind</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ui.o(i.ShowEarnedMeadalRemind))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = ShowEarnedMeadalRemind &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MedalHandler
</UL>

<P><STRONG><a name="[35f]"></a>ShowEat</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ui.o(i.ShowEat))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = ShowEat &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
</UL>

<P><STRONG><a name="[281]"></a>ShowExitRecordWorkouts</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowExitRecordWorkouts))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = ShowExitRecordWorkouts &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitRecordWorkOutsHandler
</UL>

<P><STRONG><a name="[282]"></a>ShowExitSleep</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowExitSleep))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = ShowExitSleep &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSleep_Handler
</UL>

<P><STRONG><a name="[284]"></a>ShowExitSleepMode</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowExitSleepMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = ShowExitSleepMode &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitsleepmodeHandler
</UL>

<P><STRONG><a name="[2be]"></a>ShowGoalOver</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ui.o(i.ShowGoalOver))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = ShowGoalOver &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoalOver_Handler
</UL>

<P><STRONG><a name="[2e3]"></a>ShowHRAlarm</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, ui.o(i.ShowHRAlarm))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = ShowHRAlarm &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrRemindHandler
</UL>

<P><STRONG><a name="[3a8]"></a>ShowHeartRate</STRONG> (Thumb, 96 bytes, Stack size 40 bytes, ui.o(i.ShowHeartRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 676<LI>Call Chain = ShowHeartRate &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalclateWeeks
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
</UL>

<P><STRONG><a name="[19f]"></a>ShowLEDTime</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ui.o(i.ShowLEDTime))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
</UL>

<P><STRONG><a name="[303]"></a>ShowLcdTest</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ui.o(i.ShowLcdTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = ShowLcdTest &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDTest
</UL>

<P><STRONG><a name="[272]"></a>ShowLogo</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowLogo))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = ShowLogo &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLogo
</UL>

<P><STRONG><a name="[185]"></a>ShowMainMenu</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ui.o(i.ShowMainMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ShowMainMenu &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportMmenuHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMmenuHandler
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkoutsMmenuHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationMmenuHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRMmenuHandler
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppsMmenuHandler
</UL>

<P><STRONG><a name="[35e]"></a>ShowMedicine</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ui.o(i.ShowMedicine))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = ShowMedicine &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
</UL>

<P><STRONG><a name="[363]"></a>ShowMeeting</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ui.o(i.ShowMeeting))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = ShowMeeting &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
</UL>

<P><STRONG><a name="[3a9]"></a>ShowMoving</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowMoving))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ShowMoving &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SitRemindHandler
</UL>

<P><STRONG><a name="[320]"></a>ShowMusic</STRONG> (Thumb, 116 bytes, Stack size 152 bytes, ui.o(i.ShowMusic))
<BR><BR>[Stack]<UL><LI>Max Depth = 788<LI>Call Chain = ShowMusic &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicSetting
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicHandler
</UL>

<P><STRONG><a name="[31f]"></a>ShowMusicControl</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, ui.o(i.ShowMusicControl))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = ShowMusicControl &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicHandler
</UL>

<P><STRONG><a name="[322]"></a>ShowNoNewNotifications</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowNoNewNotifications))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = ShowNoNewNotifications &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoNewNotificationHandler
</UL>

<P><STRONG><a name="[323]"></a>ShowNoNewReminders</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowNoNewReminders))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = ShowNoNewReminders &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoReminderHandler
</UL>

<P><STRONG><a name="[326]"></a>ShowNotificationMenu</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, ui.o(i.ShowNotificationMenu))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = ShowNotificationMenu &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Total_Count_SOCIAL
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReflashAncsCount
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBoxHandler
</UL>

<P><STRONG><a name="[328]"></a>ShowOtaLogo</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowOtaLogo))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = ShowOtaLogo &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaProgMsg
</UL>

<P><STRONG><a name="[3ab]"></a>ShowOtaResult</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ui.o(i.ShowOtaResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = ShowOtaResult &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaSendCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[33b]"></a>ShowPhoneDialIncallNumber_Fade</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ui.o(i.ShowPhoneDialIncallNumber_Fade))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = ShowPhoneDialIncallNumber_Fade &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
</UL>

<P><STRONG><a name="[33c]"></a>ShowPhoneDialIncallNumber_Recover</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ui.o(i.ShowPhoneDialIncallNumber_Recover))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = ShowPhoneDialIncallNumber_Recover &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
</UL>

<P><STRONG><a name="[33a]"></a>ShowPhoneDialNumber_Incall</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ui.o(i.ShowPhoneDialNumber_Incall))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = ShowPhoneDialNumber_Incall &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
</UL>

<P><STRONG><a name="[33d]"></a>ShowPhoneDial_Incall</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowPhoneDial_Incall))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = ShowPhoneDial_Incall &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
</UL>

<P><STRONG><a name="[1f7]"></a>ShowPhoneMic</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, phonehandler.o(i.ShowPhoneMic))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = ShowPhoneMic &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_ShowPhoneMicStatus
</UL>

<P><STRONG><a name="[1f9]"></a>ShowPhoneSound</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, phonehandler.o(i.ShowPhoneSound))
<BR><BR>[Stack]<UL><LI>Max Depth = 500<LI>Call Chain = ShowPhoneSound &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_ShowPhoneSoundStatus
</UL>

<P><STRONG><a name="[34f]"></a>ShowRecordResult</STRONG> (Thumb, 80 bytes, Stack size 56 bytes, ui.o(i.ShowRecordResult))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = ShowRecordResult &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_encode
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkDetailHandler
</UL>

<P><STRONG><a name="[355]"></a>ShowRecordWorkoutsRUN</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, ui.o(i.ShowRecordWorkoutsRUN))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = ShowRecordWorkoutsRUN &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
</UL>

<P><STRONG><a name="[354]"></a>ShowRecordgo</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowRecordgo))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ShowRecordgo &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
</UL>

<P><STRONG><a name="[365]"></a>ShowRemindList</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, ui.o(i.ShowRemindList))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ShowRemindList &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindViewHandler
</UL>

<P><STRONG><a name="[36f]"></a>ShowReset</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ShowReset &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetHandler
</UL>

<P><STRONG><a name="[371]"></a>ShowRestart</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowRestart))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ShowRestart &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartHandler
</UL>

<P><STRONG><a name="[38b]"></a>ShowSearch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ui.o(i.ShowSearch))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = ShowSearch &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchHandler
</UL>

<P><STRONG><a name="[38c]"></a>ShowSearching</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ui.o(i.ShowSearching))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = ShowSearching &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchingHandler
</UL>

<P><STRONG><a name="[3ad]"></a>ShowSecondsTimer</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ui.o(i.ShowSecondsTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 692<LI>Call Chain = ShowSecondsTimer &rArr; SecondsTimer &rArr; ShowTimerStatus &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecondsTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerHandler
</UL>

<P><STRONG><a name="[3a5]"></a>ShowSetUp</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, ui.o(i.ShowSetUp))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = ShowSetUp &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWatchId
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupAlertHandler
</UL>

<P><STRONG><a name="[3a4]"></a>ShowSettingApps</STRONG> (Thumb, 102 bytes, Stack size 72 bytes, ui.o(i.ShowSettingApps))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = ShowSettingApps &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWatchId
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingHandler
</UL>

<P><STRONG><a name="[3ae]"></a>ShowShortCut</STRONG> (Thumb, 206 bytes, Stack size 40 bytes, ui.o(i.ShowShortCut))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = ShowShortCut &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOnBle
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOffBle
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBatteryInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
</UL>

<P><STRONG><a name="[3af]"></a>ShowSleepMonitor</STRONG> (Thumb, 68 bytes, Stack size 48 bytes, ui.o(i.ShowSleepMonitor))
<BR><BR>[Stack]<UL><LI>Max Depth = 684<LI>Call Chain = ShowSleepMonitor &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalculatePercent
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor_Handler
</UL>

<P><STRONG><a name="[3b0]"></a>ShowSleepOverviewOne</STRONG> (Thumb, 202 bytes, Stack size 40 bytes, ui.o(i.ShowSleepOverviewOne))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = ShowSleepOverviewOne &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepOverview_Handler
</UL>

<P><STRONG><a name="[3b1]"></a>ShowSleepOverviewThree</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, ui.o(i.ShowSleepOverviewThree))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ShowSleepOverviewThree &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepOverview_Handler
</UL>

<P><STRONG><a name="[3b2]"></a>ShowSleepOverviewTwo</STRONG> (Thumb, 212 bytes, Stack size 40 bytes, ui.o(i.ShowSleepOverviewTwo))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = ShowSleepOverviewTwo &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepOverview_Handler
</UL>

<P><STRONG><a name="[362]"></a>ShowSleeping</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ui.o(i.ShowSleeping))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = ShowSleeping &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
</UL>

<P><STRONG><a name="[3b3]"></a>ShowSocialClass</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, ui.o(i.ShowSocialClass))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = ShowSocialClass &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHomeHandler
</UL>

<P><STRONG><a name="[3b4]"></a>ShowSportOverview</STRONG> (Thumb, 118 bytes, Stack size 48 bytes, ui.o(i.ShowSportOverview))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = ShowSportOverview &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_encode
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportOverviewHandler
</UL>

<P><STRONG><a name="[360]"></a>ShowSports</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ui.o(i.ShowSports))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = ShowSports &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
</UL>

<P><STRONG><a name="[3b5]"></a>ShowStandby</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, ui.o(i.ShowStandby))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = ShowStandby &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthWeekDays
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBatteryInfo
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Handler
</UL>

<P><STRONG><a name="[3b6]"></a>ShowSyncingIcon</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowSyncingIcon))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = ShowSyncingIcon &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syncing_Handler
</UL>

<P><STRONG><a name="[38e]"></a>ShowTimerStatus</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, ui.o(i.ShowTimerStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 660<LI>Call Chain = ShowTimerStatus &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecondsTimer
</UL>

<P><STRONG><a name="[3b7]"></a>ShowTpTest</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ui.o(i.ShowTpTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = ShowTpTest &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpTestHandler
</UL>

<P><STRONG><a name="[364]"></a>ShowUserRemind</STRONG> (Thumb, 78 bytes, Stack size 80 bytes, ui.o(i.ShowUserRemind))
<BR><BR>[Stack]<UL><LI>Max Depth = 564<LI>Call Chain = ShowUserRemind &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshBatteryInfo
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindsNote
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
</UL>

<P><STRONG><a name="[3b8]"></a>ShowVirateLevel</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, ui.o(i.ShowVirateLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = ShowVirateLevel &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VirateHandler
</UL>

<P><STRONG><a name="[3b9]"></a>ShowVolume</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowVolume))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = ShowVolume &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Handler
</UL>

<P><STRONG><a name="[3ba]"></a>ShowVolumeLevel</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ui.o(i.ShowVolumeLevel))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = ShowVolumeLevel &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Handler
</UL>

<P><STRONG><a name="[361]"></a>ShowWakeup</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, ui.o(i.ShowWakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = ShowWakeup &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
</UL>

<P><STRONG><a name="[3bb]"></a>ShowWristOffApps</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowWristOffApps))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = ShowWristOffApps &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristWakeUpHandler
</UL>

<P><STRONG><a name="[3bc]"></a>ShowWristOnApps</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, ui.o(i.ShowWristOnApps))
<BR><BR>[Stack]<UL><LI>Max Depth = 356<LI>Call Chain = ShowWristOnApps &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristWakeUpHandler
</UL>

<P><STRONG><a name="[1a5]"></a>SimulatePowerOffKey</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, batterystatushandler.o(i.SimulatePowerOffKey))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SimulatePowerOffKey &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
</UL>

<P><STRONG><a name="[5e]"></a>SitRemindHandler</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, alarmhandler.o(i.SitRemindHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = SitRemindHandler &rArr; ShowMoving &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMoving
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[3d8]"></a>SkypeSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bletask.o(i.SkypeSet))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[3bd]"></a>SleepContorl</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, neul18cmdpackage.o(i.SleepContorl))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = SleepContorl &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeDisplayStateChange
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAutoSleepFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDeviceSwitchSettingCB
</UL>

<P><STRONG><a name="[83]"></a>SleepEventHandler</STRONG> (Thumb, 406 bytes, Stack size 48 bytes, sleeptask.o(i.SleepEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = SleepEventHandler &rArr; StoreSleepDataToFlash &rArr; StoreSleepDetailForDisplay &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockI2c
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_z
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_y
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_read_accel_x
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonPress
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsensor_read_accel
<LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSleepTimeNodeSingle
<LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSleepState
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepDataToFlash
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepUploadData
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeDisplayStateChange
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStep
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalBaseKcal
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAutoSleepFlag
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTPInt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTPInt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[84]"></a>SleepInitTask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sleeptask.o(i.SleepInitTask))
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[39]"></a>SleepMmenuHandler</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, alarmhandler.o(i.SleepMmenuHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = SleepMmenuHandler &rArr; ShowMainMenu &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMenuHandler
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.LoadMenuHandler)
</UL>
<P><STRONG><a name="[50]"></a>SleepMonitor_Handler</STRONG> (Thumb, 386 bytes, Stack size 56 bytes, sleephandler.o(i.SleepMonitor_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 748<LI>Call Chain = SleepMonitor_Handler &rArr; GotoNormalMode &rArr; StoreSleepDataToFlash &rArr; StoreSleepDetailForDisplay &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeDisplayStateChange
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepMonitor
</UL>
<BR>[Address Reference Count : 2]<UL><LI> standbyhandler.o(i.Standby_Handler)
<LI> alarmhandler.o(i.SleepMmenuHandler)
</UL>
<P><STRONG><a name="[52]"></a>SleepOverview_Handler</STRONG> (Thumb, 352 bytes, Stack size 32 bytes, sleephandler.o(i.SleepOverview_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = SleepOverview_Handler &rArr; ShowSleepOverviewTwo &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler_WithoutDisplay
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepOverviewTwo
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepOverviewThree
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepOverviewOne
</UL>
<BR>[Address Reference Count : 1]<UL><LI> sleephandler.o(i.SleepMonitor_Handler)
</UL>
<P><STRONG><a name="[2b2]"></a>SleepUploadData</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, sleeptask.o(i.SleepUploadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = SleepUploadData &rArr; GetSleepData &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSleepDataCmd
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSleepData
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSleepAwakeDataCB
</UL>

<P><STRONG><a name="[3c1]"></a>SliderDispatch</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, iqs263_handler.o(i.SliderDispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = SliderDispatch &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tapEvent
<LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;slideEvent
<LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flickRight
<LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flickLeft
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyEventHandler
</UL>

<P><STRONG><a name="[169]"></a>SmsPollGetInfo</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, bletask.o(i.SmsPollGetInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SmsPollGetInfo &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
</UL>

<P><STRONG><a name="[3db]"></a>SnapchatSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bletask.o(i.SnapchatSet))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[54]"></a>SocialClassHandler</STRONG> (Thumb, 564 bytes, Stack size 56 bytes, alarmhandler.o(i.SocialClassHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = SocialClassHandler &rArr; ReadAncsMsg_ToKl17_SOCIAL &rArr; Flash_Display_Ancs_LayOut &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSocialNotifEventFlag
<LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsMsg_ToKl17_SOCIAL
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut_SOCIAL
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForAncsHandlerEnd_SOCIAL
<LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAncsMsg_SOCIAL
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.SocialClassHomeHandler)
</UL>
<P><STRONG><a name="[42]"></a>SocialClassHomeHandler</STRONG> (Thumb, 168 bytes, Stack size 32 bytes, alarmhandler.o(i.SocialClassHomeHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = SocialClassHomeHandler &rArr; ShowSocialClass &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSocialClass
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut_SOCIAL
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.NotificationBoxHandler)
</UL>
<P><STRONG><a name="[65]"></a>SocialHomePageHandler</STRONG> (Thumb, 268 bytes, Stack size 16 bytes, alarmhandler.o(i.SocialHomePageHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 388<LI>Call Chain = SocialHomePageHandler &rArr; LCD_MsgInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler_WithoutDisplay
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSocialNotifEventFlag
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MsgInterface
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[55]"></a>SocialMessageHandler</STRONG> (Thumb, 610 bytes, Stack size 48 bytes, alarmhandler.o(i.SocialMessageHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = SocialMessageHandler &rArr; ReadAncsMsg_ToKl17 &rArr; Flash_Display_Ancs_LayOut &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSocialNotifEventFlag
<LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsMsg_ToKl17
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForAncsHandlerEnd
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAncsMsg
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.SocialHomePageHandler)
</UL>
<P><STRONG><a name="[df]"></a>SpiFlashEraseSaveFlag</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.SpiFlashEraseSaveFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = SpiFlashEraseSaveFlag &rArr; InitBandInfo &rArr; WRITE_USER_FLAG &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBandInfo
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetBoard
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[e0]"></a>SpiFlashUpdateFontLib</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.SpiFlashUpdateFontLib))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = SpiFlashUpdateFontLib &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAppTaskMessage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[10a]"></a>SpiFlash_4KSector_Erase</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, extspiflash.o(i.SpiFlash_4KSector_Erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = SpiFlash_4KSector_Erase &rArr; Flash_Erase &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatusRegister
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlash_Nordic
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlash_Freescal
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Write
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Suspend
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Resume
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_OTA_INFO
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAncsSmsParameter
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseOtaSuccessFlag
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncsFlash
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlashRtcClock
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepData
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepDetailForDisplay
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreStepData
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDisplySportData
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_FLAG
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBandInfo
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreHeartRateData
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsMsg
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWatchId
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecordWorkData
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_Social
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_Sms
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_MissedCall
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncs_Email
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_OTALanguageInfo
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRemindData
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncs_SOCIAL
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ota_Prepare
<LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearRemindData
<LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPhoneRecordFlash
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearPhoneBookFlash
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlashEraseSaveFlag
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashWrite
</UL>

<P><STRONG><a name="[3ca]"></a>SpiFlash_ChipErase</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, extspiflash.o(i.SpiFlash_ChipErase))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = SpiFlash_ChipErase &rArr; Flash_Erase &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatusRegister
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlash_Nordic
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlash_Freescal
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Write
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Suspend
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Resume
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
</UL>

<P><STRONG><a name="[291]"></a>SpiFlash_Disable_IO</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, extspiflash.o(i.SpiFlash_Disable_IO))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SpiFlash_Disable_IO
</UL>
<BR>[Calls]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlash_Freescal
</UL>

<P><STRONG><a name="[28f]"></a>SpiFlash_Enable_IO</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, extspiflash.o(i.SpiFlash_Enable_IO))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SpiFlash_Enable_IO
</UL>
<BR>[Calls]<UL><LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Init
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlash_Nordic
</UL>

<P><STRONG><a name="[3cc]"></a>SpiFlash_Init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, extspiflash.o(i.SpiFlash_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SpiFlash_Init &rArr; UnlockGlobalBlockProtection &rArr; WriteEnable &rArr; SPI_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockGlobalBlockProtection
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Enable_IO
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3ce]"></a>SpiFlash_PageWrite</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, extspiflash.o(i.SpiFlash_PageWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SpiFlash_PageWrite &rArr; WaitForStatusRegister &rArr; SPI_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatusRegister
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Write
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
</UL>

<P><STRONG><a name="[108]"></a>SpiFlash_Read</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, extspiflash.o(i.SpiFlash_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlash_Nordic
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlash_Freescal
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Write
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Suspend
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Resume
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_update
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_OTA_INFO
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWatchId
<LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_OTA_INFO
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Ota_Addr
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_upgrade
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XmodemRevPktToSpiFlash
<LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetFlashRtcClock
<LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmptyRtcClockSaveIndex
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSleepData
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSleepDetailForDisplay
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_USER_FLAG
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStepData
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecordWorkData
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_FLAG
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHeartRateData
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Thai_Dot
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Russion_Dot
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Lartin_Dot
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Korean_Dot
<LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Japanese_Dot
<LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Chinese_Dot
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Ascii_Dot
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRemindData
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_USER_PARAMETER
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_STEP_SLEEP_SUM
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindHead
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindData
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOTALanguageInfo
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetEmptyDisplySportDataIndex
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplySportData
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAndroid_iosFalg
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashRead
</UL>

<P><STRONG><a name="[3cf]"></a>SpiFlash_Read_TP_Firmware</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, extspiflash.o(i.SpiFlash_Read_TP_Firmware))
<BR><BR>[Stack]<UL><LI>Max Depth = 164<LI>Call Chain = SpiFlash_Read_TP_Firmware &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlash_Nordic
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlash_Freescal
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Write
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
</UL>

<P><STRONG><a name="[10b]"></a>SpiFlash_Write</STRONG> (Thumb, 238 bytes, Stack size 40 bytes, extspiflash.o(i.SpiFlash_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 436<LI>Call Chain = SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PageWrite
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlash_Nordic
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlash_Freescal
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Suspend
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Resume
</UL>
<BR>[Called By]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_OTA_INFO
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XmodemRevPktToSpiFlash
<LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFlashRtcClock
<LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepData
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepDetailForDisplay
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreStepData
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDisplySportData
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_FLAG
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreHeartRateData
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncsMsg
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWatchId
<LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreRecordWorkData
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_OTALanguageInfo
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRemindData
<LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMaxCnt
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetAndroid_iosFalg
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePBook_NumName_toFlash
<LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePBook_ID_toFlash
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePBook_Cnt_toFlash
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveAncs_SOCIAL
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ota_Prepare
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NvFlashWrite
</UL>

<P><STRONG><a name="[289]"></a>Spi_Send_MSG</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, kl17cmdpackage.o(i.Spi_Send_MSG))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_cmd
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_receive_data
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___16_KL17CmdPackage_c_80624e7e__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateTime
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KL17_Version
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface_SetBL_Step
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerOffSystem
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MsgInterface
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_OTALanguageInfo
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Display_Ancs_LayOut
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResumeBacklight
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NordicPM
<LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PictureInterface
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MainDataInterface_NoDisplay
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Set_Access
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
</UL>

<P><STRONG><a name="[14f]"></a>SportLevelJudge</STRONG> (Thumb, 202 bytes, Stack size 28 bytes, as7000.o(i.SportLevelJudge))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = SportLevelJudge
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_GetHeartRateData
</UL>

<P><STRONG><a name="[36]"></a>SportMmenuHandler</STRONG> (Thumb, 130 bytes, Stack size 8 bytes, alarmhandler.o(i.SportMmenuHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = SportMmenuHandler &rArr; ShowMainMenu &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMenuHandler
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMainMenu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.LoadMenuHandler)
</UL>
<P><STRONG><a name="[56]"></a>SportOverviewHandler</STRONG> (Thumb, 174 bytes, Stack size 24 bytes, sporthandler.o(i.SportOverviewHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 556<LI>Call Chain = SportOverviewHandler &rArr; ShowSportOverview &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSportOverview
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NeedSetDisplySportData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.SportMmenuHandler)
</UL>
<P><STRONG><a name="[fd]"></a>SppTransmissionCB</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, bc5cmdpackage.o(i.SppTransmissionCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SppTransmissionCB &rArr; SendRspCmd &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRspCmd
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParseHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bc5cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[22]"></a>Standby_Handler</STRONG> (Thumb, 2394 bytes, Stack size 64 bytes, standbyhandler.o(i.Standby_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 756<LI>Call Chain = Standby_Handler &rArr; GotoNormalMode &rArr; StoreSleepDataToFlash &rArr; StoreSleepDetailForDisplay &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AncsConnectedGetAllInfo
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncsFlash
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBrightness
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadMultiHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOnBle
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemFactoryModeSet
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartBc5ReconnectFlag
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSuspendEvent
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendResumeEvent
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeDisplayStateChange
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStep
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOn
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSleepTaskId
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOffBle
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopKeyScan
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBc5Power
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecondsTimerStop
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCallerIDToBuf
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsUploadAll
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadPhoneHandler
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAncsMsgLayOut
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearCallerIDFormApk
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_TO_CC2540_CallState
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsSaveToFlash
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMenuHandler
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetRingModeCmd
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetBtPairCmd
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BindEndDealWith
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBatteryStatus
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimulatePowerOffKey
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetVolumeCmd
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadVolumeHandler
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WhatsappSet
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SnapchatSet
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SkypeSet
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QQSet
<LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FacebookMessageSet
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopSecondEvent
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> apphandler.o(i.AppInitTask)
</UL>
<P><STRONG><a name="[3d6]"></a>StartBc5ReconnectFlag</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, displaytask.o(i.StartBc5ReconnectFlag))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = StartBc5ReconnectFlag &rArr; READ_USER_FLAG &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_USER_FLAG
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOn
</UL>

<P><STRONG><a name="[1de]"></a>StartDisconnectQuitEvent</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, alarmhandler.o(i.StartDisconnectQuitEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = StartDisconnectQuitEvent &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtBleDisconnectHandler
</UL>

<P><STRONG><a name="[292]"></a>StartKeyScan</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hwtask.o(i.StartKeyScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = StartKeyScan &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchKeyTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
<LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NordicPM
</UL>

<P><STRONG><a name="[351]"></a>StartRecordWork</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, alarmhandler.o(i.StartRecordWork))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = StartRecordWork &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsGetSysTick
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHrTaskId
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
</UL>

<P><STRONG><a name="[1a7]"></a>StartSecondEvent</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, clocktask.o(i.StartSecondEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = StartSecondEvent &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
</UL>

<P><STRONG><a name="[2c4]"></a>StartStep</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, steptask.o(i.StartStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = StartStep &rArr; Lis3dh_Step_SetConfig &rArr; lis3dh_wakeup &rArr; LIS3DH_SetODR &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockI2c
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lis3dh_Step_SetConfig
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTPInt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTPInt
</UL>
<BR>[Called By]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepInit
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenBond
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOn
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syncing_Handler
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTest
</UL>

<P><STRONG><a name="[3dc]"></a>StartStepCounter</STRONG> (Thumb, 282 bytes, Stack size 224 bytes, steptask.o(i.StartStepCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 344<LI>Call Chain = StartStepCounter &rArr; Gsensor_receive_data &rArr; Get_AccData &rArr; LIS3DH_ReadReg &rArr; I2cMultipleByteRead &rArr; I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockI2c
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGesture_Recog_ALG
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucGetGestureType_ALG
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsensor_receive_data
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsensor_get_fifo_framecount
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccData
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma2x2GetFifoData
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTPInt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTPInt
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
</UL>

<P><STRONG><a name="[3e0]"></a>StartStepCounterWithGesture</STRONG> (Thumb, 230 bytes, Stack size 32 bytes, steptask.o(i.StartStepCounterWithGesture))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = StartStepCounterWithGesture &rArr; vStepCounter &rArr; vStepCounter_25hz &rArr; Sleep_Moniter_Judge &rArr; GetTimeStamp &rArr; gOS_GetUTCTime &rArr; osal_ConvertUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockI2c
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGesture_Recog_ALG
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ucGetGestureType_ALG
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAccData
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma2x2GetFifoData
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopTPInt
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartTPInt
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
</UL>

<P><STRONG><a name="[250]"></a>StartTPInt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hwtask.o(i.StartTPInt))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounterWithGesture
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounter
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStep
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseStep
</UL>

<P><STRONG><a name="[85]"></a>StepEventHandler</STRONG> (Thumb, 422 bytes, Stack size 24 bytes, steptask.o(i.StepEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = StepEventHandler &rArr; RecordWorkUploadData &rArr; SaveRecordWork &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isSystemSupend
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSteps
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSportGoalOverRemind
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargeDisplayStateChange
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoSleepMode
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepUploadData
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounterWithGesture
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounter
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkUploadData
<LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportKcal
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
<LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalBaseKcal
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[29a]"></a>StepInit</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, steptask.o(i.StepInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = StepInit &rArr; SetDisplySportData &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounterInit
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vGesture_Recog_Init_ALG
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSteps
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDisplySportData
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStep
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAutoSleepFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupAlertHandler
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplaySportDataCmdCB
</UL>

<P><STRONG><a name="[86]"></a>StepInitTask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, steptask.o(i.StepInitTask))
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[3e4]"></a>StepUploadData</STRONG> (Thumb, 140 bytes, Stack size 48 bytes, steptask.o(i.StepUploadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 244<LI>Call Chain = StepUploadData &rArr; GetStepData &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSportDataCmd
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetStepData
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadSportCmdCB
</UL>

<P><STRONG><a name="[1df]"></a>StopDisconnectQuitEvent</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, alarmhandler.o(i.StopDisconnectQuitEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = StopDisconnectQuitEvent &rArr; osal_clear_event &rArr; pS_OsClearTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_clear_event
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtBleDisconnectHandler
</UL>

<P><STRONG><a name="[3d2]"></a>StopKeyScan</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, hwtask.o(i.StopKeyScan))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = StopKeyScan &rArr; AdcRead
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_cfg_sense_input
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchKeyTaskId
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AdcRead
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSuspend
</UL>

<P><STRONG><a name="[1e0]"></a>StopMotorRunTime</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, motor.o(i.StopMotorRunTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = StopMotorRunTime &rArr; Set_Motor_LevelLow &rArr; PWM_SetValue &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHwTaskId
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Motor_LevelLow
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSuspend
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRepeatRun
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialHomePageHandler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SitRemindHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHomePageHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallHomePageHandler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrRemindHandler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoalOver_Handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHomePageHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHomePageHandler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtBleDisconnectHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_ShowPhoneSoundStatus
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSleep_Handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialMessageHandler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallAlertHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHandler
</UL>

<P><STRONG><a name="[350]"></a>StopRecordWork</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, alarmhandler.o(i.StopRecordWork))
<BR><BR>[Stack]<UL><LI>Max Depth = 516<LI>Call Chain = StopRecordWork &rArr; SaveRecordWork &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHrTaskId
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRecordWork
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
</UL>

<P><STRONG><a name="[1a0]"></a>StopSecondEvent</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, clocktask.o(i.StopSecondEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = StopSecondEvent &rArr; osal_clear_event &rArr; pS_OsClearTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_clear_event
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
</UL>

<P><STRONG><a name="[35d]"></a>StopSecondRemind</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, reminder.o(i.StopSecondRemind))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
</UL>

<P><STRONG><a name="[298]"></a>StopStep</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, steptask.o(i.StopStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = StopStep &rArr; osal_stop_timerEx &rArr; pS_OsStopTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
</UL>
<BR>[Called By]<UL><LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTest
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportTotalCntCB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplaySportDataCmdCB
</UL>

<P><STRONG><a name="[24e]"></a>StopTPInt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hwtask.o(i.StopTPInt))
<BR><BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounterWithGesture
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounter
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStep
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseStep
</UL>

<P><STRONG><a name="[3e7]"></a>StoreDataInit</STRONG> (Thumb, 1338 bytes, Stack size 176 bytes, datastoreinside.o(i.StoreDataInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 836<LI>Call Chain = StoreDataInit &rArr; ShowBrightness &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitSleepDetailForDisplay
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_USER_FLAG
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSitRemindEvent
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowShortCut
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBrightness
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_OTALanguageInfo
<LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_USER_PARAMETER
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_STEP_SLEEP_SUM
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetOTALanguageInfo
<LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplySportData
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAndroid_iosFalg
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e8]"></a>StoreHeartRateData</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, datastoreinside.o(i.StoreHeartRateData))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = StoreHeartRateData &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHeartRateMemoryFullFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreHeartRateDataToFlash
</UL>

<P><STRONG><a name="[2df]"></a>StoreHeartRateDataToFlash</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, heartratetask.o(i.StoreHeartRateDataToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = StoreHeartRateDataToFlash &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreHeartRateData
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
</UL>

<P><STRONG><a name="[389]"></a>StoreRecordWorkData</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, datastoreinside.o(i.StoreRecordWorkData))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = StoreRecordWorkData &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRecordWork
</UL>

<P><STRONG><a name="[3e9]"></a>StoreSleepData</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, datastoreinside.o(i.StoreSleepData))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = StoreSleepData &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSleepMemoryFullFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepDataToFlash
</UL>

<P><STRONG><a name="[2c3]"></a>StoreSleepDataToFlash</STRONG> (Thumb, 356 bytes, Stack size 40 bytes, sleeptask.o(i.StoreSleepDataToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 652<LI>Call Chain = StoreSleepDataToFlash &rArr; StoreSleepDetailForDisplay &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepData
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepDetailForDisplay
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenDateTimeSetting
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
</UL>

<P><STRONG><a name="[3ea]"></a>StoreSleepDetailForDisplay</STRONG> (Thumb, 230 bytes, Stack size 176 bytes, sleeptask.o(i.StoreSleepDetailForDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = StoreSleepDetailForDisplay &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_ConvertUTCTime
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepDataToFlash
</UL>

<P><STRONG><a name="[198]"></a>StoreSportDataToFlash</STRONG> (Thumb, 168 bytes, Stack size 48 bytes, steptask.o(i.StoreSportDataToFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = StoreSportDataToFlash &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreStepData
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDisplySportData
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
<LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetStepMemoryFullFlag
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDistance
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NeedSetDisplySportData
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgMsgCmdCB
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportTotalCntCB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplaySportDataCmdCB
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BaseKcalTypeCB
</UL>

<P><STRONG><a name="[3ec]"></a>StoreStepData</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, datastoreinside.o(i.StoreStepData))
<BR><BR>[Stack]<UL><LI>Max Depth = 468<LI>Call Chain = StoreStepData &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
</UL>

<P><STRONG><a name="[338]"></a>Switch_Call_Time</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, phonehandler.o(i.Switch_Call_Time))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
</UL>

<P><STRONG><a name="[5c]"></a>Syncing_Handler</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, sporthandler.o(i.Syncing_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 532<LI>Call Chain = Syncing_Handler &rArr; ShowSyncingIcon &rArr; InterfaceBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_clear_event
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStep
<LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSyncingIcon
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[3d4]"></a>SystemFactoryModeSet</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, displaytask.o(i.SystemFactoryModeSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 300<LI>Call Chain = SystemFactoryModeSet &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableUsbPinInt
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, system_nrf51.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemInit
</UL>
<BR>[Calls]<UL><LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_manual_peripheral_setup_needed
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(.text)
</UL>
<P><STRONG><a name="[3d3]"></a>SystemPowerOff</STRONG> (Thumb, 236 bytes, Stack size 16 bytes, displaytask.o(i.SystemPowerOff))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = SystemPowerOff &rArr; DisplayLogo &rArr; ShowLogo &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLogo
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPowerOff
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Sleep
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadMultiHandler
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAppTaskMessage
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_suspend
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SecondsTimerOff
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHrTaskId
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeReceiveBuff
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseStep
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOffBle
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBc5Power
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableUsbPinInt
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOffUsbStateEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[2e5]"></a>SystemPowerOn</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, displaytask.o(i.SystemPowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 380<LI>Call Chain = SystemPowerOn &rArr; DisplayLogo &rArr; ShowLogo &rArr; LCD_PictureInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLogo
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CInit
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPowerOn
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Sleep
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOnBle
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartBc5ReconnectFlag
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStep
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableUsbPinInt
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOnUsbStateEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[269]"></a>SystemResume</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, displaytask.o(i.SystemResume))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = SystemResume &rArr; FLP_TurnOnBle &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPowerOn
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockTaskId
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Enable
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOnBle
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNormalStateToBC5
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
</UL>

<P><STRONG><a name="[268]"></a>SystemSuspend</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, displaytask.o(i.SystemSuspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 348<LI>Call Chain = SystemSuspend &rArr; LCD_Sleep &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPowerOff
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockTaskId
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Sleep
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_suspend
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Disable
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendsSuspendStateToBC5
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopKeyScan
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBc5Power
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
</UL>

<P><STRONG><a name="[e]"></a>TIMER1_IRQHandler</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, nrf_drv_timer.o(i.TIMER1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TIMER1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[e4]"></a>TestFactoryMode</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.TestFactoryMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = TestFactoryMode &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFactorySettingEvent
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[aa]"></a>TimeOrderCmdCB</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.TimeOrderCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = TimeOrderCmdCB &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>Time_Handler</STRONG> (Thumb, 232 bytes, Stack size 32 bytes, standbyhandler.o(i.Time_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 548<LI>Call Chain = Time_Handler &rArr; RefreshTimeUIFun &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStandby
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshTimeUIFun
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMenuHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.LoadMenuHandler)
</UL>
<P><STRONG><a name="[25]"></a>TimerHandler</STRONG> (Thumb, 306 bytes, Stack size 24 bytes, alarmhandler.o(i.TimerHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 716<LI>Call Chain = TimerHandler &rArr; ShowSecondsTimer &rArr; SecondsTimer &rArr; ShowTimerStatus &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockTaskId
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsGetSysTick
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSecondsTimer
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.AppsBoxHandler)
</UL>
<P><STRONG><a name="[3aa]"></a>Total_Count_SOCIAL</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, datastoreinside.o(i.Total_Count_SOCIAL))
<BR><BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowNotificationMenu
</UL>

<P><STRONG><a name="[81]"></a>TouchKeyEventHandler</STRONG> (Thumb, 234 bytes, Stack size 16 bytes, touchkeytask.o(i.TouchKeyEventHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 340<LI>Call Chain = TouchKeyEventHandler &rArr; CheckCypressEvent &rArr; zinitix_touchinfo &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgDeallocate
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchKeyEvent
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCypressEvent
<LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderDispatch
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CLongTouch
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleTouchKey
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalKeyPoll
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalKeyDoubleCheckTimeout
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchKeyMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[82]"></a>TouchKeyInitTask</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, touchkeytask.o(i.TouchKeyInitTask))
<BR>[Address Reference Count : 1]<UL><LI> osal.o(i.pS_OsTaskRegList)
</UL>
<P><STRONG><a name="[ea]"></a>TpTest</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.TpTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 308<LI>Call Chain = TpTest &rArr; SetFactoryStandbyTime &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAppTaskMessage
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFactoryStandbyTime
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[59]"></a>TpTestHandler</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, alarmhandler.o(i.TpTestHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 524<LI>Call Chain = TpTestHandler &rArr; ShowTpTest &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowTpTest
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[8]"></a>UART0_IRQHandler</STRONG> (Thumb, 304 bytes, Stack size 48 bytes, app_uart_fifo.o(i.UART0_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = UART0_IRQHandler &rArr; XmodemRevPktToSpiFlash &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_put
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHwTaskId
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XmodemRevPktToSpiFlash
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> arm_startup_nrf51.o(RESET)
</UL>
<P><STRONG><a name="[18a]"></a>UART_Send</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, app_uart_fifo.o(i.UART_Send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwSendDataToBt
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaSendCmd
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_UartSendData
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_Response
</UL>

<P><STRONG><a name="[2e9]"></a>Uart0PacketParser</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, app_uart_fifo.o(i.Uart0PacketParser))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = Uart0PacketParser &rArr; SendRspCmd &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRspCmd
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bc5DataParseHandler
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParseHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
</UL>

<P><STRONG><a name="[39d]"></a>UartInit_ChoosePin</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, app_uart_fifo.o(i.UartInit_ChoosePin))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UartInit_ChoosePin &rArr; InitUartBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUartBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPowerOn
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBc5Power
</UL>

<P><STRONG><a name="[3f9]"></a>UartInitial</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, app_uart_fifo.o(i.UartInitial))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UartInitial &rArr; InitUartBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitUartBuffer
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPowerOn
</UL>

<P><STRONG><a name="[26b]"></a>UartPowerOff</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, app_uart_fifo.o(i.UartPowerOff))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSuspend
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
</UL>

<P><STRONG><a name="[3f1]"></a>UartPowerOn</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, app_uart_fifo.o(i.UartPowerOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UartPowerOn &rArr; UartInitial &rArr; InitUartBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInitial
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInit_ChoosePin
</UL>
<BR>[Called By]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResume
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOn
</UL>

<P><STRONG><a name="[27c]"></a>UnknownUnicodeConversion</STRONG> (Thumb, 218 bytes, Stack size 0 bytes, fontdisplay.o(i.UnknownUnicodeConversion))
<BR><BR>[Called By]<UL><LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplaySingleUnicode
</UL>

<P><STRONG><a name="[180]"></a>UnloadHandler</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, apphandler.o(i.UnloadHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = UnloadHandler &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplayTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpTestHandler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syncing_Handler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialHomePageHandler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor_Handler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SitRemindHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupAlertHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHomePageHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallHomePageHandler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MedalHandler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrRemindHandler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoalOver_Handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHomePageHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHomePageHandler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllHandler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtBleDisconnectHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Handler
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadVolumeHandler
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepOverview_Handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSleep_Handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportOverviewHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristWakeUpHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VirateHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerHandler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialMessageHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHomeHandler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchingHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindViewHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkDetailHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBoxHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoReminderHandler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoNewNotificationHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallAlertHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitsleepmodeHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitRecordWorkOutsHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHandler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAncsHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CameraHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightnessHandler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppsBoxHandler
</UL>

<P><STRONG><a name="[25c]"></a>UnloadHandler_WithoutDisplay</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, apphandler.o(i.UnloadHandler_WithoutDisplay))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = UnloadHandler_WithoutDisplay &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
</UL>
<BR>[Called By]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialHomePageHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHomePageHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallHomePageHandler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHomePageHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHomePageHandler
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepOverview_Handler
</UL>

<P><STRONG><a name="[1a6]"></a>UnloadMultiHandler</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, apphandler.o(i.UnloadMultiHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = UnloadMultiHandler &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
</UL>

<P><STRONG><a name="[3cd]"></a>UnlockGlobalBlockProtection</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, extspiflash.o(i.UnlockGlobalBlockProtection))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UnlockGlobalBlockProtection &rArr; WriteEnable &rArr; SPI_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Write
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Suspend
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Resume
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Init
</UL>

<P><STRONG><a name="[204]"></a>UnlockI2c</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, axisi2c.o(i.UnlockI2c))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UnlockI2c
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Delayus
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckGsensorType
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounterWithGesture
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounter
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStep
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseStep
</UL>

<P><STRONG><a name="[1a2]"></a>UpdateBatteryStatus</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, batterystatushandler.o(i.UpdateBatteryStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 540<LI>Call Chain = UpdateBatteryStatus &rArr; ShowCharging &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCharging
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryFull
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMap
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
</UL>

<P><STRONG><a name="[3fa]"></a>UpdateBleStatus</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ui.o(i.UpdateBleStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = UpdateBleStatus &rArr; FLP_TurnOnBle &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOnBle
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOffBle
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d1]"></a>UpdateDeviceSwitchSettingCB</STRONG> (Thumb, 182 bytes, Stack size 32 bytes, neul18cmdpackage.o(i.UpdateDeviceSwitchSettingCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = UpdateDeviceSwitchSettingCB &rArr; WriteSitRemiandSetting &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSitRemiandSetting
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepContorl
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[58]"></a>UpdateFontLibHandler</STRONG> (Thumb, 268 bytes, Stack size 56 bytes, alarmhandler.o(i.UpdateFontLibHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = UpdateFontLibHandler &rArr; WriteWatchId &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWatchId
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_USER_FLAG
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHrTaskId
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOnBle
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOffBle
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showUpgradeFail
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;showUpgrade
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWatchId
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ChipErase
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> standbyhandler.o(i.Standby_Handler)
</UL>
<P><STRONG><a name="[b3]"></a>UpdateProgMsgCmdCB</STRONG> (Thumb, 208 bytes, Stack size 32 bytes, neul18cmdpackage.o(i.UpdateProgMsgCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 644<LI>Call Chain = UpdateProgMsgCmdCB &rArr; SetUserInfo &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Force_NordicFlash
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsWatchDogFeed
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUserInfo
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ota_Prepare
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[3a1]"></a>UpdateSocialCount</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, datastoreinside.o(i.UpdateSocialCount))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = UpdateSocialCount &rArr; ForAncsHandlerEnd_SOCIAL
</UL>
<BR>[Calls]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForAncsHandlerEnd_SOCIAL
</UL>
<BR>[Called By]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReadPos
</UL>

<P><STRONG><a name="[3a2]"></a>UpdateSocialCount_SOCIAL</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, datastoreinside.o(i.UpdateSocialCount_SOCIAL))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UpdateSocialCount_SOCIAL &rArr; ForAncsHandlerEnd
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ForAncsHandlerEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetReadPos_SOCIAL
</UL>

<P><STRONG><a name="[c9]"></a>UploadRecordWorkCmdCB</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.UploadRecordWorkCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 572<LI>Call Chain = UploadRecordWorkCmdCB &rArr; RecordWorkUploadData &rArr; SaveRecordWork &rArr; WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkUploadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[bc]"></a>UploadSportCmdCB</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.UploadSportCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 252<LI>Call Chain = UploadSportCmdCB &rArr; StepUploadData &rArr; GetStepData &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepUploadData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[b7]"></a>UserHabitCmdCB</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.UserHabitCmdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = UserHabitCmdCB &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[3fe]"></a>UserInfoInit</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, userinfo.o(i.UserInfoInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UserInfoInit
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3ff]"></a>VerifyPacketChecksum</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, app_uart_fifo.o(i.VerifyPacketChecksum))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = VerifyPacketChecksum
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CRC_calc
</UL>
<BR>[Called By]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;XmodemRevPktToSpiFlash
</UL>

<P><STRONG><a name="[10f]"></a>VerifyWatchId</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.VerifyWatchId))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = VerifyWatchId &rArr; strncmp
</UL>
<BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncmp
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAncsSmsParameter
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWatchIdCB
</UL>

<P><STRONG><a name="[2b]"></a>VirateHandler</STRONG> (Thumb, 142 bytes, Stack size 8 bytes, alarmhandler.o(i.VirateHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 620<LI>Call Chain = VirateHandler &rArr; ShowVirateLevel &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowVirateLevel
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.AppsBoxHandler)
</UL>
<P><STRONG><a name="[ae]"></a>VolumeValueCB</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.VolumeValueCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = VolumeValueCB &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BasicSendData
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>Volume_Handler</STRONG> (Thumb, 336 bytes, Stack size 40 bytes, volumehandler.o(i.Volume_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 636<LI>Call Chain = Volume_Handler &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowVolumeLevel
<LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowVolume
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetVolumeCmd
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_volume_level
</UL>
<BR>[Address Reference Count : 1]<UL><LI> volumehandler.o(i.LoadVolumeHandler)
</UL>
<P><STRONG><a name="[217]"></a>WRITE_OTA_INFO</STRONG> (Thumb, 66 bytes, Stack size 72 bytes, datastoreinside.o(i.WRITE_OTA_INFO))
<BR><BR>[Stack]<UL><LI>Max Depth = 508<LI>Call Chain = WRITE_OTA_INFO &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateTP
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateKl17
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateAS7000
</UL>

<P><STRONG><a name="[233]"></a>WRITE_STEP_SLEEP_SUM</STRONG> (Thumb, 64 bytes, Stack size 40 bytes, datastoreinside.o(i.WRITE_STEP_SLEEP_SUM))
<BR><BR>[Stack]<UL><LI>Max Depth = 476<LI>Call Chain = WRITE_STEP_SLEEP_SUM &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepDataToFlash
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveRecordWork
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSportDataToFlash
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkUploadData
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreHeartRateDataToFlash
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateAlarmCB
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSportDataCB
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearSleepDataCB
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearRecordWorkDataCB
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearHeartRateDataCB
</UL>

<P><STRONG><a name="[2e6]"></a>WRITE_USER_FLAG</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, datastoreinside.o(i.WRITE_USER_FLAG))
<BR><BR>[Stack]<UL><LI>Max Depth = 460<LI>Call Chain = WRITE_USER_FLAG &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBandInfo
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupAlertHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetHandler
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchIDTest
</UL>

<P><STRONG><a name="[187]"></a>WRITE_USER_PARAMETER</STRONG> (Thumb, 66 bytes, Stack size 160 bytes, datastoreinside.o(i.WRITE_USER_PARAMETER))
<BR><BR>[Stack]<UL><LI>Max Depth = 596<LI>Call Chain = WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDefaultGoal
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BindEndDealWith
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Handler
<LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowVirateLevel
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowShortCut
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBrightness
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristWakeUpHandler
<LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSitRemiandSetting
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDeviceCommID
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUserInfo
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetPhBok_Flag
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Save_Motor_Level
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VolumeValueCB
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserHabitCmdCB
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgMsgCmdCB
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDeviceSwitchSettingCB
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeOrderCmdCB
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUnitFormat
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSleepModeCB
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguageFormat
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoOrderValueCB
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOrderCmdCB
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyGoalSettingCmdCB
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BaseKcalTypeCB
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BacklightSettingCmdCB
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoHeartRateCB
</UL>

<P><STRONG><a name="[3c9]"></a>WaitForStatusRegister</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, extspiflash.o(i.WaitForStatusRegister))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = WaitForStatusRegister &rArr; SPI_Read
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Write
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___13_ExtSpiFlash_c_u_Delay__nrf_delay_us
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_dir_set
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ChipErase
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PageWrite
</UL>

<P><STRONG><a name="[ed]"></a>WatchIDTest</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, neul18cmdpackage.o(i.WatchIDTest))
<BR><BR>[Stack]<UL><LI>Max Depth = 492<LI>Call Chain = WatchIDTest &rArr; WriteWatchIdCB &rArr; WriteWatchId &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRspCmd
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_FLAG
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBandInfo
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetBoard
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWatchIdCB
</UL>
<BR>[Address Reference Count : 1]<UL><LI> neul18cmdpackage.o(.constdata)
</UL>
<P><STRONG><a name="[3d9]"></a>WhatsappSet</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, bletask.o(i.WhatsappSet))
<BR><BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
</UL>

<P><STRONG><a name="[4f]"></a>WristWakeUpHandler</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, alarmhandler.o(i.WristWakeUpHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 612<LI>Call Chain = WristWakeUpHandler &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitGesture
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Screen_Locaton
<LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWristOnApps
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowWristOffApps
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.SettingHandler)
</UL>
<P><STRONG><a name="[157]"></a>WriteData_AS7000</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, as7000.o(i.WriteData_AS7000))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = WriteData_AS7000 &rArr; HRM_I2cMultipleByteWrite &rArr; HRM_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cMultipleByteWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_upgrade
<LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_SwapData_ExtALG
<LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_PowerON_ExtALG
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexStrToAS7000
<LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_Setmode
</UL>

<P><STRONG><a name="[263]"></a>WriteDeviceCommID</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, datastoreinside.o(i.WriteDeviceCommID))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = WriteDeviceCommID &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceCommIDCmdCB
</UL>

<P><STRONG><a name="[3c8]"></a>WriteEnable</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, extspiflash.o(i.WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WriteEnable &rArr; SPI_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Write
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ChipErase
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockGlobalBlockProtection
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PageWrite
</UL>

<P><STRONG><a name="[15d]"></a>WriteHexStrToAS7000</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, as7000_update.o(i.WriteHexStrToAS7000))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = WriteHexStrToAS7000 &rArr; ReadData_AS7000 &rArr; HRM_I2cMultipleByteRead &rArr; HRM_I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteData_AS7000
<LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadData_AS7000
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_upgrade
</UL>

<P><STRONG><a name="[38f]"></a>WriteSitRemiandSetting</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, datastoreinside.o(i.WriteSitRemiandSetting))
<BR><BR>[Stack]<UL><LI>Max Depth = 604<LI>Call Chain = WriteSitRemiandSetting &rArr; WRITE_USER_PARAMETER &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDeviceSwitchSettingCB
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SedentarinessRemindCB
</UL>

<P><STRONG><a name="[3fb]"></a>WriteWatchId</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, datastoreinside.o(i.WriteWatchId))
<BR><BR>[Stack]<UL><LI>Max Depth = 452<LI>Call Chain = WriteWatchId &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
<LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWatchIdCB
</UL>

<P><STRONG><a name="[402]"></a>WriteWatchIdCB</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, neul18cmdpackage.o(i.WriteWatchIdCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 484<LI>Call Chain = WriteWatchIdCB &rArr; WriteWatchId &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyWatchId
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteWatchId
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WatchIDTest
</UL>

<P><STRONG><a name="[3f7]"></a>XmodemRevPktToSpiFlash</STRONG> (Thumb, 100 bytes, Stack size 152 bytes, app_uart_fifo.o(i.XmodemRevPktToSpiFlash))
<BR><BR>[Stack]<UL><LI>Max Depth = 588<LI>Call Chain = XmodemRevPktToSpiFlash &rArr; SpiFlash_Write &rArr; Flash_Write &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Write
<LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyPacketChecksum
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[3f5]"></a>ZT75xx_I2cReadData</STRONG> (Thumb, 98 bytes, Stack size 24 bytes, cypressi2c.o(i.ZT75xx_I2cReadData))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ZT75xx_I2cReadData &rArr; ZT75xx_I2cWriteCMD &rArr; C_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteCMD
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStop
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStart
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cSendByte
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cReceive
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cNoAck
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cAck
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Delayus
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_touchinfo
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_power_sequence
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpInit
</UL>

<P><STRONG><a name="[293]"></a>ZT75xx_I2cWriteCMD</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, cypressi2c.o(i.ZT75xx_I2cWriteCMD))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ZT75xx_I2cWriteCMD &rArr; C_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStop
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStart
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cSendByte
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Delayus
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_suspend
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_touchinfo
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQ_TOUCH_Recovery
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_resume
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cReadData
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_power_sequence
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpInit
</UL>

<P><STRONG><a name="[405]"></a>ZT75xx_I2cWriteDATA</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, cypressi2c.o(i.ZT75xx_I2cWriteDATA))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ZT75xx_I2cWriteDATA &rArr; C_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStop
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStart
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cSendByte
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Delayus
</UL>
<BR>[Called By]<UL><LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteREG
</UL>

<P><STRONG><a name="[3f3]"></a>ZT75xx_I2cWriteREG</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, cypressi2c.o(i.ZT75xx_I2cWriteREG))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ZT75xx_I2cWriteREG &rArr; ZT75xx_I2cWriteDATA &rArr; C_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteDATA
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_touchinfo
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_power_sequence
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpInit
</UL>

<P><STRONG><a name="[406]"></a>__0sprintf</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[53a]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[3f8]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[53b]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[53c]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[148]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[16f]"></a>__ARM_common_switch8</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, main.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_get_notif_attrs_response
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAncsAppMsg
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_ccid_command
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoRun
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpTestHandler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syncing_Handler
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportMmenuHandler
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialHomePageHandler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor_Handler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMmenuHandler
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SitRemindHandler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupAlertHandler
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHomePageHandler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshTimeUIFun
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkoutsMmenuHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationMmenuHandler
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallHomePageHandler
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MedalHandler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallHandler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrRemindHandler
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRMmenuHandler
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GoalOver_Handler
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHomePageHandler
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHomePageHandler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllHandler
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BtBleDisconnectHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_TO_CC2540_CallState
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppsMmenuHandler
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsSaveToFlash
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Handler
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadMenuHandler
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Handler
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMonthDays
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDialInCall_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsDelaySet
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepOverview_Handler
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSleep_Handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SportOverviewHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WristWakeUpHandler
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VirateHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerHandler
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialMessageHandler
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHomeHandler
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SocialClassHandler
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SettingHandler
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchingHandler
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchHandler
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMSHandler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetHandler
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindViewHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkDetailHandler
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotificationBoxHandler
<LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoReminderHandler
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoNewNotificationHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicHandler
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MissedCallAlertHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitsleepmodeHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitRecordWorkOutsHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;E_MailHandler
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeleteAncsHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyScheduleHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CameraHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BrightnessHandler
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryHandler
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppsBoxHandler
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoticeNumberCB
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVersionMsgCmdCB
<LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAndroidSocialType
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendFixedRemindMsg
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_set_mode
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bma2x2_set_bandwidth
</UL>

<P><STRONG><a name="[53d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[53e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[53f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[40a]"></a>_construct_command_packet_w2Args</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, bl_private.o(i._construct_command_packet_w2Args))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = _construct_command_packet_w2Args &rArr; _calcuate_framing_crc16 &rArr; _crc16_update
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calcuate_framing_crc16
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_write_memory
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_flash_erase_region
</UL>

<P><STRONG><a name="[40c]"></a>_construct_data_packet</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, bl_private.o(i._construct_data_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = _construct_data_packet &rArr; _calcuate_framing_crc16 &rArr; _crc16_update
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calcuate_framing_crc16
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_write_memory
</UL>

<P><STRONG><a name="[409]"></a>_crc16_update</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bl_private.o(i._crc16_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _crc16_update
</UL>
<BR>[Called By]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calcuate_framing_crc16
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_ping
</UL>

<P><STRONG><a name="[40e]"></a>_handle_general_response</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, bl_private.o(i._handle_general_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = _handle_general_response
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_write_memory
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_flash_erase_region
</UL>

<P><STRONG><a name="[414]"></a>_read_packet_and_send_sync</STRONG> (Thumb, 104 bytes, Stack size 40 bytes, bl_private.o(i._read_packet_and_send_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = _read_packet_and_send_sync &rArr; _read_packet &rArr; uart_recv_blocking &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_read_packet
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_calcuate_framing_crc16
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_send_sync
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_write_memory
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_flash_erase_region
</UL>

<P><STRONG><a name="[416]"></a>_send_packet_and_read_sync</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, bl_private.o(i._send_packet_and_read_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _send_packet_and_read_sync &rArr; uart_recv_blocking &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_blocking
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_recv_blocking
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_in_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_write_memory
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_flash_erase_region
</UL>

<P><STRONG><a name="[415]"></a>_send_sync</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, bl_private.o(i._send_sync))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = _send_sync &rArr; uart_send_blocking
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_send_blocking
</UL>
<BR>[Called By]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_ping
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_read_packet_and_send_sync
</UL>

<P><STRONG><a name="[249]"></a>app_error_handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, app_error.o(i.app_error_handler))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_ble_hrs_service_init
<LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsRunSystem
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_init
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_req_timeout_handler
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manage
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apple_notification_setup
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_init
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_error_handler
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apple_notification_error_handler
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_free
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_alloc
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_include_in_group
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_free
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_alloc
<LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_entry_action_execute
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsHwTimerUpdate
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsSetTaskEvent
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsTimerUpdate
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;intern_softdevice_events_execute
<LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_IRQHandler
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsClearTaskEvent
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgReceive
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgPush
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgExtract
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgEnqueue
<LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_4_malloc
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_4_free
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_slave_event_handle
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_init
</UL>

<P><STRONG><a name="[519]"></a>app_fifo_get</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_fifo.o(i.app_fifo_get))
<BR><BR>[Called By]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_recv_blocking
</UL>

<P><STRONG><a name="[48a]"></a>app_fifo_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_fifo.o(i.app_fifo_init))
<BR><BR>[Called By]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bootloader_init
</UL>

<P><STRONG><a name="[3f6]"></a>app_fifo_put</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, app_fifo.o(i.app_fifo_put))
<BR><BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[330]"></a>app_pwm_channel_duty_set</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, app_pwm.o(i.app_pwm_channel_duty_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_cycle_ticks_get
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_set
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_init
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetValue
</UL>

<P><STRONG><a name="[427]"></a>app_pwm_channel_duty_ticks_set</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, app_pwm.o(i.app_pwm_channel_duty_ticks_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_0or100
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_0or100
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_int_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_set
</UL>

<P><STRONG><a name="[426]"></a>app_pwm_cycle_ticks_get</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_pwm.o(i.app_pwm_cycle_ticks_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_pwm_cycle_ticks_get
</UL>
<BR>[Calls]<UL><LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_capture_get
</UL>
<BR>[Called By]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_set
</UL>

<P><STRONG><a name="[437]"></a>app_pwm_disable</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, app_pwm.o(i.app_pwm_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_pwm_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_disable
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_int_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_uninit
</UL>

<P><STRONG><a name="[332]"></a>app_pwm_enable</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, app_pwm.o(i.app_pwm_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = app_pwm_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_init
</UL>

<P><STRONG><a name="[331]"></a>app_pwm_init</STRONG> (Thumb, 364 bytes, Stack size 64 bytes, app_pwm.o(i.app_pwm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = app_pwm_init &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_init
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_alloc
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_alloc
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_set
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_dealloc
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pan73_workaround
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_us_to_ticks
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_init
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_extended_compare
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_int_disable
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_clear
<LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_is_init
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
</UL>
<BR>[Called By]<UL><LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_init
</UL>

<P><STRONG><a name="[32d]"></a>app_pwm_uninit</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_pwm.o(i.app_pwm_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = app_pwm_uninit &rArr; pwm_dealloc &rArr; nrf_drv_ppi_group_free
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_disable
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_dealloc
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pan73_workaround
</UL>
<BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Disable
</UL>

<P><STRONG><a name="[248]"></a>app_timer_create</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, app_timer.o(i.app_timer_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_timer_create
</UL>
<BR>[Called By]<UL><LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_init
</UL>

<P><STRONG><a name="[445]"></a>app_timer_init</STRONG> (Thumb, 164 bytes, Stack size 40 bytes, app_timer.o(i.app_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = app_timer_init &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24c]"></a>app_timer_start</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, app_timer.o(i.app_timer_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_start
</UL>

<P><STRONG><a name="[44b]"></a>app_timer_stop</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, app_timer.o(i.app_timer_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = app_timer_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_op_alloc
<LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;user_id_get
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
</UL>

<P><STRONG><a name="[1be]"></a>apple_notification_setup</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, main.o(i.apple_notification_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = apple_notification_setup &rArr; ble_ancs_c_notif_source_notif_enable &rArr; cccd_configure &rArr; tx_buffer_process
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_notif_source_notif_enable
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_data_source_notif_enable
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
</UL>

<P><STRONG><a name="[44e]"></a>bl_flash_erase_region</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, bl_erase_region.o(i.bl_flash_erase_region))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = bl_flash_erase_region &rArr; _read_packet_and_send_sync &rArr; _read_packet &rArr; uart_recv_blocking &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_send_packet_and_read_sync
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_read_packet_and_send_sync
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_general_response
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_construct_command_packet_w2Args
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_update
</UL>

<P><STRONG><a name="[44f]"></a>bl_ping</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, bl_ping.o(i.bl_ping))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bl_ping &rArr; uart_recv_blocking &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_send_sync
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_crc16_update
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_recv_blocking
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_in_ms
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_update
</UL>

<P><STRONG><a name="[450]"></a>bl_write_memory</STRONG> (Thumb, 168 bytes, Stack size 24 bytes, bl_write_memory.o(i.bl_write_memory))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = bl_write_memory &rArr; _read_packet_and_send_sync &rArr; _read_packet &rArr; uart_recv_blocking &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_construct_data_packet
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_send_packet_and_read_sync
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_read_packet_and_send_sync
<LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_handle_general_response
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_construct_command_packet_w2Args
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_update
</UL>

<P><STRONG><a name="[451]"></a>ble_advdata_set</STRONG> (Thumb, 90 bytes, Stack size 88 bytes, ble_advdata.o(i.ble_advdata_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
</UL>

<P><STRONG><a name="[422]"></a>ble_advertising_init</STRONG> (Thumb, 284 bytes, Stack size 16 bytes, ble_advertising.o(i.ble_advertising_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_peer_address_clear
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
</UL>

<P><STRONG><a name="[453]"></a>ble_advertising_on_ble_evt</STRONG> (Thumb, 134 bytes, Stack size 8 bytes, ble_advertising.o(i.ble_advertising_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = ble_advertising_on_ble_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBleTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[454]"></a>ble_advertising_on_sys_evt</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ble_advertising.o(i.ble_advertising_on_sys_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = ble_advertising_on_sys_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
</UL>

<P><STRONG><a name="[1b9]"></a>ble_advertising_start</STRONG> (Thumb, 470 bytes, Stack size 48 bytes, ble_advertising.o(i.ble_advertising_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_access_status_get
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;whitelist_has_entries
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_address_exists
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_peer_address_clear
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_sys_evt
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FLP_TurnOnBle
</UL>

<P><STRONG><a name="[4e2]"></a>ble_advertising_whitelist_reply</STRONG> (Thumb, 74 bytes, Stack size 20 bytes, ble_advertising.o(i.ble_advertising_whitelist_reply))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = ble_advertising_whitelist_reply
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
</UL>

<P><STRONG><a name="[509]"></a>ble_ancs_c_attr_add</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, ble_ancs_c.o(i.ble_ancs_c_attr_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_ancs_c_attr_add
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_init
</UL>

<P><STRONG><a name="[44d]"></a>ble_ancs_c_data_source_notif_enable</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ble_ancs_c.o(i.ble_ancs_c_data_source_notif_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_ancs_c_data_source_notif_enable &rArr; cccd_configure &rArr; tx_buffer_process
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cccd_configure
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apple_notification_setup
</UL>

<P><STRONG><a name="[459]"></a>ble_ancs_c_init</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, ble_ancs_c.o(i.ble_ancs_c_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ble_ancs_c_init &rArr; ble_db_discovery_evt_register
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_evt_register
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_init
</UL>

<P><STRONG><a name="[44c]"></a>ble_ancs_c_notif_source_notif_enable</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ble_ancs_c.o(i.ble_ancs_c_notif_source_notif_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_ancs_c_notif_source_notif_enable &rArr; cccd_configure &rArr; tx_buffer_process
</UL>
<BR>[Calls]<UL><LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cccd_configure
</UL>
<BR>[Called By]<UL><LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;apple_notification_setup
</UL>

<P><STRONG><a name="[45b]"></a>ble_ancs_c_on_ble_evt</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ble_ancs_c.o(i.ble_ancs_c_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ble_ancs_c_on_ble_evt &rArr; on_evt_gattc_notif &rArr; parse_get_notif_attrs_response &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buffer_process
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_evt_gattc_notif
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[4a2]"></a>ble_ancs_c_on_device_manager_evt</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ble_ancs_c.o(i.ble_ancs_c_on_device_manager_evt))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_evt_handler
</UL>

<P><STRONG><a name="[393]"></a>ble_ancs_c_request_attrs</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, ble_ancs_c.o(i.ble_ancs_c_request_attrs))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_ancs_c_request_attrs &rArr; ble_ancs_get_notif_attrs &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_get_notif_attrs
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_verify_notification_format
</UL>
<BR>[Called By]<UL><LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGetNotifAttributesTitleCmd
</UL>

<P><STRONG><a name="[45f]"></a>ble_ancs_get_notif_attrs</STRONG> (Thumb, 132 bytes, Stack size 32 bytes, ble_ancs_c.o(i.ble_ancs_get_notif_attrs))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ble_ancs_get_notif_attrs &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_decode
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buffer_process
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_request_attrs
</UL>

<P><STRONG><a name="[461]"></a>ble_ccids_init</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, ble_ccids.o(i.ble_ccids_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = ble_ccids_init &rArr; tx_channel_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_channel_char_add
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_channel_char_add
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_init
</UL>

<P><STRONG><a name="[464]"></a>ble_ccids_on_ble_evt</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, ble_ccids.o(i.ble_ccids_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 240<LI>Call Chain = ble_ccids_on_ble_evt &rArr; on_write &rArr; process_ccid_command &rArr; MotorRunTime &rArr; MotorRepeatRun &rArr; StopMotorRunTime &rArr; Set_Motor_LevelLow &rArr; PWM_SetValue &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_write
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_send_complete
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_connect
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[468]"></a>ble_conn_params_init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, ble_conn_params.o(i.ble_conn_params_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_conn_params_init &rArr; app_timer_create
</UL>
<BR>[Calls]<UL><LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_create
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[469]"></a>ble_conn_params_on_ble_evt</STRONG> (Thumb, 134 bytes, Stack size 24 bytes, ble_conn_params.o(i.ble_conn_params_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_conn_params_on_ble_evt &rArr; conn_params_negotiation &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[45a]"></a>ble_db_discovery_evt_register</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, ble_db_discovery.o(i.ble_db_discovery_evt_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ble_db_discovery_evt_register
</UL>
<BR>[Called By]<UL><LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_init
</UL>

<P><STRONG><a name="[4bf]"></a>ble_db_discovery_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ble_db_discovery.o(i.ble_db_discovery_init))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[46b]"></a>ble_db_discovery_on_ble_evt</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, ble_db_discovery.o(i.ble_db_discovery_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = ble_db_discovery_on_ble_evt &rArr; on_characteristic_discovery_rsp &rArr; on_srv_disc_completion &rArr; discovery_error_evt_trigger &rArr; registered_handler_get
</UL>
<BR>[Calls]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_srv_disc_completion
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_descriptor_discovery_rsp
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_characteristic_discovery_rsp
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_error_evt_trigger
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_complete_evt_trigger
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;characteristics_discover
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[178]"></a>ble_db_discovery_start</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, ble_db_discovery.o(i.ble_db_discovery_start))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_db_discovery_start
</UL>
<BR>[Called By]<UL><LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ancs_Discovery_Restart
</UL>

<P><STRONG><a name="[478]"></a>ble_hrs_heart_rate_measurement_send</STRONG> (Thumb, 82 bytes, Stack size 56 bytes, ble_hrs.o(i.ble_hrs_heart_rate_measurement_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ble_hrs_heart_rate_measurement_send &rArr; hrm_encode &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrm_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_ble_hrs_refresh_hr_val
</UL>

<P><STRONG><a name="[47a]"></a>ble_hrs_init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ble_hrs.o(i.ble_hrs_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = ble_hrs_init &rArr; heart_rate_measurement_char_add &rArr; hrm_encode &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_measurement_char_add
<LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;body_sensor_location_char_add
</UL>
<BR>[Called By]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_ble_hrs_service_init
</UL>

<P><STRONG><a name="[51a]"></a>ble_hrs_on_ble_evt</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, ble_hrs.o(i.ble_hrs_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = ble_hrs_on_ble_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_ble_hrs_on_ble_evt
</UL>

<P><STRONG><a name="[47d]"></a>ble_media_init</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, ble_media.o(i.ble_media_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ble_media_init &rArr; tx_media_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_media_char_add
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_media_char_add
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_init
</UL>

<P><STRONG><a name="[477]"></a>ble_media_on_ble_evt</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, ble_media.o(i.ble_media_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ble_media_on_ble_evt &rArr; MediaDataParseHandler &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaDataParseHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[1f2]"></a>ble_media_string_send</STRONG> (Thumb, 66 bytes, Stack size 32 bytes, ble_media.o(i.ble_media_string_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_media_string_send
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchForMobilePhones
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhbCB
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicSetting
<LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CameraControl
</UL>

<P><STRONG><a name="[480]"></a>ble_nus_init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ble_nus.o(i.ble_nus_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = ble_nus_init &rArr; rx_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_char_add
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rx_char_add
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_init
</UL>

<P><STRONG><a name="[474]"></a>ble_nus_on_ble_evt</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, ble_nus.o(i.ble_nus_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_nus_on_ble_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[2ea]"></a>ble_nus_string_send</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, ble_nus.o(i.ble_nus_string_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_nus_string_send
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwSendDataToBt
</UL>

<P><STRONG><a name="[1cf]"></a>bma2x2_get_bandwidth</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, bma2xx.o(i.bma2x2_get_bandwidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bma2x2_get_bandwidth
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1d4]"></a>bma2x2_get_fifo_data_sel</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, bma2xx.o(i.bma2x2_get_fifo_data_sel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bma2x2_get_fifo_data_sel
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1c9]"></a>bma2x2_get_fifo_mode</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, bma2xx.o(i.bma2x2_get_fifo_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bma2x2_get_fifo_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Sleep_SetConfig
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1d6]"></a>bma2x2_get_int_lvl</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, bma2xx.o(i.bma2x2_get_int_lvl))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bma2x2_get_int_lvl
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1d8]"></a>bma2x2_get_int_od</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, bma2xx.o(i.bma2x2_get_int_od))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bma2x2_get_int_od
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1cd]"></a>bma2x2_get_mode</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, bma2xx.o(i.bma2x2_get_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bma2x2_get_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Standby
</UL>

<P><STRONG><a name="[1d1]"></a>bma2x2_get_range</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, bma2xx.o(i.bma2x2_get_range))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bma2x2_get_range
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1da]"></a>bma2x2_get_thr</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, bma2xx.o(i.bma2x2_get_thr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bma2x2_get_thr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1c4]"></a>bma2x2_init</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, bma2xx.o(i.bma2x2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bma2x2_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Init
</UL>

<P><STRONG><a name="[2c0]"></a>bma2x2_read_accel_x</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, bma2xx.o(i.bma2x2_read_accel_x))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bma2x2_read_accel_x
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenDateTimeSetting
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenBond
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTest
</UL>

<P><STRONG><a name="[2c1]"></a>bma2x2_read_accel_y</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, bma2xx.o(i.bma2x2_read_accel_y))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bma2x2_read_accel_y
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenDateTimeSetting
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenBond
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTest
</UL>

<P><STRONG><a name="[2c2]"></a>bma2x2_read_accel_z</STRONG> (Thumb, 158 bytes, Stack size 16 bytes, bma2xx.o(i.bma2x2_read_accel_z))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bma2x2_read_accel_z
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenDateTimeSetting
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenBond
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTest
</UL>

<P><STRONG><a name="[1ce]"></a>bma2x2_set_bandwidth</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, bma2xx.o(i.bma2x2_set_bandwidth))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bma2x2_set_bandwidth &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1d3]"></a>bma2x2_set_fifo_data_sel</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, bma2xx.o(i.bma2x2_set_fifo_data_sel))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bma2x2_set_fifo_data_sel
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1ca]"></a>bma2x2_set_fifo_mode</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, bma2xx.o(i.bma2x2_set_fifo_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bma2x2_set_fifo_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Sleep_SetConfig
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1d5]"></a>bma2x2_set_int_lvl</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, bma2xx.o(i.bma2x2_set_int_lvl))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bma2x2_set_int_lvl
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1d7]"></a>bma2x2_set_int_od</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, bma2xx.o(i.bma2x2_set_int_od))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bma2x2_set_int_od
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1cc]"></a>bma2x2_set_mode</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, bma2xx.o(i.bma2x2_set_mode))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bma2x2_set_mode &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Standby
</UL>

<P><STRONG><a name="[1d0]"></a>bma2x2_set_range</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, bma2xx.o(i.bma2x2_set_range))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bma2x2_set_range
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1d2]"></a>bma2x2_set_shadow_dis</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, bma2xx.o(i.bma2x2_set_shadow_dis))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = bma2x2_set_shadow_dis
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1d9]"></a>bma2x2_set_thr</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, bma2xx.o(i.bma2x2_set_thr))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bma2x2_set_thr
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[1c5]"></a>bma2x2_soft_reset</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bma2xx.o(i.bma2x2_soft_reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bma2x2_soft_reset
</UL>
<BR>[Called By]<UL><LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Init
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bma250E_Step_SetConfig
</UL>

<P><STRONG><a name="[487]"></a>bond_data_load</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, device_manager_peripheral.o(i.bond_data_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = bond_data_load &rArr; pstorage_load &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[21a]"></a>bootloader_init</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, port_me.o(i.bootloader_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bootloader_init &rArr; BootloaderUartInitial
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BootloaderUartInitial
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_init
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateKl17
</UL>

<P><STRONG><a name="[475]"></a>bsp_btn_ble_on_ble_evt</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, bsp_btn_ble.o(i.bsp_btn_ble_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = bsp_btn_ble_on_ble_evt &rArr; advertising_buttons_configure &rArr; bsp_event_to_button_action_assign
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_to_button_action_assign
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_buttons_configure
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[420]"></a>bsp_event_to_button_action_assign</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, bsp.o(i.bsp_event_to_button_action_assign))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_buttons_configure
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
</UL>

<P><STRONG><a name="[30]"></a>delay_msec_bma2xx</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, bma2xx.o(i.delay_msec_bma2xx))
<BR>[Address Reference Count : 1]<UL><LI> bma2xx.o(i.Bma250E_Init)
</UL>
<P><STRONG><a name="[472]"></a>dm_ble_evt_handler</STRONG> (Thumb, 976 bytes, Stack size 96 bytes, device_manager_peripheral.o(i.dm_ble_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = dm_ble_evt_handler &rArr; device_instance_free &rArr; pstorage_clear &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; clear_operation_execute &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_free
<LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_find
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_allocate
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_context_store
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_init
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_find
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_evt_notify
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBleTaskId
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_handle_initialize
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_data_load
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[4a3]"></a>dm_device_delete_all</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, device_manager_peripheral.o(i.dm_device_delete_all))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = dm_device_delete_all &rArr; device_instance_free &rArr; pstorage_clear &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; clear_operation_execute &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_free
</UL>
<BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_evt_handler
</UL>

<P><STRONG><a name="[4aa]"></a>dm_handle_initialize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.dm_handle_initialize))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[4a6]"></a>dm_init</STRONG> (Thumb, 174 bytes, Stack size 40 bytes, device_manager_peripheral.o(i.dm_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = dm_init &rArr; pstorage_clear &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; clear_operation_execute &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;connection_instance_init
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
</UL>

<P><STRONG><a name="[4a7]"></a>dm_register</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, device_manager_peripheral.o(i.dm_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = dm_register &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
</UL>

<P><STRONG><a name="[1ba]"></a>dm_security_setup_req</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.dm_security_setup_req))
<BR><BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
</UL>

<P><STRONG><a name="[508]"></a>dm_security_status_req</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, device_manager_peripheral.o(i.dm_security_status_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dm_security_status_req
</UL>
<BR>[Called By]<UL><LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_req_timeout_handler
</UL>

<P><STRONG><a name="[4e1]"></a>dm_whitelist_create</STRONG> (Thumb, 164 bytes, Stack size 20 bytes, device_manager_peripheral.o(i.dm_whitelist_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = dm_whitelist_create
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_adv_evt
</UL>

<P><STRONG><a name="[21b]"></a>do_update</STRONG> (Thumb, 236 bytes, Stack size 1056 bytes, bl_update.o(i.do_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 1228<LI>Call Chain = do_update &rArr; READ_OTA_INFO &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;READ_OTA_INFO
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_write_memory
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_ping
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_flash_erase_region
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reset_device
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_enter_bootloader_mode
</UL>
<BR>[Called By]<UL><LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateKl17
</UL>

<P><STRONG><a name="[3c3]"></a>flickLeft</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, iqs263_handler.o(i.flickLeft))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = flickLeft &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderDispatch
</UL>

<P><STRONG><a name="[3c2]"></a>flickRight</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, iqs263_handler.o(i.flickRight))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = flickRight &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderDispatch
</UL>

<P><STRONG><a name="[11b]"></a>gOS_GetUTCTime</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, clockdriver.o(i.gOS_GetUTCTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gOS_GetUTCTime &rArr; osal_ConvertUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_ConvertUTCTime
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEvtInit
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCallerIDToBuf
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Handler
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowCharging
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryLow
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBatteryFull
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hearRate_state_check
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSitRemindEvent
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckMinuteRemindEvent
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHeartRate
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowUserRemind
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_MsgInterface
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDateTimeTest
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateTimeSettingCmdCB
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetPekingTime
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceDataWithBatTimeDis
<LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InterfaceBatTimeDis
<LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter_25hz
</UL>

<P><STRONG><a name="[241]"></a>gOS_SetUTCTime</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, clockdriver.o(i.gOS_SetUTCTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = gOS_SetUTCTime &rArr; osal_ConvertUTCSecs &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_ConvertUTCSecs
</UL>
<BR>[Called By]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRtcClock
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateTimeSettingCmdCB
</UL>

<P><STRONG><a name="[195]"></a>get_volume_level</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, volumehandler.o(i.get_volume_level))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = get_volume_level
</UL>
<BR>[Called By]<UL><LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetVolumeCmd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5BtInfoCB
</UL>

<P><STRONG><a name="[2e1]"></a>hearRate_state_check</STRONG> (Thumb, 340 bytes, Stack size 56 bytes, heartratehandler.o(i.hearRate_state_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = hearRate_state_check &rArr; CalcAccumulateTime &rArr; osal_ConvertUTCSecs &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrValueValid
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrStarting
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrIsRunning
<LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrGetValue
<LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrGetLastValueTime
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcAccumulateTime
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
</UL>

<P><STRONG><a name="[34]"></a>heartRate_Handler</STRONG> (Thumb, 256 bytes, Stack size 24 bytes, heartratehandler.o(i.heartRate_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 700<LI>Call Chain = heartRate_Handler &rArr; ShowHeartRate &rArr; InterfaceDataWithBatTimeDis &rArr; LCD_MainDataInterface &rArr; SPI_LCD_Enable &rArr; NordicPM &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckpCurrentHandler
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_clear_event
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHrTaskId
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hearRate_state_check
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrIsRunning
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrDisplayIsChg
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowHeartRate
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> alarmhandler.o(i.HRMmenuHandler)
</UL>
<P><STRONG><a name="[37a]"></a>intern_softdevice_events_execute</STRONG> (Thumb, 124 bytes, Stack size 24 bytes, softdevice_handler.o(i.intern_softdevice_events_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = intern_softdevice_events_execute
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI2_IRQHandler
</UL>

<P><STRONG><a name="[3e3]"></a>isSystemSupend</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, standbyhandler.o(i.isSystemSupend))
<BR><BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
</UL>

<P><STRONG><a name="[30f]"></a>lis3dh_wakeup</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, lis3dh.o(i.lis3dh_wakeup))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = lis3dh_wakeup &rArr; LIS3DH_SetODR &rArr; LIS3DH_WriteReg &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_WriteReg
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetODR
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetMode
<LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetFullScale
<LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_SetAxis
<LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LIS3DH_FIFOModeEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lis3dh_Init
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lis3dh_Step_SetConfig
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Lis3dh_Standby
</UL>

<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 506 bytes, Stack size 56 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1316<LI>Call Chain = main &rArr; CheckUpdateKl17 &rArr; do_update &rArr; READ_OTA_INFO &rArr; SpiFlash_Read &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsRunSystem
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsInitSystem
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_init
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_init
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_OTA_INFO
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VerifyWatchId
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserInfoInit
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateBleStatus
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockI2c
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInitial
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreDataInit
<LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepInit
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartKeyScan
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Init
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowOtaResult
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetRtcClock
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsInit
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWatchId
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadOtaSuccessFlag
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PowerStateInit
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_UpdateTime
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitMotorVibrate
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitAncsSmsParameter
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Interrupt_Initial
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Ota_Addr
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KL17_Version
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HR_AS7000_Version
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatVelue
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Free_NordicFlash
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EraseOtaSuccessFlag
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLogo
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableReset
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableKl17
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CInit
<LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_start
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_init
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEvtInit
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearCRCFlag
<LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAncsFlash
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUsbInDebounce
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BootloaderUartInitial
<LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bc5PowerPinInit
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatChargeInit
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateTP
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateKl17
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateAS7000
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckGsensorType
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_init
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gap_params_init
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
<LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;advertising_init
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[4c6]"></a>mem_4_free</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, heap_4.o(i.mem_4_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
</UL>
<BR>[Called By]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
</UL>

<P><STRONG><a name="[4c9]"></a>mem_4_malloc</STRONG> (Thumb, 206 bytes, Stack size 24 bytes, heap_4.o(i.mem_4_malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInsertBlockIntoFreeList
<LI><a href="#[4ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
<LI><a href="#[4c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMalloc
</UL>

<P><STRONG><a name="[1af]"></a>mem_retreat</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, bletask.o(i.mem_retreat))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mem_retreat
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAncsAppMsg
</UL>

<P><STRONG><a name="[15c]"></a>nrf_delay_ms</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, nrf_delay.o(i.nrf_delay_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_nrf_delay_c_532987f3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowOtaResult
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_KL17_Version
<LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_HR_AS7000_Version
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLogo
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableKl17
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_upgrade
<LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateAS7000
<LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckGsensorType
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_suspend
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStepCounter
<LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_resume
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_package
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTest
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;lis3dh_wakeup
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteHexStrToAS7000
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_recv_blocking
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_reset_device
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_in_ms
<LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_SetValue
</UL>

<P><STRONG><a name="[4cd]"></a>nrf_drv_common_irq_enable</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, nrf_drv_common.o(i.nrf_drv_common_irq_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_init
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
</UL>

<P><STRONG><a name="[43d]"></a>nrf_drv_gpiote_init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_gpiote_init &rArr; nrf_drv_common_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_free
<LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[43c]"></a>nrf_drv_gpiote_is_init</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_is_init))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[42e]"></a>nrf_drv_gpiote_out_init</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_out_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = nrf_drv_gpiote_out_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[4ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[432]"></a>nrf_drv_gpiote_out_task_addr_get</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_out_task_addr_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_gpiote_out_task_addr_get
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[42f]"></a>nrf_drv_gpiote_out_task_enable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_out_task_enable))
<BR><BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[507]"></a>nrf_drv_gpiote_out_task_force</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_out_task_force))
<BR><BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_0or100
</UL>

<P><STRONG><a name="[435]"></a>nrf_drv_gpiote_out_task_trigger</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_out_task_trigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_gpiote_out_task_trigger
</UL>
<BR>[Calls]<UL><LI><a href="#[4cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_port_get
</UL>
<BR>[Called By]<UL><LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[4d0]"></a>nrf_drv_gpiote_out_uninit</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, nrf_drv_gpiote.o(i.nrf_drv_gpiote_out_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_gpiote_out_uninit
</UL>
<BR>[Calls]<UL><LI><a href="#[4d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pin_in_use_by_te
<LI><a href="#[4cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;channel_free
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_dealloc
</UL>

<P><STRONG><a name="[430]"></a>nrf_drv_ppi_channel_alloc</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_channel_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nrf_drv_ppi_channel_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_channel
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[434]"></a>nrf_drv_ppi_channel_assign</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_channel_assign))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_ppi_channel_assign
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_channel
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_programmable_app_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_0or100
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[431]"></a>nrf_drv_ppi_channel_disable</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_channel_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_ppi_channel_disable &rArr; is_app_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_channel
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_programmable_app_channel
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_ppi_disable
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_channel_ppi_disable
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[4d5]"></a>nrf_drv_ppi_channel_enable</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_channel_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_ppi_channel_enable &rArr; is_app_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[4d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_channel
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_programmable_app_channel
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_0or100
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
</UL>

<P><STRONG><a name="[4d6]"></a>nrf_drv_ppi_channel_free</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_channel_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_ppi_channel_free
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
<LI><a href="#[4d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_programmable_app_channel
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_dealloc
</UL>

<P><STRONG><a name="[4d8]"></a>nrf_drv_ppi_channels_include_in_group</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_channels_include_in_group))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_group
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;are_app_channels
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_group
</UL>
<BR>[Called By]<UL><LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_include_in_group
</UL>

<P><STRONG><a name="[4db]"></a>nrf_drv_ppi_channels_remove_from_group</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_channels_remove_from_group))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_ppi_channels_remove_from_group
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_group
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
<LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;are_app_channels
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_group
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_0or100
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
</UL>

<P><STRONG><a name="[43e]"></a>nrf_drv_ppi_group_alloc</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_group_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nrf_drv_ppi_group_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_group
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[4dc]"></a>nrf_drv_ppi_group_disable</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_group_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_ppi_group_disable
</UL>
<BR>[Calls]<UL><LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_group
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
</UL>

<P><STRONG><a name="[4dd]"></a>nrf_drv_ppi_group_enable</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_group_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_ppi_group_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_group
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_group
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
</UL>

<P><STRONG><a name="[4de]"></a>nrf_drv_ppi_group_free</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_group_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = nrf_drv_ppi_group_free
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_allocated_group
<LI><a href="#[4d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
<LI><a href="#[4d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_group
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_dealloc
</UL>

<P><STRONG><a name="[43b]"></a>nrf_drv_ppi_init</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_drv_ppi.o(i.nrf_drv_ppi_init))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[436]"></a>nrf_drv_timer_capture_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_capture_get))
<BR><BR>[Called By]<UL><LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_cycle_ticks_get
</UL>

<P><STRONG><a name="[442]"></a>nrf_drv_timer_clear</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_clear))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[4df]"></a>nrf_drv_timer_compare</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, nrf_drv_timer.o(i.nrf_drv_timer_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_timer_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_0or100
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_extended_compare
</UL>

<P><STRONG><a name="[433]"></a>nrf_drv_timer_compare_event_address_get</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_compare_event_address_get))
<BR><BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_0or100
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_init
</UL>

<P><STRONG><a name="[439]"></a>nrf_drv_timer_compare_int_disable</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_compare_int_disable))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_ready_tick
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
<LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_disable
</UL>

<P><STRONG><a name="[42c]"></a>nrf_drv_timer_compare_int_enable</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, nrf_drv_timer.o(i.nrf_drv_timer_compare_int_enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nrf_drv_timer_compare_int_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_set
</UL>

<P><STRONG><a name="[438]"></a>nrf_drv_timer_disable</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_disable))
<BR><BR>[Called By]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_disable
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_uninit
</UL>

<P><STRONG><a name="[43a]"></a>nrf_drv_timer_enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_enable))
<BR><BR>[Called By]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_enable
</UL>

<P><STRONG><a name="[443]"></a>nrf_drv_timer_extended_compare</STRONG> (Thumb, 46 bytes, Stack size 20 bytes, nrf_drv_timer.o(i.nrf_drv_timer_extended_compare))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = nrf_drv_timer_extended_compare &rArr; nrf_drv_timer_compare
</UL>
<BR>[Calls]<UL><LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[440]"></a>nrf_drv_timer_init</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, nrf_drv_timer.o(i.nrf_drv_timer_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nrf_drv_timer_init &rArr; nrf_drv_common_irq_enable
</UL>
<BR>[Calls]<UL><LI><a href="#[4cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_common_irq_enable
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[4e0]"></a>nrf_drv_timer_uninit</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, nrf_drv_timer.o(i.nrf_drv_timer_uninit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nrf_drv_timer_uninit
</UL>
<BR>[Calls]<UL><LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_dealloc
</UL>

<P><STRONG><a name="[441]"></a>nrf_drv_timer_us_to_ticks</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrf_drv_timer.o(i.nrf_drv_timer_us_to_ticks))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[243]"></a>nus_data_Parse</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, simplegattprofile.o(i.nus_data_Parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = nus_data_Parse &rArr; SendRspCmd &rArr; BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRspCmd
<LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataParseHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
</UL>

<P><STRONG><a name="[8d]"></a>nus_data_handler</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, simplegattprofile.o(i.nus_data_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = nus_data_handler &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memcpy
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetClockTaskId
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_data_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.service_init)
</UL>
<P><STRONG><a name="[1b8]"></a>nus_data_init</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, simplegattprofile.o(i.nus_data_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = nus_data_init &rArr; osal_memset
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_data_handler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
</UL>

<P><STRONG><a name="[1ee]"></a>osal_ConvertUTCSecs</STRONG> (Thumb, 156 bytes, Stack size 24 bytes, clockdriver.o(i.osal_ConvertUTCSecs))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = osal_ConvertUTCSecs &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monthLength
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_SetUTCTime
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsGetUTCSecs
<LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalcAccumulateTime
</UL>

<P><STRONG><a name="[3eb]"></a>osal_ConvertUTCTime</STRONG> (Thumb, 258 bytes, Stack size 24 bytes, clockdriver.o(i.osal_ConvertUTCTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = osal_ConvertUTCTime &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;monthLength
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gOS_GetUTCTime
<LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StoreSleepDetailForDisplay
</UL>

<P><STRONG><a name="[27e]"></a>osal_clear_event</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, osaltaskevent.o(i.osal_clear_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osal_clear_event &rArr; pS_OsClearTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsClearTaskEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnicode_Stop
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenDateTimeSetting
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenBond
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syncing_Handler
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopSecondEvent
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopDisconnectQuitEvent
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchingHandler
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitsleepmodeHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitRecordWorkOutsHandler
</UL>

<P><STRONG><a name="[111]"></a>osal_memcpy</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, mem.o(i.osal_memcpy))
<BR><BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_data_handler
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_OTA_INFO
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAncsAppMsg
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaDataParseHandler
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_STEP_SLEEP_SUM
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_FLAG
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WRITE_USER_PARAMETER
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSenderInfo
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSMSuid
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsPollGetInfo
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulePollGetInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MisscallPollGetInfo
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingcallPollGetInfo
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmailPollGetInfo
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRemindData
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteSenderInfo
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteAncsUid
</UL>

<P><STRONG><a name="[310]"></a>osal_memset</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, osalmemory.o(i.osal_memset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osal_memset
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Uart0PacketParser
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaDataParseHandler
<LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaDataParse
<LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_data_init
<LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_data_Parse
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
</UL>

<P><STRONG><a name="[188]"></a>osal_set_event</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, osaltaskevent.o(i.osal_set_event))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsSetTaskEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nus_data_handler
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatVelue
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEvtInit
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MediaDataParseHandler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BlePktSendComplete
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSettingOkRspCmd
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSettingFailRspCmd
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoSleepMode
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenDateTimeSetting
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendsSuspendStateToBC5
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSuspendEvent
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendResumeEvent
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendNormalStateToBC5
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearInitMarkEvent
<LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUsbDisconnctedEvent
<LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUsbConnctedEvent
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBatteryChargeEvent
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryAdcMeasure
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartSecondEvent
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaProgMsg
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerHandler
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopRecordWork
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartRecordWork
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPayBalance
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPayAID
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PayPassthroughFromApp
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoHeartRateCB
</UL>

<P><STRONG><a name="[151]"></a>osal_start_timerEx</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, osaltimer.o(i.osal_start_timerEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsStartTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartKeyScan
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEvtInit
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUsbInDebounce
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAncsAppMsg
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sec_req_timeout_handler
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ancs_c_evt
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_evt_handler
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyEventHandler
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepEventHandler
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepEventHandler
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwEventHandler
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayEventHandler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResume
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetSendInfo
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemoveSMS
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsSmsGetInfo
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsScheduleGetInfo
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsRemoveFunction
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsMisscalledGetInfo
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsIncomingcalledGetInfo
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsEmailGetInfo
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PreHandler
<LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepUploadData
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenDateTimeSetting
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSuspend
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetScanKeyValidFlag
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StepUploadData
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartStep
<LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkUploadData
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_touchinfo
<LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRepeatRun
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetFactorySettingEvent
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOnUsbStateEvent
<LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckPowerOffUsbStateEvent
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpTestHandler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syncing_Handler
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepMonitor_Handler
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindHandler
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallHandler
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_TO_CC2540_CallState
<LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsSaveToFlash
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Time_Handler
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetRingModeCmd
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SimulatePowerOffKey
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BatteryStatusHandler
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetVolumeCmd
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Handler
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadVolumeHandler
<LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AS7000_GetHeartRateData
<LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateUploadData
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsPollGetInfo
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulePollGetInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MisscallPollGetInfo
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingcallPollGetInfo
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmailPollGetInfo
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HandleTouchKey
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalKeyDistribute
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckSitRemindEvent
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetCallOpCmd
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneDisplay
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_ShowPhoneSoundStatus
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsDelaySend
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitSleep_Handler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
<LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowShortCut
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowMusicControl
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayLineUnicode
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerHandler
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartRecordWork
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartDisconnectQuitEvent
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchingHandler
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RestartHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicHandler
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCall_Recovery
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitsleepmodeHandler
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ExitRecordWorkOutsHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CameraHandler
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5BtInfoCB
<LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SleepContorl
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NoticeNumberCB
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NFCTest
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LEDTest
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDTest
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_CSN
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportTotalCntCB
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BindingEndCmdCB
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BindingBeginCmdCB
</UL>

<P><STRONG><a name="[113]"></a>osal_stop_timerEx</STRONG> (Thumb, 8 bytes, Stack size 4 bytes, osaltimer.o(i.osal_stop_timerEx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = osal_stop_timerEx &rArr; pS_OsStopTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsStopTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
<LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRunTime
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
<LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemResume
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Standby_Handler
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayUnicode_Stop
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CancelSendSuspendEvent
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
<LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenDateTimeSetting
<LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalModeWhenBond
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GotoNormalMode
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopMotorRunTime
<LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSuspend
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
<LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopStep
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CloseStep
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopKeyScan
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TpTestHandler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Syncing_Handler
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetupAlertHandler
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SaveCallerIDToBuf
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleBondChooseHandler
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_TO_CC2540_CallState
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Volume_Handler
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAncsUid
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalKeyDistribute
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopSecondEvent
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneRing_Handler
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCall_Handler
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PhoneCallOut_Handler
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Change_ShowPhoneSoundStatus
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heartRate_Handler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerHandler
<LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopRecordWork
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopDisconnectQuitEvent
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SearchingHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CameraHandler
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBC5StartSiriCB
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBC5StandbyCB
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBC5RingModeCB
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBC5PhoneStateCB
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetBC5AudioVollCB
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5CallerInfoCB
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5BtInfoCB
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MusicSettingsCmdCB
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCDTest
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoHeartRateCB
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CParse
</UL>

<P><STRONG><a name="[4eb]"></a>pS_OsAddTimer</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, osaltimer.o(i.pS_OsAddTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMalloc
<LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFindTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[4e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsStartTimer
</UL>

<P><STRONG><a name="[4e7]"></a>pS_OsClearTaskEvent</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, osaltaskevent.o(i.pS_OsClearTaskEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pS_OsClearTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFindTask
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
</UL>
<BR>[Called By]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_clear_event
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgReceive
</UL>

<P><STRONG><a name="[4ef]"></a>pS_OsClockUpdate</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, osalclock.o(i.pS_OsClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pS_OsClockUpdate &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsTimeClockUpdate
</UL>

<P><STRONG><a name="[500]"></a>pS_OsDeleteTimer</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, osaltimer.o(i.pS_OsDeleteTimer))
<BR><BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsStopTimer
</UL>

<P><STRONG><a name="[4ed]"></a>pS_OsFindTask</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, osaltaskevent.o(i.pS_OsFindTask))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsSetTaskEvent
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsClearTaskEvent
</UL>

<P><STRONG><a name="[4ec]"></a>pS_OsFindTimer</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, osaltimer.o(i.pS_OsFindTimer))
<BR><BR>[Called By]<UL><LI><a href="#[4ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsStopTimer
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsAddTimer
</UL>

<P><STRONG><a name="[16c]"></a>pS_OsFree</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, osalmemory.o(i.pS_OsFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_4_free
</UL>
<BR>[Called By]<UL><LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsTimerUpdate
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsConnectedGetAllInfo
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadMultiHandler
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler_WithoutDisplay
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnloadHandler
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgDeallocate
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FreeReceiveBuff
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearCallerIDFormApk
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsPollGetInfo
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SchedulePollGetInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MisscallPollGetInfo
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingcallPollGetInfo
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EmailPollGetInfo
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemFree_CallerInfo
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemAlloc_CallerInfo
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallNoticePhoneHandlerOutHandler
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckAndReplaceUnknownNumber
</UL>

<P><STRONG><a name="[245]"></a>pS_OsGetSysTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, osalclock.o(i.pS_OsGetSysTick))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClockEventHandler
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerHandler
<LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartRecordWork
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RecordWorkHandler
</UL>

<P><STRONG><a name="[2b6]"></a>pS_OsGetUTCSecs</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, clocktask.o(i.pS_OsGetUTCSecs))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pS_OsGetUTCSecs &rArr; osal_ConvertUTCSecs &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_ConvertUTCSecs
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTimeStamp
</UL>

<P><STRONG><a name="[4fb]"></a>pS_OsHalProcessPoll</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, osalport.o(i.pS_OsHalProcessPoll))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsRunSystem
</UL>

<P><STRONG><a name="[24a]"></a>pS_OsHwTimerUpdate</STRONG> (Thumb, 132 bytes, Stack size 16 bytes, osalclock.o(i.pS_OsHwTimerUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pS_OsHwTimerUpdate
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Clock_second_handle
</UL>

<P><STRONG><a name="[4c1]"></a>pS_OsInitSystem</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, osal.o(i.pS_OsInitSystem))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = pS_OsInitSystem &rArr; pS_OsTaskRegList &rArr; pS_OsRegTask &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[4f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsTaskInit
<LI><a href="#[4f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsTaskHeadInit
<LI><a href="#[4f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgInit
<LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsTaskRegList
<LI><a href="#[4f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsTimerInit
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1ae]"></a>pS_OsMalloc</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, osalmemory.o(i.pS_OsMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_4_malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAncsAppMsg
<LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsRegTask
<LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsAddTimer
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LoadHandler
<LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgMalloc
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemAlloc_CallerInfo
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IncomingCallNoticePhoneHandlerOutHandler
<LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckAndReplaceUnknownNumber
</UL>

<P><STRONG><a name="[222]"></a>pS_OsMsgDeallocate</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, osalmessage.o(i.pS_OsMsgDeallocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
</UL>
<BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TouchKeyEventHandler
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMsg
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAppTaskMessage
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgEnqueuePush
</UL>

<P><STRONG><a name="[4f5]"></a>pS_OsMsgEnqueue</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, osalmessage.o(i.pS_OsMsgEnqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pS_OsMsgEnqueue
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgEnqueuePush
</UL>

<P><STRONG><a name="[4f9]"></a>pS_OsMsgExtract</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, osalmessage.o(i.pS_OsMsgExtract))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = pS_OsMsgExtract
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgReceive
</UL>

<P><STRONG><a name="[4f3]"></a>pS_OsMsgInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, osalmessage.o(i.pS_OsMsgInit))
<BR><BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsInitSystem
</UL>

<P><STRONG><a name="[394]"></a>pS_OsMsgMalloc</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, osalmessage.o(i.pS_OsMsgMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pS_OsMsgMalloc &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendTouchKeyMsg
</UL>

<P><STRONG><a name="[4f8]"></a>pS_OsMsgPush</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, osalmessage.o(i.pS_OsMsgPush))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pS_OsMsgPush
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgEnqueuePush
</UL>

<P><STRONG><a name="[221]"></a>pS_OsMsgReceive</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, osalmessage.o(i.pS_OsMsgReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pS_OsMsgReceive &rArr; pS_OsMsgExtract
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsSetTaskEvent
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsClearTaskEvent
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgExtract
<LI><a href="#[4f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
</UL>
<BR>[Called By]<UL><LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetMsg
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CleanAppTaskMessage
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchKeyMsg
</UL>

<P><STRONG><a name="[395]"></a>pS_OsMsgSend</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, osalmessage.o(i.pS_OsMsgSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgEnqueuePush
</UL>
<BR>[Called By]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendTouchKeyMsg
</UL>

<P><STRONG><a name="[4fd]"></a>pS_OsNextActiveTask</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, osaltaskevent.o(i.pS_OsNextActiveTask))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsRunSystem
</UL>

<P><STRONG><a name="[4fa]"></a>pS_OsRegTask</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, osaltaskevent.o(i.pS_OsRegTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = pS_OsRegTask &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[4f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsTaskRegList
</UL>

<P><STRONG><a name="[4c5]"></a>pS_OsRunSystem</STRONG> (Thumb, 202 bytes, Stack size 24 bytes, osal.o(i.pS_OsRunSystem))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = pS_OsRunSystem &rArr; pS_OsTimeClockUpdate &rArr; pS_OsTimerUpdate &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;power_manage
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsWatchDogFeed
<LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsTimeClockUpdate
<LI><a href="#[4fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsNextActiveTask
<LI><a href="#[4fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsHalProcessPoll
<LI><a href="#[4fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4e8]"></a>pS_OsSetTaskEvent</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, osaltaskevent.o(i.pS_OsSetTaskEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[4ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFindTask
<LI><a href="#[4ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;current_int_priority_get
</UL>
<BR>[Called By]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_set_event
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsTimerUpdate
<LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgReceive
<LI><a href="#[4f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgEnqueuePush
</UL>

<P><STRONG><a name="[4e9]"></a>pS_OsStartTimer</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, osaltimer.o(i.pS_OsStartTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[4eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsAddTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
</UL>

<P><STRONG><a name="[4ea]"></a>pS_OsStopTimer</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, osaltimer.o(i.pS_OsStopTimer))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = pS_OsStopTimer
</UL>
<BR>[Calls]<UL><LI><a href="#[4ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFindTimer
<LI><a href="#[500]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsDeleteTimer
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
</UL>

<P><STRONG><a name="[4f1]"></a>pS_OsTaskHeadInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, osaltaskevent.o(i.pS_OsTaskHeadInit))
<BR><BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsInitSystem
</UL>

<P><STRONG><a name="[4f4]"></a>pS_OsTaskInit</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, osaltaskevent.o(i.pS_OsTaskInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = pS_OsTaskInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsInitSystem
</UL>

<P><STRONG><a name="[4f2]"></a>pS_OsTaskRegList</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, osal.o(i.pS_OsTaskRegList))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = pS_OsTaskRegList &rArr; pS_OsRegTask &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[4fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsRegTask
</UL>
<BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsInitSystem
</UL>

<P><STRONG><a name="[4fc]"></a>pS_OsTimeClockUpdate</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, osalclock.o(i.pS_OsTimeClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = pS_OsTimeClockUpdate &rArr; pS_OsTimerUpdate &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[4ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsClockUpdate
<LI><a href="#[501]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsTimerUpdate
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsRunSystem
</UL>

<P><STRONG><a name="[4f0]"></a>pS_OsTimerInit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, osaltimer.o(i.pS_OsTimerInit))
<BR><BR>[Called By]<UL><LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsInitSystem
</UL>

<P><STRONG><a name="[501]"></a>pS_OsTimerUpdate</STRONG> (Thumb, 338 bytes, Stack size 32 bytes, osaltimer.o(i.pS_OsTimerUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = pS_OsTimerUpdate &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetAppTaskId
<LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsSetTaskEvent
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsFree
</UL>
<BR>[Called By]<UL><LI><a href="#[4fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsTimeClockUpdate
</UL>

<P><STRONG><a name="[22c]"></a>pS_OsWatchDogFeed</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, osalport.o(i.pS_OsWatchDogFeed))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsRunSystem
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearAllReminders
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitBandInfo
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemindsDel
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgMsgCmdCB
<LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRemindsNote
</UL>

<P><STRONG><a name="[4ff]"></a>power_manage</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(i.power_manage))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = power_manage
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsRunSystem
</UL>

<P><STRONG><a name="[455]"></a>pstorage_access_status_get</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, pstorage.o(i.pstorage_access_status_get))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[488]"></a>pstorage_block_identifier_get</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, pstorage.o(i.pstorage_block_identifier_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pstorage_block_identifier_get
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_free
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_context_store
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_data_load
</UL>

<P><STRONG><a name="[4a0]"></a>pstorage_clear</STRONG> (Thumb, 160 bytes, Stack size 32 bytes, pstorage.o(i.pstorage_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = pstorage_clear &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; clear_operation_execute &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_enqueue
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_free
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
</UL>

<P><STRONG><a name="[4a5]"></a>pstorage_init</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, pstorage.o(i.pstorage_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = pstorage_init &rArr; pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_element_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_manager_init
</UL>

<P><STRONG><a name="[489]"></a>pstorage_load</STRONG> (Thumb, 162 bytes, Stack size 40 bytes, pstorage.o(i.pstorage_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = pstorage_load &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_load
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bond_data_load
</UL>

<P><STRONG><a name="[4ad]"></a>pstorage_register</STRONG> (Thumb, 170 bytes, Stack size 24 bytes, pstorage.o(i.pstorage_register))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pstorage_register &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
</UL>

<P><STRONG><a name="[75]"></a>pstorage_store</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, pstorage.o(i.pstorage_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = pstorage_store &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; clear_operation_execute &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_enqueue
</UL>
<BR>[Address Reference Count : 2]<UL><LI> device_manager_peripheral.o(i.device_context_store)
<LI> device_manager_peripheral.o(i.gatts_context_store)
</UL>
<P><STRONG><a name="[504]"></a>pstorage_sys_event_handler</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, pstorage.o(i.pstorage_sys_event_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = pstorage_sys_event_handler &rArr; flash_operation_success_run &rArr; clear_post_processing_run &rArr; command_end_procedure_run &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_success_run
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify_error_state_transit
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_evt_dispatch
</UL>

<P><STRONG><a name="[74]"></a>pstorage_update</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, pstorage.o(i.pstorage_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = pstorage_update &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; clear_operation_execute &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[502]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_word_aligned
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_enqueue
</UL>
<BR>[Address Reference Count : 2]<UL><LI> device_manager_peripheral.o(i.device_context_store)
<LI> device_manager_peripheral.o(i.gatts_context_store)
</UL>
<P><STRONG><a name="[6e]"></a>pwm_ready_tick</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, app_pwm.o(i.pwm_ready_tick))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pwm_ready_tick
</UL>
<BR>[Calls]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_int_disable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> app_pwm.o(i.app_pwm_init)
</UL>
<P><STRONG><a name="[2f]"></a>read_burst_bma2xx</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, bma2xx.o(i.read_burst_bma2xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = read_burst_bma2xx &rArr; I2cMultipleByteRead &rArr; I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteRead
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bma2xx.o(i.Bma250E_Init)
</UL>
<P><STRONG><a name="[2e]"></a>read_bus_bma2xx</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bma2xx.o(i.read_bus_bma2xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = read_bus_bma2xx &rArr; I2cMultipleByteRead &rArr; I2cReceive
</UL>
<BR>[Calls]<UL><LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteRead
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bma2xx.o(i.Bma250E_Init)
</UL>
<P><STRONG><a name="[1bd]"></a>sec_req_timeout_handler</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, main.o(i.sec_req_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = sec_req_timeout_handler &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[508]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_security_status_req
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBleTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleEventHandler
</UL>

<P><STRONG><a name="[3fd]"></a>showUpgrade</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ui.o(i.showUpgrade))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = showUpgrade
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMap
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
</UL>

<P><STRONG><a name="[3fc]"></a>showUpgradeFail</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, ui.o(i.showUpgradeFail))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = showUpgradeFail
</UL>
<BR>[Calls]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearScreen
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisplayMap
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateFontLibHandler
</UL>

<P><STRONG><a name="[3c5]"></a>slideEvent</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, iqs263_handler.o(i.slideEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = slideEvent &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderDispatch
</UL>

<P><STRONG><a name="[8e]"></a>softdevice_assertion_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, softdevice_handler.o(i.softdevice_assertion_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = softdevice_assertion_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> softdevice_handler.o(i.softdevice_handler_init)
</UL>
<P><STRONG><a name="[485]"></a>softdevice_ble_evt_handler_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_ble_evt_handler_set))
<BR><BR>[Called By]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[484]"></a>softdevice_handler_init</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, softdevice_handler.o(i.softdevice_handler_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = softdevice_handler_init
</UL>
<BR>[Called By]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[486]"></a>softdevice_sys_evt_handler_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, softdevice_handler.o(i.softdevice_sys_evt_handler_set))
<BR><BR>[Called By]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_stack_init
</UL>

<P><STRONG><a name="[4be]"></a>spi_init</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, protocol.o(i.spi_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = spi_init &rArr; spi_slave_buffers_set &rArr; sm_state_change &rArr; state_entry_action_execute
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[50e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_slave_init
<LI><a href="#[50d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_slave_evt_handler_register
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_slave_buffers_set
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_slave_buffers_init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[513]"></a>spi_init_package</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, protocol.o(i.spi_init_package))
<BR><BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_cmd
</UL>

<P><STRONG><a name="[3d1]"></a>spi_receive_data</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, protocol.o(i.spi_receive_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = spi_receive_data &rArr; WaitForTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForTimeout
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
</UL>

<P><STRONG><a name="[3d0]"></a>spi_send_cmd</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, protocol.o(i.spi_send_cmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_package
<LI><a href="#[513]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init_package
<LI><a href="#[515]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL17_Power_Suspend
<LI><a href="#[512]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KL17_Power_Resume
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Spi_Send_MSG
</UL>

<P><STRONG><a name="[514]"></a>spi_send_package</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, protocol.o(i.spi_send_package))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[50f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_slave_buffers_init
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForTimeout
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_cmd
</UL>

<P><STRONG><a name="[510]"></a>spi_slave_buffers_set</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, spi_slave.o(i.spi_slave_buffers_set))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = spi_slave_buffers_set &rArr; sm_state_change &rArr; state_entry_action_execute
</UL>
<BR>[Calls]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_slave_event_handle
</UL>

<P><STRONG><a name="[50d]"></a>spi_slave_evt_handler_register</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, spi_slave.o(i.spi_slave_evt_handler_register))
<BR><BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[50e]"></a>spi_slave_init</STRONG> (Thumb, 192 bytes, Stack size 20 bytes, spi_slave.o(i.spi_slave_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = spi_slave_init
</UL>
<BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
</UL>

<P><STRONG><a name="[413]"></a>sys_delay_in_ms</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, port_me.o(i.sys_delay_in_ms))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sys_delay_in_ms &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_read_packet
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_ping
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_send_packet_and_read_sync
</UL>

<P><STRONG><a name="[4af]"></a>sys_enter_bootloader_mode</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, port_me.o(i.sys_enter_bootloader_mode))
<BR><BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_update
</UL>

<P><STRONG><a name="[4b0]"></a>sys_reset_device</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, port_me.o(i.sys_reset_device))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sys_reset_device &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;do_update
</UL>

<P><STRONG><a name="[3c4]"></a>tapEvent</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, iqs263_handler.o(i.tapEvent))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = tapEvent &rArr; HalKeyDistribute &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HalKeyDistribute
</UL>
<BR>[Called By]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SliderDispatch
</UL>

<P><STRONG><a name="[21e]"></a>ts_upgrade_firmware</STRONG> (Thumb, 516 bytes, Stack size 56 bytes, cypressi2c.o(i.ts_upgrade_firmware))
<BR><BR>[Stack]<UL><LI>Max Depth = 220<LI>Call Chain = ts_upgrade_firmware &rArr; SpiFlash_Read_TP_Firmware &rArr; Flash_Read &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteCMD
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OtaSendCmd
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_TP_Firmware
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Suspend
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Resume
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_power_control
<LI><a href="#[518]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_write_data
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteREG
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cReadData
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_DELAY_MS
<LI><a href="#[516]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_power_sequence
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_US
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckUpdateTP
</UL>

<P><STRONG><a name="[518]"></a>ts_write_data</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, cypressi2c.o(i.ts_write_data))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ts_write_data &rArr; C_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStop
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStart
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cSendByte
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_Delayus
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
</UL>

<P><STRONG><a name="[412]"></a>uart_recv_blocking</STRONG> (Thumb, 74 bytes, Stack size 24 bytes, port_me.o(i.uart_recv_blocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uart_recv_blocking &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[519]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_fifo_get
</UL>
<BR>[Called By]<UL><LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_read_packet
<LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bl_ping
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_send_packet_and_read_sync
</UL>

<P><STRONG><a name="[417]"></a>uart_send_blocking</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, port_me.o(i.uart_send_blocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = uart_send_blocking
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_send_sync
<LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_send_packet_and_read_sync
</UL>

<P><STRONG><a name="[473]"></a>usr_ble_hrs_on_ble_evt</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usr_ble_hrs.o(i.usr_ble_hrs_on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = usr_ble_hrs_on_ble_evt &rArr; ble_hrs_on_ble_evt
</UL>
<BR>[Calls]<UL><LI><a href="#[51a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_on_ble_evt
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[2e0]"></a>usr_ble_hrs_refresh_hr_val</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usr_ble_hrs.o(i.usr_ble_hrs_refresh_hr_val))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = usr_ble_hrs_refresh_hr_val &rArr; ble_hrs_heart_rate_measurement_send &rArr; hrm_encode &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_heart_rate_measurement_send
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HrEventHandler
</UL>

<P><STRONG><a name="[50a]"></a>usr_ble_hrs_service_init</STRONG> (Thumb, 92 bytes, Stack size 32 bytes, usr_ble_hrs.o(i.usr_ble_hrs_service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = usr_ble_hrs_service_init &rArr; ble_hrs_init &rArr; heart_rate_measurement_char_add &rArr; hrm_encode &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_init
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_init
</UL>

<P><STRONG><a name="[2d]"></a>write_bus_bma2xx</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, bma2xx.o(i.write_bus_bma2xx))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = write_bus_bma2xx &rArr; I2cMultipleByteWrite &rArr; I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cMultipleByteWrite
</UL>
<BR>[Address Reference Count : 1]<UL><LI> bma2xx.o(i.Bma250E_Init)
</UL>
<P><STRONG><a name="[517]"></a>zinitix_power_control</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, cypressi2c.o(i.zinitix_power_control))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = zinitix_power_control &rArr; C_DELAY_MS
</UL>
<BR>[Calls]<UL><LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_DELAY_MS
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_set
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_gpio_pin_clear
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
</UL>

<P><STRONG><a name="[324]"></a>zinitix_resume</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, cypressi2c.o(i.zinitix_resume))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = zinitix_resume &rArr; CypressI2CInit &rArr; TpInit &rArr; ZT75xx_I2cWriteREG &rArr; ZT75xx_I2cWriteDATA &rArr; C_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CInit
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteCMD
</UL>
<BR>[Called By]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NordicPM
</UL>

<P><STRONG><a name="[3f0]"></a>zinitix_suspend</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, cypressi2c.o(i.zinitix_suspend))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = zinitix_suspend &rArr; ZT75xx_I2cWriteCMD &rArr; C_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_delay_ms
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteCMD
</UL>
<BR>[Called By]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemSuspend
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemPowerOff
</UL>

<P><STRONG><a name="[202]"></a>zinitix_touchinfo</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, cypressi2c.o(i.zinitix_touchinfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 316<LI>Call Chain = zinitix_touchinfo &rArr; SetSystemSuspendTime &rArr; SetBrightness &rArr; LCD_MainDataInterface_NoDisplay &rArr; Spi_Send_MSG &rArr; spi_send_cmd &rArr; spi_send_package &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSystemSuspendTime
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteCMD
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTouchKeyTaskId
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQ_USB_Recovery
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteREG
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cReadData
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CParse
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCypressEvent
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[421]"></a>advertising_init</STRONG> (Thumb, 102 bytes, Stack size 96 bytes, main.o(i.advertising_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = advertising_init &rArr; ble_advertising_init &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8c]"></a>apple_notification_error_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(i.apple_notification_error_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = apple_notification_error_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.service_init)
</UL>
<P><STRONG><a name="[71]"></a>ble_evt_dispatch</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, main.o(i.ble_evt_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 280<LI>Call Chain = ble_evt_dispatch &rArr; dm_ble_evt_handler &rArr; device_instance_free &rArr; pstorage_clear &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; clear_operation_execute &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_ble_hrs_on_ble_evt
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_on_ble_evt
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_media_on_ble_evt
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
<LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ccids_on_ble_evt
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_on_ble_evt
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_ble_evt
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_ble_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[483]"></a>ble_stack_init</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, main.o(i.ble_stack_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ble_stack_init &rArr; softdevice_handler_init
</UL>
<BR>[Calls]<UL><LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_sys_evt_handler_set
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_handler_init
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;softdevice_ble_evt_handler_set
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>conn_params_error_handler</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, main.o(i.conn_params_error_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = conn_params_error_handler
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[76]"></a>device_manager_evt_handler</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, main.o(i.device_manager_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = device_manager_evt_handler &rArr; dm_device_delete_all &rArr; device_instance_free &rArr; pstorage_clear &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; clear_operation_execute &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_device_delete_all
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_on_device_manager_evt
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBleTaskId
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.device_manager_init)
</UL>
<P><STRONG><a name="[4a4]"></a>device_manager_init</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, main.o(i.device_manager_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = device_manager_init &rArr; dm_init &rArr; pstorage_clear &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; clear_operation_execute &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_register
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4b7]"></a>gap_params_init</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, main.o(i.gap_params_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = gap_params_init
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>on_adv_evt</STRONG> (Thumb, 84 bytes, Stack size 88 bytes, main.o(i.on_adv_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = on_adv_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[4e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_whitelist_create
<LI><a href="#[4e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_whitelist_reply
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.advertising_init)
</UL>
<P><STRONG><a name="[8b]"></a>on_ancs_c_evt</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, main.o(i.on_ancs_c_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = on_ancs_c_evt &rArr; GetNotifAttributesTitleInf &rArr; Send_AncsConnectedGetAllInfo &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_AncsConnectedGetAllInfo
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetNotifAttributesTitleInf
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBleTaskId
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BleAncsAppMsg
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.service_init)
</UL>
<P><STRONG><a name="[476]"></a>on_ble_evt</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, main.o(i.on_ble_evt))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = on_ble_evt &rArr; osal_start_timerEx &rArr; pS_OsStartTimer &rArr; pS_OsAddTimer &rArr; pS_OsMalloc &rArr; mem_4_malloc &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_stop_timerEx
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_start_timerEx
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBleTaskId
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_evt_dispatch
</UL>

<P><STRONG><a name="[4c0]"></a>service_init</STRONG> (Thumb, 346 bytes, Stack size 24 bytes, main.o(i.service_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = service_init &rArr; usr_ble_hrs_service_init &rArr; ble_hrs_init &rArr; heart_rate_measurement_char_add &rArr; hrm_encode &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[50a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;usr_ble_hrs_service_init
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_init
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_media_init
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ccids_init
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_init
<LI><a href="#[509]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_attr_add
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[72]"></a>sys_evt_dispatch</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(i.sys_evt_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = sys_evt_dispatch &rArr; ble_advertising_on_sys_evt &rArr; ble_advertising_start &rArr; ble_advdata_set &rArr; adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_sys_event_handler
<LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_on_sys_evt
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.ble_stack_init)
</UL>
<P><STRONG><a name="[41f]"></a>advertising_buttons_configure</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, bsp_btn_ble.o(i.advertising_buttons_configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = advertising_buttons_configure &rArr; bsp_event_to_button_action_assign
</UL>
<BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_event_to_button_action_assign
</UL>
<BR>[Called By]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;bsp_btn_ble_on_ble_evt
</UL>

<P><STRONG><a name="[3ee]"></a>is_manual_peripheral_setup_needed</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, system_nrf51.o(i.is_manual_peripheral_setup_needed))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[418]"></a>adv_data_encode</STRONG> (Thumb, 330 bytes, Stack size 40 bytes, ble_advdata.o(i.adv_data_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = adv_data_encode &rArr; uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_encode
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;name_encode
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_int_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advdata_set
</UL>

<P><STRONG><a name="[41c]"></a>conn_int_encode</STRONG> (Thumb, 126 bytes, Stack size 24 bytes, ble_advdata.o(i.conn_int_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = conn_int_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[41d]"></a>manuf_specific_data_encode</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, ble_advdata.o(i.manuf_specific_data_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = manuf_specific_data_encode &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[419]"></a>name_encode</STRONG> (Thumb, 106 bytes, Stack size 24 bytes, ble_advdata.o(i.name_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = name_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[41e]"></a>service_data_encode</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, ble_advdata.o(i.service_data_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = service_data_encode &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint16_encode
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[41a]"></a>uint16_encode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ble_advdata.o(i.uint16_encode))
<BR><BR>[Called By]<UL><LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;service_data_encode
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;manuf_specific_data_encode
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_int_encode
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[41b]"></a>uuid_list_encode</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, ble_advdata.o(i.uuid_list_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = uuid_list_encode &rArr; uuid_list_sized_encode
</UL>
<BR>[Calls]<UL><LI><a href="#[51b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_sized_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;adv_data_encode
</UL>

<P><STRONG><a name="[51b]"></a>uuid_list_sized_encode</STRONG> (Thumb, 162 bytes, Stack size 48 bytes, ble_advdata.o(i.uuid_list_sized_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = uuid_list_sized_encode
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uuid_list_encode
</UL>

<P><STRONG><a name="[452]"></a>ble_advertising_peer_address_clear</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, ble_advertising.o(i.ble_advertising_peer_address_clear))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ble_advertising_peer_address_clear
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_init
</UL>

<P><STRONG><a name="[456]"></a>peer_address_exists</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ble_advertising.o(i.peer_address_exists))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[457]"></a>whitelist_has_entries</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, ble_advertising.o(i.whitelist_has_entries))
<BR><BR>[Called By]<UL><LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_advertising_start
</UL>

<P><STRONG><a name="[45e]"></a>ble_ancs_verify_notification_format</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, ble_ancs_c.o(i.ble_ancs_verify_notification_format))
<BR><BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_request_attrs
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_notif
</UL>

<P><STRONG><a name="[458]"></a>cccd_configure</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ble_ancs_c.o(i.cccd_configure))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = cccd_configure &rArr; tx_buffer_process
</UL>
<BR>[Calls]<UL><LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tx_buffer_process
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_notif_source_notif_enable
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_data_source_notif_enable
</UL>

<P><STRONG><a name="[6f]"></a>db_discover_evt_handler</STRONG> (Thumb, 172 bytes, Stack size 56 bytes, ble_ancs_c.o(i.db_discover_evt_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = db_discover_evt_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_ancs_c.o(i.ble_ancs_c_init)
</UL>
<P><STRONG><a name="[45c]"></a>on_evt_gattc_notif</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, ble_ancs_c.o(i.on_evt_gattc_notif))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = on_evt_gattc_notif &rArr; parse_get_notif_attrs_response &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_notif
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_get_notif_attrs_response
</UL>
<BR>[Called By]<UL><LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_on_ble_evt
</UL>

<P><STRONG><a name="[4e4]"></a>parse_get_notif_attrs_response</STRONG> (Thumb, 244 bytes, Stack size 32 bytes, ble_ancs_c.o(i.parse_get_notif_attrs_response))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = parse_get_notif_attrs_response &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_decode
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_evt_gattc_notif
</UL>

<P><STRONG><a name="[4e3]"></a>parse_notif</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, ble_ancs_c.o(i.parse_notif))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = parse_notif &rArr; uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uint32_decode
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_verify_notification_format
</UL>
<BR>[Called By]<UL><LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_evt_gattc_notif
</UL>

<P><STRONG><a name="[45d]"></a>tx_buffer_process</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, ble_ancs_c.o(i.tx_buffer_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tx_buffer_process
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_get_notif_attrs
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cccd_configure
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_c_on_ble_evt
</UL>

<P><STRONG><a name="[460]"></a>uint32_decode</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ble_ancs_c.o(i.uint32_decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ancs_get_notif_attrs
<LI><a href="#[4e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_notif
<LI><a href="#[4e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;parse_get_notif_attrs_response
</UL>

<P><STRONG><a name="[46a]"></a>conn_params_negotiation</STRONG> (Thumb, 90 bytes, Stack size 24 bytes, ble_conn_params.o(i.conn_params_negotiation))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = conn_params_negotiation &rArr; app_timer_start
</UL>
<BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_conn_params_ok
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>
<BR>[Called By]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_conn_params_on_ble_evt
</UL>

<P><STRONG><a name="[495]"></a>is_conn_params_ok</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, ble_conn_params.o(i.is_conn_params_ok))
<BR><BR>[Called By]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;conn_params_negotiation
</UL>

<P><STRONG><a name="[70]"></a>update_timeout_handler</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, ble_conn_params.o(i.update_timeout_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = update_timeout_handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ble_conn_params.o(i.ble_conn_params_init)
</UL>
<P><STRONG><a name="[46f]"></a>characteristics_discover</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, ble_db_discovery.o(i.characteristics_discover))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = characteristics_discover
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_characteristic_discovery_rsp
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
</UL>

<P><STRONG><a name="[49a]"></a>descriptors_discover</STRONG> (Thumb, 132 bytes, Stack size 40 bytes, ble_db_discovery.o(i.descriptors_discover))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = descriptors_discover &rArr; is_desc_discovery_reqd
</UL>
<BR>[Calls]<UL><LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_desc_discovery_reqd
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_descriptor_discovery_rsp
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_characteristic_discovery_rsp
</UL>

<P><STRONG><a name="[46d]"></a>discovery_complete_evt_trigger</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, ble_db_discovery.o(i.discovery_complete_evt_trigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = discovery_complete_evt_trigger &rArr; registered_handler_get
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;registered_handler_get
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pending_user_evts_send
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_descriptor_discovery_rsp
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_characteristic_discovery_rsp
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
</UL>

<P><STRONG><a name="[470]"></a>discovery_error_evt_trigger</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, ble_db_discovery.o(i.discovery_error_evt_trigger))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = discovery_error_evt_trigger &rArr; registered_handler_get
</UL>
<BR>[Calls]<UL><LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;registered_handler_get
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pending_user_evts_send
</UL>
<BR>[Called By]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_srv_disc_completion
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_descriptor_discovery_rsp
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_characteristic_discovery_rsp
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
</UL>

<P><STRONG><a name="[49b]"></a>is_desc_discovery_reqd</STRONG> (Thumb, 66 bytes, Stack size 12 bytes, ble_db_discovery.o(i.is_desc_discovery_reqd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = is_desc_discovery_reqd
</UL>
<BR>[Called By]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptors_discover
</UL>

<P><STRONG><a name="[471]"></a>on_characteristic_discovery_rsp</STRONG> (Thumb, 204 bytes, Stack size 56 bytes, ble_db_discovery.o(i.on_characteristic_discovery_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = on_characteristic_discovery_rsp &rArr; on_srv_disc_completion &rArr; discovery_error_evt_trigger &rArr; registered_handler_get
</UL>
<BR>[Calls]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_srv_disc_completion
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_error_evt_trigger
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_complete_evt_trigger
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptors_discover
<LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;characteristics_discover
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
</UL>

<P><STRONG><a name="[46c]"></a>on_descriptor_discovery_rsp</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, ble_db_discovery.o(i.on_descriptor_discovery_rsp))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = on_descriptor_discovery_rsp &rArr; on_srv_disc_completion &rArr; discovery_error_evt_trigger &rArr; registered_handler_get
</UL>
<BR>[Calls]<UL><LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_srv_disc_completion
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_error_evt_trigger
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_complete_evt_trigger
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;descriptors_discover
</UL>
<BR>[Called By]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
</UL>

<P><STRONG><a name="[46e]"></a>on_srv_disc_completion</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, ble_db_discovery.o(i.on_srv_disc_completion))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = on_srv_disc_completion &rArr; discovery_error_evt_trigger &rArr; registered_handler_get
</UL>
<BR>[Calls]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_error_evt_trigger
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_descriptor_discovery_rsp
<LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_characteristic_discovery_rsp
<LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_db_discovery_on_ble_evt
</UL>

<P><STRONG><a name="[4a9]"></a>pending_user_evts_send</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, ble_db_discovery.o(i.pending_user_evts_send))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = pending_user_evts_send
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_error_evt_trigger
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_complete_evt_trigger
</UL>

<P><STRONG><a name="[4a8]"></a>registered_handler_get</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, ble_db_discovery.o(i.registered_handler_get))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = registered_handler_get
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_error_evt_trigger
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;discovery_complete_evt_trigger
</UL>

<P><STRONG><a name="[4ac]"></a>app_evt_notify</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.app_evt_notify))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[4ab]"></a>connection_instance_find</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, device_manager_peripheral.o(i.connection_instance_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = connection_instance_find
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[496]"></a>connection_instance_init</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, device_manager_peripheral.o(i.connection_instance_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = connection_instance_init
</UL>
<BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[49c]"></a>device_context_store</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, device_manager_peripheral.o(i.device_context_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = device_context_store &rArr; pstorage_block_identifier_get
</UL>
<BR>[Calls]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[49d]"></a>device_instance_allocate</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, device_manager_peripheral.o(i.device_instance_allocate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = device_instance_allocate &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[49e]"></a>device_instance_find</STRONG> (Thumb, 68 bytes, Stack size 32 bytes, device_manager_peripheral.o(i.device_instance_find))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = device_instance_find &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[49f]"></a>device_instance_free</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, device_manager_peripheral.o(i.device_instance_free))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = device_instance_free &rArr; pstorage_clear &rArr; cmd_queue_enqueue &rArr; cmd_process &rArr; clear_operation_execute &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
</UL>
<BR>[Called By]<UL><LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_device_delete_all
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[77]"></a>dm_pstorage_cb_handler</STRONG> (Thumb, 344 bytes, Stack size 96 bytes, device_manager_peripheral.o(i.dm_pstorage_cb_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = dm_pstorage_cb_handler &rArr; pstorage_block_identifier_get
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_status_bit_reset
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_evt_notify
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_block_identifier_get
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_handle_initialize
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(i.dm_init)
</UL>
<P><STRONG><a name="[9a]"></a>gattc_context_apply</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.gattc_context_apply))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[96]"></a>gattc_context_load</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.gattc_context_load))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[92]"></a>gattc_context_store</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.gattc_context_store))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[99]"></a>gatts_context_apply</STRONG> (Thumb, 160 bytes, Stack size 24 bytes, device_manager_peripheral.o(i.gatts_context_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = gatts_context_apply
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattsc_context_apply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[95]"></a>gatts_context_load</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, device_manager_peripheral.o(i.gatts_context_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = gatts_context_load &rArr; pstorage_load &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattsc_context_load
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[91]"></a>gatts_context_store</STRONG> (Thumb, 158 bytes, Stack size 48 bytes, device_manager_peripheral.o(i.gatts_context_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = gatts_context_store &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gattsc_context_store
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[9b]"></a>gattsc_context_apply</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, device_manager_peripheral.o(i.gattsc_context_apply))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = gattsc_context_apply &rArr; gatts_context_apply
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_apply
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[97]"></a>gattsc_context_load</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, device_manager_peripheral.o(i.gattsc_context_load))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = gattsc_context_load &rArr; gatts_context_load &rArr; pstorage_load &rArr; __aeabi_memcpy
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_load
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[93]"></a>gattsc_context_store</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, device_manager_peripheral.o(i.gattsc_context_store))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = gattsc_context_store &rArr; gatts_context_store &rArr; memcmp
</UL>
<BR>[Calls]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gatts_context_store
</UL>
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[98]"></a>no_service_context_apply</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.no_service_context_apply))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[94]"></a>no_service_context_load</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.no_service_context_load))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[90]"></a>no_service_context_store</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.no_service_context_store))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(.constdata)
</UL>
<P><STRONG><a name="[4a1]"></a>peer_instance_init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, device_manager_peripheral.o(i.peer_instance_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = peer_instance_init
</UL>
<BR>[Calls]<UL><LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;update_status_bit_reset
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;device_instance_free
<LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_init
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_ble_evt_handler
</UL>

<P><STRONG><a name="[73]"></a>storage_operation_dummy_handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.storage_operation_dummy_handler))
<BR>[Address Reference Count : 1]<UL><LI> device_manager_peripheral.o(i.device_context_store)
</UL>
<P><STRONG><a name="[4ae]"></a>update_status_bit_reset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, device_manager_peripheral.o(i.update_status_bit_reset))
<BR><BR>[Called By]<UL><LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;peer_instance_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dm_pstorage_cb_handler
</UL>

<P><STRONG><a name="[48b]"></a>ccid_send_error</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, ble_ccids.o(i.ccid_send_error))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ccid_send_error &rArr; ccid_send_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccid_send_packet
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_ccid_command
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_write
</UL>

<P><STRONG><a name="[48c]"></a>ccid_send_packet</STRONG> (Thumb, 150 bytes, Stack size 40 bytes, ble_ccids.o(i.ccid_send_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ccid_send_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_ccid_command
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_write
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_send_complete
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccid_send_status
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccid_send_error
</UL>

<P><STRONG><a name="[48d]"></a>ccid_send_status</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, ble_ccids.o(i.ccid_send_status))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = ccid_send_status &rArr; ccid_send_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccid_send_packet
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_ccid_command
</UL>

<P><STRONG><a name="[466]"></a>on_connect</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ble_ccids.o(i.on_connect))
<BR><BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ccids_on_ble_evt
</UL>

<P><STRONG><a name="[467]"></a>on_send_complete</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, ble_ccids.o(i.on_send_complete))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = on_send_complete &rArr; ccid_send_packet
</UL>
<BR>[Calls]<UL><LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccid_send_packet
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ccids_on_ble_evt
</UL>

<P><STRONG><a name="[465]"></a>on_write</STRONG> (Thumb, 340 bytes, Stack size 32 bytes, ble_ccids.o(i.on_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 232<LI>Call Chain = on_write &rArr; process_ccid_command &rArr; MotorRunTime &rArr; MotorRepeatRun &rArr; StopMotorRunTime &rArr; Set_Motor_LevelLow &rArr; PWM_SetValue &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[4e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;process_ccid_command
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccid_send_packet
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccid_send_error
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ccids_on_ble_evt
</UL>

<P><STRONG><a name="[4e5]"></a>process_ccid_command</STRONG> (Thumb, 914 bytes, Stack size 48 bytes, ble_ccids.o(i.process_ccid_command))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = process_ccid_command &rArr; MotorRunTime &rArr; MotorRepeatRun &rArr; StopMotorRunTime &rArr; Set_Motor_LevelLow &rArr; PWM_SetValue &rArr; app_pwm_channel_duty_set &rArr; app_pwm_channel_duty_ticks_set &rArr; pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotorRunTime
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccid_send_status
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccid_send_packet
<LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ccid_send_error
<LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;on_write
</UL>

<P><STRONG><a name="[463]"></a>rx_channel_char_add</STRONG> (Thumb, 122 bytes, Stack size 72 bytes, ble_ccids.o(i.rx_channel_char_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rx_channel_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ccids_init
</UL>

<P><STRONG><a name="[462]"></a>tx_channel_char_add</STRONG> (Thumb, 152 bytes, Stack size 80 bytes, ble_ccids.o(i.tx_channel_char_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = tx_channel_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_ccids_init
</UL>

<P><STRONG><a name="[47e]"></a>rx_media_char_add</STRONG> (Thumb, 122 bytes, Stack size 72 bytes, ble_media.o(i.rx_media_char_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = rx_media_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_media_init
</UL>

<P><STRONG><a name="[47f]"></a>tx_media_char_add</STRONG> (Thumb, 158 bytes, Stack size 72 bytes, ble_media.o(i.tx_media_char_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tx_media_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_media_init
</UL>

<P><STRONG><a name="[47c]"></a>body_sensor_location_char_add</STRONG> (Thumb, 130 bytes, Stack size 80 bytes, ble_hrs.o(i.body_sensor_location_char_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = body_sensor_location_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_init
</UL>

<P><STRONG><a name="[47b]"></a>heart_rate_measurement_char_add</STRONG> (Thumb, 172 bytes, Stack size 104 bytes, ble_hrs.o(i.heart_rate_measurement_char_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = heart_rate_measurement_char_add &rArr; hrm_encode &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;hrm_encode
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_init
</UL>

<P><STRONG><a name="[479]"></a>hrm_encode</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, ble_hrs.o(i.hrm_encode))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = hrm_encode &rArr; __aeabi_memmove
</UL>
<BR>[Calls]<UL><LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memmove
</UL>
<BR>[Called By]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_hrs_heart_rate_measurement_send
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;heart_rate_measurement_char_add
</UL>

<P><STRONG><a name="[1dc]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app_uart_fifo.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartInitial
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BootloaderUartInitial
</UL>

<P><STRONG><a name="[4cc]"></a>channel_free</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.channel_free))
<BR><BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_init
</UL>

<P><STRONG><a name="[4ce]"></a>channel_port_alloc</STRONG> (Thumb, 66 bytes, Stack size 20 bytes, nrf_drv_gpiote.o(i.channel_port_alloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = channel_port_alloc
</UL>
<BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
</UL>

<P><STRONG><a name="[4cf]"></a>channel_port_get</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.channel_port_get))
<BR><BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_trigger
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_addr_get
</UL>

<P><STRONG><a name="[4d1]"></a>pin_in_use_by_te</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_drv_gpiote.o(i.pin_in_use_by_te))
<BR><BR>[Called By]<UL><LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
</UL>

<P><STRONG><a name="[424]"></a>app_notify</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, pstorage.o(i.app_notify))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = app_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_end_procedure_run
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify_error_state_transit
</UL>

<P><STRONG><a name="[423]"></a>app_notify_error_state_transit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, pstorage.o(i.app_notify_error_state_transit))
<BR><BR>[Stack]<UL><LI>Max Depth = 24 + In Cycle
<LI>Call Chain = app_notify_error_state_transit &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_sys_event_handler
<LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_api_err_code_process
</UL>

<P><STRONG><a name="[48e]"></a>clear_operation_execute</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, pstorage.o(i.clear_operation_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = clear_operation_execute &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
</UL>

<P><STRONG><a name="[490]"></a>clear_post_processing_run</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, pstorage.o(i.clear_post_processing_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = clear_post_processing_run &rArr; command_end_procedure_run &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_end_procedure_run
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tail_restore_state_run
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_restore_state_run
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_success_run
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_page_erase_state_run
</UL>

<P><STRONG><a name="[492]"></a>cmd_process</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, pstorage.o(i.cmd_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = cmd_process &rArr; clear_operation_execute &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_operation_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_enqueue
</UL>

<P><STRONG><a name="[494]"></a>cmd_queue_element_init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, pstorage.o(i.cmd_queue_element_init))
<BR><BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_end_procedure_run
</UL>

<P><STRONG><a name="[493]"></a>cmd_queue_enqueue</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, pstorage.o(i.cmd_queue_enqueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = cmd_queue_enqueue &rArr; cmd_process &rArr; clear_operation_execute &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_store
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
</UL>

<P><STRONG><a name="[491]"></a>command_end_procedure_run</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, pstorage.o(i.command_end_procedure_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = command_end_procedure_run &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_queue_element_init
<LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_success_run
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_post_processing_run
</UL>

<P><STRONG><a name="[a3]"></a>data_page_erase_state_run</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, pstorage.o(i.data_page_erase_state_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = data_page_erase_state_run &rArr; clear_post_processing_run &rArr; command_end_procedure_run &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_err_busy_process
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_page_erase_required
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_post_processing_run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[a2]"></a>data_to_swap_write_state_run</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, pstorage.o(i.data_to_swap_write_state_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = data_to_swap_write_state_run &rArr; swap_sub_state_err_busy_process
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_err_busy_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[4b1]"></a>flash_api_err_code_process</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, pstorage.o(i.flash_api_err_code_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = flash_api_err_code_process &rArr; app_notify_error_state_transit &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify_error_state_transit
</UL>
<BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
</UL>

<P><STRONG><a name="[4b2]"></a>flash_operation_success_run</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, pstorage.o(i.flash_operation_success_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = flash_operation_success_run &rArr; clear_post_processing_run &rArr; command_end_procedure_run &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_cmd_flash_write_execute
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_err_busy_process
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_page_erase_required
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_end_procedure_run
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_post_processing_run
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_sys_event_handler
</UL>

<P><STRONG><a name="[4b5]"></a>flash_page_erase</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, pstorage.o(i.flash_page_erase))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = flash_page_erase &rArr; flash_api_err_code_process &rArr; app_notify_error_state_transit &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_api_err_code_process
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_swap_erase_entry_run
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_erase_data_page_entry_run
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
</UL>

<P><STRONG><a name="[4b6]"></a>flash_write</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, pstorage.o(i.flash_write))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = flash_write &rArr; flash_api_err_code_process &rArr; app_notify_error_state_transit &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_api_err_code_process
</UL>
<BR>[Called By]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_cmd_flash_write_execute
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_write_data_swap_entry_run
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_restore_tail_entry_run
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_restore_head_entry_run
</UL>

<P><STRONG><a name="[a5]"></a>head_restore_state_run</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, pstorage.o(i.head_restore_state_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = head_restore_state_run &rArr; clear_post_processing_run &rArr; command_end_procedure_run &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_err_busy_process
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_page_erase_required
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_post_processing_run
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[497]"></a>is_page_erase_required</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, pstorage.o(i.is_page_erase_required))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = is_page_erase_required &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_restore_state_run
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_success_run
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_page_erase_state_run
</UL>

<P><STRONG><a name="[502]"></a>is_word_aligned</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pstorage.o(i.is_word_aligned))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_update
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_store
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_load
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_clear
</UL>

<P><STRONG><a name="[4b4]"></a>main_state_err_busy_process</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pstorage.o(i.main_state_err_busy_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = main_state_err_busy_process &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_success_run
</UL>

<P><STRONG><a name="[503]"></a>pstorage_flash_page_end</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, pstorage.o(i.pstorage_flash_page_end))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = pstorage_flash_page_end &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_write_data_swap_entry_run
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_swap_erase_entry_run
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_restore_tail_entry_run
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_restore_head_entry_run
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
</UL>

<P><STRONG><a name="[48f]"></a>pstorage_flash_page_size</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, pstorage.o(i.pstorage_flash_page_size))
<BR><BR>[Called By]<UL><LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_init
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_cmd_flash_write_execute
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_write_data_swap_entry_run
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_swap_erase_entry_run
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_restore_tail_entry_run
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_restore_head_entry_run
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_data_erase_swap_entry_run
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_page_erase_required
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_restore_state_run
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_operation_execute
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_register
</UL>

<P><STRONG><a name="[425]"></a>sm_state_change</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, pstorage.o(i.sm_state_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + In Cycle
<LI>Call Chain = sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;store_cmd_flash_write_execute
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_data_erase_swap_entry_run
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
</UL>
<BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_sys_event_handler
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main_state_err_busy_process
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_success_run
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;command_end_procedure_run
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cmd_process
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_post_processing_run
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_operation_execute
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_notify_error_state_transit
</UL>

<P><STRONG><a name="[50b]"></a>state_data_erase_swap_entry_run</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, pstorage.o(i.state_data_erase_swap_entry_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = state_data_erase_swap_entry_run &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
<LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
</UL>

<P><STRONG><a name="[9e]"></a>state_erase_data_page_entry_run</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, pstorage.o(i.state_erase_data_page_entry_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = state_erase_data_page_entry_run &rArr; flash_page_erase &rArr; flash_api_err_code_process &rArr; app_notify_error_state_transit &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[a0]"></a>state_restore_head_entry_run</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, pstorage.o(i.state_restore_head_entry_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = state_restore_head_entry_run &rArr; flash_write &rArr; flash_api_err_code_process &rArr; app_notify_error_state_transit &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>state_restore_tail_entry_run</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, pstorage.o(i.state_restore_tail_entry_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = state_restore_tail_entry_run &rArr; flash_write &rArr; flash_api_err_code_process &rArr; app_notify_error_state_transit &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>state_swap_erase_entry_run</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, pstorage.o(i.state_swap_erase_entry_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = state_swap_erase_entry_run &rArr; flash_page_erase &rArr; flash_api_err_code_process &rArr; app_notify_error_state_transit &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_page_erase
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[9d]"></a>state_write_data_swap_entry_run</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, pstorage.o(i.state_write_data_swap_entry_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = state_write_data_swap_entry_run &rArr; flash_write &rArr; flash_api_err_code_process &rArr; app_notify_error_state_transit &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[503]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_end
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[4b3]"></a>store_cmd_flash_write_execute</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, pstorage.o(i.store_cmd_flash_write_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = store_cmd_flash_write_execute &rArr; flash_write &rArr; flash_api_err_code_process &rArr; app_notify_error_state_transit &rArr;  sm_state_change (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_flash_page_size
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_write
</UL>
<BR>[Called By]<UL><LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;flash_operation_success_run
</UL>

<P><STRONG><a name="[a1]"></a>swap_erase_state_run</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, pstorage.o(i.swap_erase_state_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = swap_erase_state_run &rArr; swap_sub_state_err_busy_process
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_err_busy_process
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[499]"></a>swap_sub_state_err_busy_process</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, pstorage.o(i.swap_sub_state_err_busy_process))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = swap_sub_state_err_busy_process
</UL>
<BR>[Calls]<UL><LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_state_change
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tail_restore_state_run
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_erase_state_run
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_restore_state_run
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_to_swap_write_state_run
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_page_erase_state_run
</UL>

<P><STRONG><a name="[498]"></a>swap_sub_state_state_change</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, pstorage.o(i.swap_sub_state_state_change))
<BR><BR>[Called By]<UL><LI><a href="#[504]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pstorage_sys_event_handler
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_err_busy_process
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_erase_state_run
<LI><a href="#[50b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_data_erase_swap_entry_run
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;head_restore_state_run
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_to_swap_write_state_run
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;data_page_erase_state_run
</UL>

<P><STRONG><a name="[a4]"></a>tail_restore_state_run</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, pstorage.o(i.tail_restore_state_run))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = tail_restore_state_run &rArr; clear_post_processing_run &rArr; command_end_procedure_run &rArr; sm_state_change &rArr;  cmd_process (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;swap_sub_state_err_busy_process
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_post_processing_run
</UL>
<BR>[Address Reference Count : 1]<UL><LI> pstorage.o(.constdata)
</UL>
<P><STRONG><a name="[373]"></a>sm_state_change</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, spi_slave.o(i.sm_state_change))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = sm_state_change &rArr; state_entry_action_execute
</UL>
<BR>[Calls]<UL><LI><a href="#[50c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;state_entry_action_execute
</UL>
<BR>[Called By]<UL><LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_slave_buffers_set
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI1_TWI1_IRQHandler
</UL>

<P><STRONG><a name="[50c]"></a>state_entry_action_execute</STRONG> (Thumb, 84 bytes, Stack size 24 bytes, spi_slave.o(i.state_entry_action_execute))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = state_entry_action_execute
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sm_state_change
</UL>

<P><STRONG><a name="[42d]"></a>app_pwm_channel_init</STRONG> (Thumb, 200 bytes, Stack size 40 bytes, app_pwm.o(i.app_pwm_channel_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = app_pwm_channel_init &rArr; nrf_drv_gpiote_out_init &rArr; channel_port_alloc
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_disable
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_assign
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_alloc
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_event_address_get
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_trigger
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_enable
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_addr_get
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_init
</UL>
<BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[4d7]"></a>nrf_drv_ppi_channel_include_in_group</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, app_pwm.o(i.nrf_drv_ppi_channel_include_in_group))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Called By]<UL><LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_m
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_0or100
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
</UL>

<P><STRONG><a name="[444]"></a>pan73_workaround</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, app_pwm.o(i.pan73_workaround))
<BR><BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_uninit
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[505]"></a>pwm_channel_ppi_disable</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, app_pwm.o(i.pwm_channel_ppi_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pwm_channel_ppi_disable &rArr; nrf_drv_ppi_channel_disable &rArr; is_app_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_0or100
</UL>

<P><STRONG><a name="[43f]"></a>pwm_dealloc</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, app_pwm.o(i.pwm_dealloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pwm_dealloc &rArr; nrf_drv_ppi_group_free
</UL>
<BR>[Calls]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_free
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_free
<LI><a href="#[4e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_uninit
<LI><a href="#[4d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_uninit
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_uninit
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_init
</UL>

<P><STRONG><a name="[506]"></a>pwm_ppi_disable</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, app_pwm.o(i.pwm_ppi_disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = pwm_ppi_disable &rArr; nrf_drv_ppi_channel_disable &rArr; is_app_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_disable
</UL>
<BR>[Called By]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_n_to_0or100
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_n
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_transition_0or100_to_0or100
</UL>

<P><STRONG><a name="[428]"></a>pwm_transition_0or100_to_0or100</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, app_pwm.o(i.pwm_transition_0or100_to_0or100))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = pwm_transition_0or100_to_0or100 &rArr; pwm_ppi_disable &rArr; nrf_drv_ppi_channel_disable &rArr; is_app_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_ppi_disable
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_channel_ppi_disable
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare
<LI><a href="#[507]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_force
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_set
</UL>

<P><STRONG><a name="[429]"></a>pwm_transition_0or100_to_n</STRONG> (Thumb, 134 bytes, Stack size 40 bytes, app_pwm.o(i.pwm_transition_0or100_to_n))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = pwm_transition_0or100_to_n &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_enable
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_assign
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_ppi_disable
<LI><a href="#[505]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_channel_ppi_disable
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_include_in_group
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_event_address_get
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_set
</UL>

<P><STRONG><a name="[42a]"></a>pwm_transition_n_to_0or100</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, app_pwm.o(i.pwm_transition_n_to_0or100))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pwm_transition_n_to_0or100 &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_enable
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_assign
<LI><a href="#[506]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm_ppi_disable
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_include_in_group
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_event_address_get
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_set
</UL>

<P><STRONG><a name="[42b]"></a>pwm_transition_n_to_m</STRONG> (Thumb, 154 bytes, Stack size 40 bytes, app_pwm.o(i.pwm_transition_n_to_m))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = pwm_transition_n_to_m &rArr; nrf_drv_ppi_channel_include_in_group &rArr; nrf_drv_ppi_channels_include_in_group
</UL>
<BR>[Calls]<UL><LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_enable
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_disable
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_assign
<LI><a href="#[4d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_include_in_group
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare_event_address_get
<LI><a href="#[4df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_timer_compare
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_gpiote_out_task_addr_get
</UL>
<BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_pwm_channel_duty_ticks_set
</UL>

<P><STRONG><a name="[4bb]"></a>are_app_channels</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nrf_drv_ppi.o(i.are_app_channels))
<BR><BR>[Called By]<UL><LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_include_in_group
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;is_app_channel
</UL>

<P><STRONG><a name="[4d2]"></a>current_int_priority_get</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, nrf_drv_ppi.o(i.current_int_priority_get))
<BR><BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_free
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_alloc
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_include_in_group
<LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_free
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_alloc
</UL>

<P><STRONG><a name="[4d3]"></a>is_allocated_channel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_drv_ppi.o(i.is_allocated_channel))
<BR><BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_enable
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_disable
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_assign
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_alloc
</UL>

<P><STRONG><a name="[4da]"></a>is_allocated_group</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, nrf_drv_ppi.o(i.is_allocated_group))
<BR><BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_free
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_enable
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_alloc
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_include_in_group
</UL>

<P><STRONG><a name="[4ba]"></a>is_app_channel</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, nrf_drv_ppi.o(i.is_app_channel))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = is_app_channel
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;are_app_channels
</UL>
<BR>[Called By]<UL><LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_enable
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_disable
</UL>

<P><STRONG><a name="[4d9]"></a>is_app_group</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nrf_drv_ppi.o(i.is_app_group))
<BR><BR>[Called By]<UL><LI><a href="#[4de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_free
<LI><a href="#[4dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_enable
<LI><a href="#[4dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_group_disable
<LI><a href="#[4db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_remove_from_group
<LI><a href="#[4d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channels_include_in_group
</UL>

<P><STRONG><a name="[4d4]"></a>is_programmable_app_channel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, nrf_drv_ppi.o(i.is_programmable_app_channel))
<BR><BR>[Called By]<UL><LI><a href="#[4d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_free
<LI><a href="#[4d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_enable
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_disable
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nrf_drv_ppi_channel_assign
</UL>

<P><STRONG><a name="[447]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, app_timer.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
</UL>

<P><STRONG><a name="[379]"></a>compare_reg_update</STRONG> (Thumb, 140 bytes, Stack size 24 bytes, app_timer.o(i.compare_reg_update))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = compare_reg_update &rArr; rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
<LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rtc1_stop
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[375]"></a>elapsed_ticks_acquire</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, app_timer.o(i.elapsed_ticks_acquire))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = elapsed_ticks_acquire
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[377]"></a>expired_timers_handler</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, app_timer.o(i.expired_timers_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = expired_timers_handler
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[376]"></a>list_deletions_handler</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, app_timer.o(i.list_deletions_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = list_deletions_handler &rArr; timer_list_remove
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[378]"></a>list_insertions_handler</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, app_timer.o(i.list_insertions_handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = list_insertions_handler &rArr; timer_list_insert
</UL>
<BR>[Calls]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SWI0_IRQHandler
</UL>

<P><STRONG><a name="[446]"></a>rtc1_stop</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, app_timer.o(i.rtc1_stop))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rtc1_stop
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___11_app_timer_c_cd27f9c3__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_init
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;compare_reg_update
</UL>

<P><STRONG><a name="[44a]"></a>timer_list_handler_sched</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, app_timer.o(i.timer_list_handler_sched))
<BR><BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_timeouts_check
</UL>

<P><STRONG><a name="[4bd]"></a>timer_list_insert</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, app_timer.o(i.timer_list_insert))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = timer_list_insert
</UL>
<BR>[Called By]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_insertions_handler
</UL>

<P><STRONG><a name="[4bc]"></a>timer_list_remove</STRONG> (Thumb, 104 bytes, Stack size 16 bytes, app_timer.o(i.timer_list_remove))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = timer_list_remove
</UL>
<BR>[Called By]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;list_deletions_handler
</UL>

<P><STRONG><a name="[34a]"></a>timer_timeouts_check</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, app_timer.o(i.timer_timeouts_check))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = timer_timeouts_check
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;timer_list_handler_sched
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC1_IRQHandler
</UL>

<P><STRONG><a name="[448]"></a>user_id_get</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, app_timer.o(i.user_id_get))
<BR><BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>

<P><STRONG><a name="[449]"></a>user_op_alloc</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, app_timer.o(i.user_op_alloc))
<BR><BR>[Called By]<UL><LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_stop
<LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_timer_start
</UL>

<P><STRONG><a name="[4fe]"></a>current_int_priority_get</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, osal.o(i.current_int_priority_get))
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsRunSystem
</UL>

<P><STRONG><a name="[4f6]"></a>current_int_priority_get</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, osalmessage.o(i.current_int_priority_get))
<BR><BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgReceive
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgPush
<LI><a href="#[4f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgExtract
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgEnqueue
</UL>

<P><STRONG><a name="[4f7]"></a>pS_OsMsgEnqueuePush</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, osalmessage.o(i.pS_OsMsgEnqueuePush))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsSetTaskEvent
<LI><a href="#[4f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgPush
<LI><a href="#[4f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgEnqueue
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgDeallocate
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsMsgSend
</UL>

<P><STRONG><a name="[4ee]"></a>current_int_priority_get</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, osaltaskevent.o(i.current_int_priority_get))
<BR><BR>[Called By]<UL><LI><a href="#[4e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsSetTaskEvent
<LI><a href="#[4e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pS_OsClearTaskEvent
</UL>

<P><STRONG><a name="[4c7]"></a>current_int_priority_get</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, heap_4.o(i.current_int_priority_get))
<BR><BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_4_malloc
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_4_free
</UL>

<P><STRONG><a name="[4ca]"></a>prvHeapInit</STRONG> (Thumb, 64 bytes, Stack size 12 bytes, heap_4.o(i.prvHeapInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvHeapInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_4_malloc
</UL>

<P><STRONG><a name="[4c8]"></a>prvInsertBlockIntoFreeList</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, heap_4.o(i.prvInsertBlockIntoFreeList))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = prvInsertBlockIntoFreeList
</UL>
<BR>[Called By]<UL><LI><a href="#[4c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_4_malloc
<LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_4_free
</UL>

<P><STRONG><a name="[4e6]"></a>monthLength</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, clockdriver.o(i.monthLength))
<BR><BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_ConvertUTCTime
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;osal_ConvertUTCSecs
</UL>

<P><STRONG><a name="[482]"></a>rx_char_add</STRONG> (Thumb, 158 bytes, Stack size 80 bytes, ble_nus.o(i.rx_char_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rx_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_init
</UL>

<P><STRONG><a name="[481]"></a>tx_char_add</STRONG> (Thumb, 128 bytes, Stack size 72 bytes, ble_nus.o(i.tx_char_add))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = tx_char_add
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ble_nus_init
</UL>

<P><STRONG><a name="[27f]"></a>nrf_gpio_cfg_sense_input</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hwtask.o(i.nrf_gpio_cfg_sense_input))
<BR><BR>[Called By]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gpio_Interrupt_Initial
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StopKeyScan
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EnableUsbPinInt
</UL>

<P><STRONG><a name="[265]"></a>nrf_gpio_pin_dir_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hwtask.o(i.nrf_gpio_pin_dir_set))
<BR><BR>[Called By]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StartKeyScan
<LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableReset
<LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DisableKl17
</UL>

<P><STRONG><a name="[1ff]"></a>nrf_gpio_pin_read</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hwtask.o(i.nrf_gpio_pin_read))
<BR><BR>[Called By]<UL><LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQ_USB_Recovery
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQ_TOUCH_Recovery
<LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIOTE_IRQHandler
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTouchKeyEvent
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckCypressEvent
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckChargerConnectEvent
</UL>

<P><STRONG><a name="[385]"></a>uint16_encode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, datastoreinside.o(i.uint16_encode))
<BR><BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetMaxCnt
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SavePhoneBookToBuf
</UL>

<P><STRONG><a name="[29d]"></a>uint32_decode</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, datastoreinside.o(i.uint32_decode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = uint32_decode
</UL>
<BR>[Calls]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplySportData
</UL>

<P><STRONG><a name="[39e]"></a>uint32_encode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, datastoreinside.o(i.uint32_encode))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetDisplySportData
</UL>

<P><STRONG><a name="[186]"></a>BasicSendData</STRONG> (Thumb, 78 bytes, Stack size 80 bytes, neul18cmdpackage.o(i.BasicSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = BasicSendData &rArr; HwSendDataToBt &rArr; BlePktSendComplete &rArr; osal_set_event &rArr; pS_OsSetTaskEvent
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HwSendDataToBt
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRspCmd
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSleepDataCmd
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSportDataCmd
<LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendRecordWorkDataCmd
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendHeartRateDataCmd
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VolumeValueCB
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UserHabitCmdCB
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateProgMsgCmdCB
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateDeviceSwitchSettingCB
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeOrderCmdCB
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetUnitFormat
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSleepModeCB
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLanguageFormat
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SensorTest
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SedentarinessRemindCB
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReminderNumberCmdCB
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPayRecords
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PersonInitCmdCB
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoVibrationIntensityCB
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MotoOrderValueCB
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MenuOrderCmdCB
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HeartRateAlarmCB
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetWatchIdCmdCB
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetVersionMsgCmdCB
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportTotalCntCB
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetSportModeCB
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetRecordWorkTotalCntCB
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetHeartRateTotalCntCB
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDisplaySportDataCmdCB
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDateTimeTest
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBatValueCmdCB
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetBT4AddrTest
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DeviceCommIDCmdCB
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DateTimeSettingCmdCB
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DailyGoalSettingCmdCB
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BindingEndCmdCB
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BindingBeginCmdCB
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BaseKcalTypeCB
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BacklightSettingCmdCB
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AutoHeartRateCB
</UL>

<P><STRONG><a name="[189]"></a>BC5_Response</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, bc5cmdpackage.o(i.BC5_Response))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = BC5_Response &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Bc5DataParseHandler
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5PhoneInfoCB
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NotifyBc5BtInfoCB
</UL>

<P><STRONG><a name="[18c]"></a>BC5_UartSendData</STRONG> (Thumb, 84 bytes, Stack size 56 bytes, bc5cmdpackage.o(i.BC5_UartSendData))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = BC5_UartSendData &rArr; UART_Send
</UL>
<BR>[Calls]<UL><LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Send
<LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetStandbyModeCmd
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetRingModeCmd
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetBtPairCmd
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetVolumeCmd
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetStopRingToneCmd
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetMicCmd
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetCallOpCmd
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SendDtmfNumber
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BC5_SetTonesCmd
</UL>

<P><STRONG><a name="[401]"></a>WaitForTimeout</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, protocol.o(i.WaitForTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = WaitForTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___10_protocol_c_KL17_VER__nrf_delay_us
</UL>
<BR>[Called By]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_receive_data
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_package
</UL>

<P><STRONG><a name="[4cb]"></a>notify_event_message</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, protocol.o(i.notify_event_message))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = notify_event_message &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendMsg
</UL>
<BR>[Called By]<UL><LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_receive_package
</UL>

<P><STRONG><a name="[511]"></a>spi_receive_package</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, protocol.o(i.spi_receive_package))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = spi_receive_package &rArr; notify_event_message &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[4cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;notify_event_message
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_slave_event_handle
</UL>

<P><STRONG><a name="[50f]"></a>spi_slave_buffers_init</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, protocol.o(i.spi_slave_buffers_init))
<BR><BR>[Called By]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_init
<LI><a href="#[514]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_send_package
</UL>

<P><STRONG><a name="[8f]"></a>spi_slave_event_handle</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, protocol.o(i.spi_slave_event_handle))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = spi_slave_event_handle &rArr; spi_receive_package &rArr; notify_event_message &rArr; SendMsg &rArr; pS_OsMsgSend &rArr; pS_OsMsgEnqueuePush &rArr; pS_OsMsgDeallocate &rArr; pS_OsFree &rArr; mem_4_free &rArr; prvInsertBlockIntoFreeList
</UL>
<BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;app_error_handler
<LI><a href="#[510]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_slave_buffers_set
<LI><a href="#[511]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;spi_receive_package
</UL>
<BR>[Address Reference Count : 1]<UL><LI> protocol.o(i.spi_init)
</UL>
<P><STRONG><a name="[288]"></a>uint32_encode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, kl17cmdpackage.o(i.uint32_encode))
<BR><BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Display_Ancs_LayOut
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Write
<LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Read
<LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Erase
</UL>

<P><STRONG><a name="[174]"></a>Ancs_crc16_Compute</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, ancscrc.o(i.Ancs_crc16_Compute))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Ancs_crc16_Compute
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AncsSaveToFlash
</UL>

<P><STRONG><a name="[3ac]"></a>uint16_encode</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, ui.o(i.uint16_encode))
<BR><BR>[Called By]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowStandby
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSportOverview
<LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepOverviewTwo
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepOverviewThree
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSleepOverviewOne
<LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRecordWorkoutsRUN
</UL>

<P><STRONG><a name="[35c]"></a>uint32_encode</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, ui.o(i.uint32_encode))
<BR><BR>[Called By]<UL><LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshTimeUIFun
<LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowSportOverview
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowRecordResult
</UL>

<P><STRONG><a name="[340]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, extspiflash.o(i.nrf_gpio_pin_clear))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ChipErase
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatusRegister
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockGlobalBlockProtection
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_TP_Firmware
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PageWrite
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Write
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Suspend
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Resume
</UL>

<P><STRONG><a name="[3cb]"></a>nrf_gpio_pin_dir_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, extspiflash.o(i.nrf_gpio_pin_dir_set))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatusRegister
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_TP_Firmware
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Enable_IO
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Disable_IO
</UL>

<P><STRONG><a name="[342]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, extspiflash.o(i.nrf_gpio_pin_set))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_4KSector_Erase
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_ChipErase
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteEnable
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WaitForStatusRegister
<LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockGlobalBlockProtection
<LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Read_TP_Firmware
<LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_PageWrite
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpiFlash_Enable_IO
<LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Write
<LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Read
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Suspend
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Power_Resume
</UL>

<P><STRONG><a name="[2ed]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, axisi2c.o(i.nrf_gpio_pin_clear))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockI2c
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cStop
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cStart
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cSendByte
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cReceive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cNoAck
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cAck
</UL>

<P><STRONG><a name="[2ec]"></a>nrf_gpio_pin_dir_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, axisi2c.o(i.nrf_gpio_pin_dir_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockI2c
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cStop
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cStart
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cSendByte
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cReceive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cNoAck
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cAck
</UL>

<P><STRONG><a name="[2ee]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, axisi2c.o(i.nrf_gpio_pin_set))
<BR><BR>[Called By]<UL><LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UnlockI2c
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cStop
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cStart
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cSendByte
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cReceive
<LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cNoAck
<LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2cAck
</UL>

<P><STRONG><a name="[252]"></a>TpInit</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, cypressi2c.o(i.TpInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TpInit &rArr; ZT75xx_I2cWriteREG &rArr; ZT75xx_I2cWriteDATA &rArr; C_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteCMD
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteREG
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cReadData
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_DELAY_MS
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_US
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CInit
</UL>

<P><STRONG><a name="[1e4]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cypressi2c.o(i.nrf_gpio_pin_clear))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CInit
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_power_control
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStop
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStart
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cSendByte
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cReceive
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cNoAck
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cAck
</UL>

<P><STRONG><a name="[1e9]"></a>nrf_gpio_pin_dir_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, cypressi2c.o(i.nrf_gpio_pin_dir_set))
<BR><BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStop
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStart
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cSendByte
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cReceive
</UL>

<P><STRONG><a name="[1e5]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, cypressi2c.o(i.nrf_gpio_pin_set))
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CypressI2CInit
<LI><a href="#[517]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;zinitix_power_control
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStop
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cStart
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cSendByte
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cReceive
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cNoAck
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_I2cAck
</UL>

<P><STRONG><a name="[516]"></a>ts_power_sequence</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, cypressi2c.o(i.ts_power_sequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = ts_power_sequence &rArr; ZT75xx_I2cWriteREG &rArr; ZT75xx_I2cWriteDATA &rArr; C_I2cSendByte
</UL>
<BR>[Calls]<UL><LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteCMD
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cWriteREG
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ZT75xx_I2cReadData
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;C_DELAY_MS
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DELAY_US
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ts_upgrade_firmware
</UL>

<P><STRONG><a name="[408]"></a>_calcuate_framing_crc16</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, bl_private.o(i._calcuate_framing_crc16))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = _calcuate_framing_crc16 &rArr; _crc16_update
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_crc16_update
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_construct_data_packet
<LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_read_packet_and_send_sync
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_construct_command_packet_w2Args
</UL>

<P><STRONG><a name="[411]"></a>_read_packet</STRONG> (Thumb, 156 bytes, Stack size 40 bytes, bl_private.o(i._read_packet))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = _read_packet &rArr; uart_recv_blocking &rArr; nrf_delay_ms
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_recv_blocking
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sys_delay_in_ms
</UL>
<BR>[Called By]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_read_packet_and_send_sync
</UL>

<P><STRONG><a name="[2cd]"></a>nrf_gpio_pin_clear</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, as7000_i2c.o(i.nrf_gpio_pin_clear))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cStop
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cStart
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cSendByte
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cReceive
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cNoAck
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cAck
</UL>

<P><STRONG><a name="[2cb]"></a>nrf_gpio_pin_dir_set</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, as7000_i2c.o(i.nrf_gpio_pin_dir_set))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cStop
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cStart
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cSendByte
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cReceive
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cNoAck
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cAck
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_Comms_init
</UL>

<P><STRONG><a name="[2ce]"></a>nrf_gpio_pin_set</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, as7000_i2c.o(i.nrf_gpio_pin_set))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cStop
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cStart
<LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cSendByte
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cReceive
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cNoAck
<LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HRM_I2cAck
</UL>

<P><STRONG><a name="[12d]"></a>ResumeOriginSize</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, step_counter.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ResumeOriginSize
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vStepCounter_25hz
</UL>

<P><STRONG><a name="[40d]"></a>_fp_digits</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[407]"></a>_printf_core</STRONG> (Thumb, 1754 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[410]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[40f]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[6c]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
